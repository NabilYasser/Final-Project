/*
###############################################################
#  Generated by:      Cadence Innovus 15.20-p005_1
#  OS:                Linux x86_64(Host ID IC)
#  Generated on:      Fri Aug 26 06:21:39 2022
#  Design:            Design_Top
#  Command:           saveNetlist export/SYS_TOP.v
###############################################################
*/
module Design_Top (
	scan_clk, 
	scan_rst, 
	test_mode, 
	SE, 
	SI, 
	SO, 
	REF_CLK, 
	UART_CLK, 
	RST, 
	RX_IN, 
	TX_OUT);
   input scan_clk;
   input scan_rst;
   input test_mode;
   input SE;
   input [2:0] SI;
   output [2:0] SO;
   input REF_CLK;
   input UART_CLK;
   input RST;
   input RX_IN;
   output TX_OUT;

   // Internal wires
   wire FE_PHN22_scan_rst;
   wire scan_clk__L4_N0;
   wire scan_clk__L3_N0;
   wire scan_clk__L2_N1;
   wire scan_clk__L2_N0;
   wire scan_clk__L1_N0;
   wire UART_CLK__L2_N0;
   wire UART_CLK__L1_N0;
   wire UART_CLK_MUX__L9_N1;
   wire UART_CLK_MUX__L9_N0;
   wire UART_CLK_MUX__L8_N0;
   wire UART_CLK_MUX__L7_N0;
   wire UART_CLK_MUX__L6_N0;
   wire UART_CLK_MUX__L5_N0;
   wire UART_CLK_MUX__L4_N0;
   wire UART_CLK_MUX__L3_N0;
   wire UART_CLK_MUX__L2_N0;
   wire UART_CLK_MUX__L1_N0;
   wire REF_CLK__L2_N0;
   wire REF_CLK__L1_N0;
   wire REF_CLK_MUX__L2_N3;
   wire REF_CLK_MUX__L2_N2;
   wire REF_CLK_MUX__L2_N1;
   wire REF_CLK_MUX__L2_N0;
   wire REF_CLK_MUX__L1_N0;
   wire FE_OFN20_REF_CLK_Sync_RST_MUX;
   wire FE_OFN18_SE;
   wire FE_OFN17_SE;
   wire FE_OFN16_SE;
   wire REF_CLK_MUX;
   wire UART_CLK_MUX;
   wire TX_CLK;
   wire TX_CLK_MUX;
   wire RST_MUX;
   wire REF_CLK_Sync_RST;
   wire REF_CLK_Sync_RST_MUX;
   wire UART_CLK_Sync_RST;
   wire UART_CLK_Sync_RST_MUX;
   wire ALU_Out_Valid_Top;
   wire ALU_Enable_Top;
   wire CLK_Gate_En_Top;
   wire REG_WrEn_Top;
   wire REG_RdEn_Top;
   wire RX_Valid_Syn;
   wire RX_Valid_Top;
   wire REG_Rd_Valid_Top;
   wire Tx_Busy_Top;
   wire Tx_Valid_Top_UnSyn;
   wire ALU_CLK;
   wire TX_IN_V_Top_Syn;
   wire Tx_Busy_UnSyn;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n11;
   wire n12;
   wire [3:0] ALU_Fun_Top;
   wire [3:0] REG_Address_Top;
   wire [7:0] REG_WrData_Top;
   wire [7:0] Rx_P_Data_Syn;
   wire [7:0] Rx_P_Data_Top;
   wire [15:0] ALU_Out_Top;
   wire [7:0] REG_RdData_Top;
   wire [7:0] Tx_P_Data_Top_UnSyn;
   wire [7:0] Operand_A_Top;
   wire [7:0] Operand_B_Top;
   wire [6:0] REG2_UART_Config_Top;
   wire [3:0] REG3_DIV_Top;
   wire [7:0] TX_IN_P_Top_Syn;

   DLY4X1M FE_PHC22_scan_rst (.A(scan_rst),
	.Y(FE_PHN22_scan_rst));
   CLKINVX40M scan_clk__L4_I0 (.A(scan_clk__L3_N0),
	.Y(scan_clk__L4_N0));
   CLKBUFX20M scan_clk__L3_I0 (.A(scan_clk__L2_N1),
	.Y(scan_clk__L3_N0));
   CLKBUFX20M scan_clk__L2_I1 (.A(scan_clk__L1_N0),
	.Y(scan_clk__L2_N1));
   CLKINVX32M scan_clk__L2_I0 (.A(scan_clk__L1_N0),
	.Y(scan_clk__L2_N0));
   CLKINVX40M scan_clk__L1_I0 (.A(scan_clk),
	.Y(scan_clk__L1_N0));
   CLKINVX32M UART_CLK__L2_I0 (.A(UART_CLK__L1_N0),
	.Y(UART_CLK__L2_N0));
   CLKINVX40M UART_CLK__L1_I0 (.A(UART_CLK),
	.Y(UART_CLK__L1_N0));
   CLKBUFX20M UART_CLK_MUX__L9_I1 (.A(UART_CLK_MUX__L8_N0),
	.Y(UART_CLK_MUX__L9_N1));
   CLKBUFX20M UART_CLK_MUX__L9_I0 (.A(UART_CLK_MUX__L8_N0),
	.Y(UART_CLK_MUX__L9_N0));
   CLKINVX40M UART_CLK_MUX__L8_I0 (.A(UART_CLK_MUX__L7_N0),
	.Y(UART_CLK_MUX__L8_N0));
   CLKINVX40M UART_CLK_MUX__L7_I0 (.A(UART_CLK_MUX__L6_N0),
	.Y(UART_CLK_MUX__L7_N0));
   CLKBUFX24M UART_CLK_MUX__L6_I0 (.A(UART_CLK_MUX__L5_N0),
	.Y(UART_CLK_MUX__L6_N0));
   CLKBUFX24M UART_CLK_MUX__L5_I0 (.A(UART_CLK_MUX__L4_N0),
	.Y(UART_CLK_MUX__L5_N0));
   CLKBUFX24M UART_CLK_MUX__L4_I0 (.A(UART_CLK_MUX__L3_N0),
	.Y(UART_CLK_MUX__L4_N0));
   CLKBUFX24M UART_CLK_MUX__L3_I0 (.A(UART_CLK_MUX__L2_N0),
	.Y(UART_CLK_MUX__L3_N0));
   CLKBUFX24M UART_CLK_MUX__L2_I0 (.A(UART_CLK_MUX__L1_N0),
	.Y(UART_CLK_MUX__L2_N0));
   CLKBUFX24M UART_CLK_MUX__L1_I0 (.A(UART_CLK_MUX),
	.Y(UART_CLK_MUX__L1_N0));
   CLKINVX32M REF_CLK__L2_I0 (.A(REF_CLK__L1_N0),
	.Y(REF_CLK__L2_N0));
   CLKINVX40M REF_CLK__L1_I0 (.A(REF_CLK),
	.Y(REF_CLK__L1_N0));
   CLKBUFX20M REF_CLK_MUX__L2_I3 (.A(REF_CLK_MUX__L1_N0),
	.Y(REF_CLK_MUX__L2_N3));
   CLKBUFX20M REF_CLK_MUX__L2_I2 (.A(REF_CLK_MUX__L1_N0),
	.Y(REF_CLK_MUX__L2_N2));
   CLKBUFX20M REF_CLK_MUX__L2_I1 (.A(REF_CLK_MUX__L1_N0),
	.Y(REF_CLK_MUX__L2_N1));
   CLKBUFX20M REF_CLK_MUX__L2_I0 (.A(REF_CLK_MUX__L1_N0),
	.Y(REF_CLK_MUX__L2_N0));
   CLKBUFX32M REF_CLK_MUX__L1_I0 (.A(REF_CLK_MUX),
	.Y(REF_CLK_MUX__L1_N0));
   BUFX32M FE_OFC20_REF_CLK_Sync_RST_MUX (.A(REF_CLK_Sync_RST_MUX),
	.Y(FE_OFN20_REF_CLK_Sync_RST_MUX));
   BUFX2M FE_OFC18_SE (.A(FE_OFN16_SE),
	.Y(FE_OFN18_SE));
   CLKBUFX6M FE_OFC17_SE (.A(FE_OFN16_SE),
	.Y(FE_OFN17_SE));
   CLKBUFX6M FE_OFC16_SE (.A(SE),
	.Y(FE_OFN16_SE));
   MUX2_1 u_MUX2_TX_CLOCK (.IN0(REF_CLK__L2_N0),
	.IN1(scan_clk__L4_N0),
	.SL(test_mode),
	.MUX_out(REF_CLK_MUX));
   MUX2_4 u_MUX2_RX_CLOCK (.IN0(UART_CLK__L2_N0),
	.IN1(scan_clk__L2_N0),
	.SL(test_mode),
	.MUX_out(UART_CLK_MUX));
   MUX2_3 u_MUX2 (.IN0(TX_CLK),
	.IN1(scan_clk__L4_N0),
	.SL(test_mode),
	.MUX_out(TX_CLK_MUX));
   MUX2_2 u_MUX2_RST (.IN0(RST),
	.IN1(FE_PHN22_scan_rst),
	.SL(test_mode),
	.MUX_out(RST_MUX));
   MUX2_0 u_MUX2_REF_RST (.IN0(REF_CLK_Sync_RST),
	.IN1(FE_PHN22_scan_rst),
	.SL(test_mode),
	.MUX_out(REF_CLK_Sync_RST_MUX));
   MUX2_5 u_MUX2_UART_RST (.IN0(UART_CLK_Sync_RST),
	.IN1(FE_PHN22_scan_rst),
	.SL(test_mode),
	.MUX_out(UART_CLK_Sync_RST_MUX));
   RX_Controler_00000008_00000010_00000004_0000000e_00000004_test_1 u_RX_Controler (.clk(REF_CLK_MUX__L2_N1),
	.rst(REF_CLK_Sync_RST_MUX),
	.ALU_Valid(ALU_Out_Valid_Top),
	.ALU_Enable(ALU_Enable_Top),
	.ALU_Fun(ALU_Fun_Top),
	.CLK_Gate_En(CLK_Gate_En_Top),
	.REG_Address(REG_Address_Top),
	.REG_WrEn(REG_WrEn_Top),
	.REG_RdEn(REG_RdEn_Top),
	.REG_WrData(REG_WrData_Top),
	.Rx_P_Data(Rx_P_Data_Syn),
	.RX_Valid(RX_Valid_Syn),
	.test_si(UART_CLK_Sync_RST),
	.test_so(n5),
	.test_se(FE_OFN16_SE));
   Data_Sync_test_0 u_Data_Sync (.Unsync_Bus(Rx_P_Data_Top),
	.Enable(RX_Valid_Top),
	.clk(REF_CLK_MUX__L2_N1),
	.rst(REF_CLK_Sync_RST_MUX),
	.Sync_Bus(Rx_P_Data_Syn),
	.Enable_Pulse(RX_Valid_Syn),
	.test_si(n12),
	.test_so(n11),
	.test_se(FE_OFN16_SE));
   Tx_Controler_00000008_00000010_test_1 u_Tx_Controler (.clk(REF_CLK_MUX__L2_N2),
	.rst(FE_OFN20_REF_CLK_Sync_RST_MUX),
	.ALU_Out(ALU_Out_Top),
	.ALU_Valid(ALU_Out_Valid_Top),
	.REG_RdData(REG_RdData_Top),
	.REG_Rd_Valid(REG_Rd_Valid_Top),
	.Tx_Busy(Tx_Busy_Top),
	.Tx_P_Data(Tx_P_Data_Top_UnSyn),
	.Tx_Valid(Tx_Valid_Top_UnSyn),
	.test_si(n5),
	.test_so(n4),
	.test_se(FE_OFN17_SE),
	.p1(FE_OFN18_SE));
   ALU_00000008_00000010_0000000e_00000004_test_1 u_ALU (.clk(ALU_CLK),
	.rst(FE_OFN20_REF_CLK_Sync_RST_MUX),
	.Operand_A(Operand_A_Top),
	.Operand_B(Operand_B_Top),
	.ALU_Fun(ALU_Fun_Top),
	.Enable(ALU_Enable_Top),
	.ALU_Out(ALU_Out_Top),
	.Out_Valid(ALU_Out_Valid_Top),
	.test_si(SI[2]),
	.test_se(FE_OFN18_SE));
   Clock_Gating u_Clock_Gating (.clk(REF_CLK_MUX__L1_N0),
	.En(CLK_Gate_En_Top),
	.test_mode(test_mode),
	.Gated_clk(ALU_CLK));
   REG_File_00000008_00000010_00000004_00000000_00000000_0000001c_00000008_test_1 u_REG_File (.clk(REF_CLK_MUX__L2_N1),
	.rst(REF_CLK_Sync_RST_MUX),
	.Address(REG_Address_Top),
	.WrEn(REG_WrEn_Top),
	.RdEn(REG_RdEn_Top),
	.WrData(REG_WrData_Top),
	.RdData(REG_RdData_Top),
	.RdData_Valid(REG_Rd_Valid_Top),
	.REG0_ALU_A(Operand_A_Top),
	.REG1_ALU_B(Operand_B_Top),
	.REG2_UART(REG2_UART_Config_Top),
	.REG3_DIV(REG3_DIV_Top),
	.test_si3(SI[0]),
	.test_si2(SI[1]),
	.test_si1(REF_CLK_Sync_RST),
	.test_so3(n6),
	.test_so2(SO[1]),
	.test_so1(SO[2]),
	.test_se(SE),
	.p1(FE_OFN16_SE),
	.p2(FE_OFN17_SE),
	.p3(FE_OFN18_SE),
	.p4(FE_OFN20_REF_CLK_Sync_RST_MUX),
	.REF_CLK_MUX__L2_N0(REF_CLK_MUX__L2_N0),
	.REF_CLK_MUX__L2_N3(REF_CLK_MUX__L2_N3),
	.REF_CLK_MUX__L2_N2(REF_CLK_MUX__L2_N2));
   UART_test_1 u_UART (.RST(UART_CLK_Sync_RST_MUX),
	.TX_CLK(TX_CLK_MUX),
	.RX_CLK(UART_CLK_MUX__L9_N1),
	.RX_IN_S(RX_IN),
	.RX_OUT_P(Rx_P_Data_Top),
	.RX_OUT_V(RX_Valid_Top),
	.TX_IN_P(TX_IN_P_Top_Syn),
	.TX_IN_V(TX_IN_V_Top_Syn),
	.TX_OUT_S(TX_OUT),
	.TX_OUT_V(Tx_Busy_UnSyn),
	.Prescale({ REG2_UART_Config_Top[6],
		REG2_UART_Config_Top[5],
		REG2_UART_Config_Top[4],
		REG2_UART_Config_Top[3],
		REG2_UART_Config_Top[2] }),
	.parity_enable(REG2_UART_Config_Top[0]),
	.parity_type(REG2_UART_Config_Top[1]),
	.test_si(n3),
	.test_so(SO[0]),
	.test_se(SE),
	.p1(FE_OFN16_SE),
	.p2(FE_OFN17_SE),
	.UART_CLK_MUX__L9_N0(UART_CLK_MUX__L9_N0));
   Multi_Flop_Synchronizer_test_1 u_Busy_Syn (.async(Tx_Busy_UnSyn),
	.clk(REF_CLK_MUX__L2_N2),
	.rst(FE_OFN20_REF_CLK_Sync_RST_MUX),
	.sync(Tx_Busy_Top),
	.test_si(ALU_Out_Valid_Top),
	.test_se(FE_OFN16_SE),
	.p1(FE_OFN17_SE));
   Data_Sync_test_1 u_Tx_Data_Syn (.Unsync_Bus(Tx_P_Data_Top_UnSyn),
	.Enable(Tx_Valid_Top_UnSyn),
	.clk(TX_CLK_MUX),
	.rst(UART_CLK_Sync_RST_MUX),
	.Sync_Bus(TX_IN_P_Top_Syn),
	.Enable_Pulse(TX_IN_V_Top_Syn),
	.test_si(n4),
	.test_so(n3),
	.test_se(FE_OFN17_SE));
   Clock_Divider_test_1 u_Clock_Divider (.i_ref_clk(UART_CLK_MUX),
	.i_rst_n(UART_CLK_Sync_RST_MUX),
	.i_div_ratio(REG3_DIV_Top),
	.o_div_clk(TX_CLK),
	.test_si(Tx_Busy_Top),
	.test_so(n12),
	.test_se(SE),
	.p1(FE_OFN16_SE));
   RST_Sync_test_0 u_REF_CLK_RST_SYN (.RST(RST_MUX),
	.clk(REF_CLK_MUX__L2_N0),
	.Sync_RST(REF_CLK_Sync_RST),
	.test_si(n11),
	.test_se(SE));
   RST_Sync_test_1 u_RST_Sync (.RST(RST_MUX),
	.clk(UART_CLK_MUX__L9_N1),
	.Sync_RST(UART_CLK_Sync_RST),
	.test_si(n6),
	.test_se(SE));
endmodule

/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : K-2015.06
// Date      : Fri Aug 26 03:56:37 2022
/////////////////////////////////////////////////////////////
module MUX2_1 (
	IN0, 
	IN1, 
	SL, 
	MUX_out);
   input IN0;
   input IN1;
   input SL;
   output MUX_out;

   MX2X4M U1 (.S0(SL),
	.B(IN1),
	.A(IN0),
	.Y(MUX_out));
endmodule

module MUX2_4 (
	IN0, 
	IN1, 
	SL, 
	MUX_out);
   input IN0;
   input IN1;
   input SL;
   output MUX_out;

   MX2X8M U1 (.S0(SL),
	.B(IN1),
	.A(IN0),
	.Y(MUX_out));
endmodule

module MUX2_3 (
	IN0, 
	IN1, 
	SL, 
	MUX_out);
   input IN0;
   input IN1;
   input SL;
   output MUX_out;

   MX2X12M U1 (.S0(SL),
	.B(IN1),
	.A(IN0),
	.Y(MUX_out));
endmodule

module MUX2_2 (
	IN0, 
	IN1, 
	SL, 
	MUX_out);
   input IN0;
   input IN1;
   input SL;
   output MUX_out;

   // Internal wires
   wire FE_PHN27_scan_rst;

   BUFX2M FE_PHC27_scan_rst (.A(IN1),
	.Y(FE_PHN27_scan_rst));
   MX2X2M U1 (.S0(SL),
	.B(FE_PHN27_scan_rst),
	.A(IN0),
	.Y(MUX_out));
endmodule

module MUX2_0 (
	IN0, 
	IN1, 
	SL, 
	MUX_out);
   input IN0;
   input IN1;
   input SL;
   output MUX_out;

   MX2X6M U1 (.S0(SL),
	.B(IN1),
	.A(IN0),
	.Y(MUX_out));
endmodule

module MUX2_5 (
	IN0, 
	IN1, 
	SL, 
	MUX_out);
   input IN0;
   input IN1;
   input SL;
   output MUX_out;

   MX2X8M U1 (.S0(SL),
	.B(IN1),
	.A(IN0),
	.Y(MUX_out));
endmodule

module RX_Controler_00000008_00000010_00000004_0000000e_00000004_test_1 (
	clk, 
	rst, 
	ALU_Valid, 
	ALU_Enable, 
	ALU_Fun, 
	CLK_Gate_En, 
	REG_Address, 
	REG_WrEn, 
	REG_RdEn, 
	REG_WrData, 
	Rx_P_Data, 
	RX_Valid, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input rst;
   input ALU_Valid;
   output ALU_Enable;
   output [3:0] ALU_Fun;
   output CLK_Gate_En;
   output [3:0] REG_Address;
   output REG_WrEn;
   output REG_RdEn;
   output [7:0] REG_WrData;
   input [7:0] Rx_P_Data;
   input RX_Valid;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire FE_OFN21_Current_State_2_;
   wire N88;
   wire N89;
   wire N90;
   wire N91;
   wire N92;
   wire N104;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n61;
   wire n62;
   wire n64;
   wire n66;
   wire n67;
   wire n68;
   wire [2:0] Current_State;
   wire [2:0] Next_State;
   wire [3:0] Saved_Data;

   assign test_so = Saved_Data[3] ;

   BUFX2M FE_OFC21_Current_State_2_ (.A(Current_State[2]),
	.Y(FE_OFN21_Current_State_2_));
   SDFFRQX1M \Saved_Data_reg[3]  (.SI(Saved_Data[2]),
	.SE(test_se),
	.D(n60),
	.CK(clk),
	.RN(rst),
	.Q(Saved_Data[3]));
   SDFFRQX1M \Saved_Data_reg[2]  (.SI(Saved_Data[1]),
	.SE(test_se),
	.D(n59),
	.CK(clk),
	.RN(rst),
	.Q(Saved_Data[2]));
   SDFFRQX1M \Saved_Data_reg[1]  (.SI(n68),
	.SE(test_se),
	.D(n58),
	.CK(clk),
	.RN(rst),
	.Q(Saved_Data[1]));
   SDFFRQX1M \Saved_Data_reg[0]  (.SI(FE_OFN21_Current_State_2_),
	.SE(test_se),
	.D(n57),
	.CK(clk),
	.RN(rst),
	.Q(Saved_Data[0]));
   SDFFRQX1M \Current_State_reg[2]  (.SI(n67),
	.SE(test_se),
	.D(Next_State[2]),
	.CK(clk),
	.RN(rst),
	.Q(Current_State[2]));
   SDFFRQX1M \Current_State_reg[1]  (.SI(n66),
	.SE(test_se),
	.D(Next_State[1]),
	.CK(clk),
	.RN(rst),
	.Q(Current_State[1]));
   SDFFRQX1M \Current_State_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(Next_State[0]),
	.CK(clk),
	.RN(rst),
	.Q(Current_State[0]));
   NOR2X2M U10 (.A(n25),
	.B(n54),
	.Y(ALU_Fun[1]));
   NOR2X2M U18 (.A(n23),
	.B(n54),
	.Y(ALU_Fun[3]));
   NOR2X2M U19 (.A(n26),
	.B(n54),
	.Y(ALU_Fun[0]));
   NOR2X2M U20 (.A(n24),
	.B(n54),
	.Y(ALU_Fun[2]));
   MX2X2M U22 (.S0(Current_State[0]),
	.B(Saved_Data[3]),
	.A(n4),
	.Y(REG_Address[3]));
   AOI21X2M U23 (.A0(n31),
	.A1(RX_Valid),
	.B0(n32),
	.Y(n30));
   OAI21BX1M U24 (.A0(n64),
	.A1(n26),
	.B0N(N92),
	.Y(N88));
   OAI21X2M U25 (.A0(n64),
	.A1(n25),
	.B0(n53),
	.Y(N89));
   NAND2X2M U26 (.A(n68),
	.B(n64),
	.Y(N104));
   INVX2M U27 (.A(n53),
	.Y(n61));
   NOR3X2M U28 (.A(n66),
	.B(FE_OFN21_Current_State_2_),
	.C(n67),
	.Y(n43));
   NOR2X2M U29 (.A(n30),
	.B(n26),
	.Y(REG_WrData[0]));
   NOR2X2M U30 (.A(n30),
	.B(n25),
	.Y(REG_WrData[1]));
   NOR2X2M U31 (.A(n30),
	.B(n24),
	.Y(REG_WrData[2]));
   NOR2X2M U32 (.A(n30),
	.B(n23),
	.Y(REG_WrData[3]));
   NOR2X2M U33 (.A(n30),
	.B(n22),
	.Y(REG_WrData[4]));
   NOR2X2M U34 (.A(n30),
	.B(n21),
	.Y(REG_WrData[7]));
   NOR2X2M U35 (.A(n35),
	.B(n64),
	.Y(n32));
   OAI2B11X2M U36 (.A0(n66),
	.A1N(n40),
	.B0(n44),
	.C0(n45),
	.Y(Next_State[0]));
   AOI31X2M U37 (.A0(n26),
	.A1(n22),
	.A2(n42),
	.B0(n32),
	.Y(n44));
   AOI21X2M U38 (.A0(n43),
	.A1(n64),
	.B0(n34),
	.Y(n45));
   INVX2M U39 (.A(n30),
	.Y(REG_WrEn));
   NAND3X2M U40 (.A(n66),
	.B(n67),
	.C(FE_OFN21_Current_State_2_),
	.Y(n35));
   NAND4BX1M U41 (.AN(n34),
	.B(n35),
	.C(n36),
	.D(n37),
	.Y(Next_State[2]));
   NAND2BX2M U42 (.AN(n43),
	.B(n36),
	.Y(n31));
   INVX2M U43 (.A(n48),
	.Y(n20));
   INVX2M U44 (.A(n54),
	.Y(ALU_Enable));
   INVX2M U45 (.A(RX_Valid),
	.Y(n64));
   NOR2X2M U46 (.A(n68),
	.B(RX_Valid),
	.Y(N92));
   NAND2X2M U47 (.A(Saved_Data[1]),
	.B(n64),
	.Y(n53));
   MX2X8M U48 (.S0(Current_State[0]),
	.B(Saved_Data[1]),
	.A(n2),
	.Y(REG_Address[1]));
   MX4X1M U49 (.S1(Current_State[1]),
	.S0(FE_OFN21_Current_State_2_),
	.D(n61),
	.C(N89),
	.B(n61),
	.A(Saved_Data[1]),
	.Y(n2));
   MX2X8M U50 (.S0(Current_State[0]),
	.B(Saved_Data[0]),
	.A(n1),
	.Y(REG_Address[0]));
   MX4X1M U51 (.S1(Current_State[1]),
	.S0(FE_OFN21_Current_State_2_),
	.D(N92),
	.C(N88),
	.B(N104),
	.A(Saved_Data[0]),
	.Y(n1));
   OAI2B2X1M U52 (.A0(n47),
	.A1N(n46),
	.B0(n48),
	.B1(n49),
	.Y(n34));
   NOR2BX2M U53 (.AN(ALU_Valid),
	.B(n64),
	.Y(n47));
   NOR3X2M U54 (.A(Current_State[0]),
	.B(FE_OFN21_Current_State_2_),
	.C(n67),
	.Y(n33));
   NAND3X2M U55 (.A(Current_State[0]),
	.B(n40),
	.C(RX_Valid),
	.Y(n29));
   NOR2X2M U56 (.A(Current_State[1]),
	.B(FE_OFN21_Current_State_2_),
	.Y(n40));
   NAND4X2M U57 (.A(n40),
	.B(n66),
	.C(RX_Valid),
	.D(n56),
	.Y(n48));
   NOR2X2M U58 (.A(n23),
	.B(n21),
	.Y(n56));
   NAND4X2M U59 (.A(Rx_P_Data[6]),
	.B(Rx_P_Data[2]),
	.C(Rx_P_Data[4]),
	.D(n55),
	.Y(n49));
   NOR3X2M U60 (.A(n26),
	.B(Rx_P_Data[5]),
	.C(Rx_P_Data[1]),
	.Y(n55));
   INVX2M U61 (.A(Rx_P_Data[0]),
	.Y(n26));
   NAND4X2M U62 (.A(Rx_P_Data[6]),
	.B(Rx_P_Data[2]),
	.C(n20),
	.D(n41),
	.Y(n37));
   NOR4X1M U63 (.A(Rx_P_Data[5]),
	.B(Rx_P_Data[4]),
	.C(Rx_P_Data[1]),
	.D(Rx_P_Data[0]),
	.Y(n41));
   OAI2BB2X1M U64 (.A0N(n29),
	.A1N(Saved_Data[0]),
	.B0(n29),
	.B1(n26),
	.Y(n57));
   OAI2BB2X1M U65 (.A0N(n29),
	.A1N(Saved_Data[1]),
	.B0(n29),
	.B1(n25),
	.Y(n58));
   OAI2BB2X1M U66 (.A0N(n29),
	.A1N(Saved_Data[2]),
	.B0(n29),
	.B1(n24),
	.Y(n59));
   OAI2BB2X1M U67 (.A0N(n29),
	.A1N(Saved_Data[3]),
	.B0(n29),
	.B1(n23),
	.Y(n60));
   INVX2M U68 (.A(Rx_P_Data[1]),
	.Y(n25));
   INVX2M U69 (.A(Current_State[0]),
	.Y(n66));
   AND2X2M U70 (.A(Rx_P_Data[5]),
	.B(REG_WrEn),
	.Y(REG_WrData[5]));
   AND2X2M U71 (.A(Rx_P_Data[6]),
	.B(REG_WrEn),
	.Y(REG_WrData[6]));
   INVX2M U72 (.A(Rx_P_Data[3]),
	.Y(n23));
   AND3X2M U73 (.A(FE_OFN21_Current_State_2_),
	.B(Current_State[0]),
	.C(n67),
	.Y(n46));
   INVX2M U74 (.A(Rx_P_Data[2]),
	.Y(n24));
   INVX2M U75 (.A(Current_State[1]),
	.Y(n67));
   NAND3X2M U76 (.A(Current_State[1]),
	.B(n66),
	.C(FE_OFN21_Current_State_2_),
	.Y(n36));
   AND3X2M U77 (.A(n20),
	.B(Rx_P_Data[5]),
	.C(n50),
	.Y(n42));
   NOR3X2M U78 (.A(n25),
	.B(Rx_P_Data[6]),
	.C(Rx_P_Data[2]),
	.Y(n50));
   NAND4X2M U79 (.A(n38),
	.B(n39),
	.C(n37),
	.D(n29),
	.Y(Next_State[1]));
   OAI21X2M U80 (.A0(n33),
	.A1(n31),
	.B0(n64),
	.Y(n38));
   NAND3X2M U81 (.A(Rx_P_Data[4]),
	.B(Rx_P_Data[0]),
	.C(n42),
	.Y(n39));
   NAND2X2M U82 (.A(Saved_Data[3]),
	.B(n64),
	.Y(n51));
   NAND2X2M U83 (.A(Saved_Data[2]),
	.B(n64),
	.Y(n52));
   INVX2M U84 (.A(Rx_P_Data[4]),
	.Y(n22));
   AND2X2M U85 (.A(n33),
	.B(RX_Valid),
	.Y(REG_RdEn));
   INVX2M U86 (.A(Saved_Data[0]),
	.Y(n68));
   INVX2M U87 (.A(Rx_P_Data[7]),
	.Y(n21));
   MX4X1M U88 (.S1(Current_State[1]),
	.S0(FE_OFN21_Current_State_2_),
	.D(n27),
	.C(N91),
	.B(n27),
	.A(Saved_Data[3]),
	.Y(n4));
   OAI21X2M U89 (.A0(n64),
	.A1(n23),
	.B0(n51),
	.Y(N91));
   INVX2M U90 (.A(n51),
	.Y(n27));
   MX2X2M U91 (.S0(Current_State[0]),
	.B(Saved_Data[2]),
	.A(n3),
	.Y(REG_Address[2]));
   MX4X1M U92 (.S1(Current_State[1]),
	.S0(FE_OFN21_Current_State_2_),
	.D(n28),
	.C(N90),
	.B(n28),
	.A(Saved_Data[2]),
	.Y(n3));
   OAI21X2M U93 (.A0(n64),
	.A1(n24),
	.B0(n52),
	.Y(N90));
   INVX2M U94 (.A(n52),
	.Y(n28));
   NAND2X2M U95 (.A(n46),
	.B(RX_Valid),
	.Y(n54));
   OAI211X2M U96 (.A0(n48),
	.A1(n49),
	.B0(n62),
	.C0(n54),
	.Y(CLK_Gate_En));
   INVX2M U97 (.A(n32),
	.Y(n62));
endmodule

module Multi_Flop_Synchronizer_NUM_STAGES2_test_0 (
	async, 
	clk, 
	rst, 
	sync, 
	test_si, 
	test_se);
   input async;
   input clk;
   input rst;
   output sync;
   input test_si;
   input test_se;

   // Internal wires
   wire \Q[0] ;

   SDFFRQX1M sync_reg (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(rst),
	.Q(sync));
   SDFFRQX1M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(async),
	.CK(clk),
	.RN(rst),
	.Q(\Q[0] ));
endmodule

module Multi_Flop_Synchronizer_Multi_bits_NUM_STAGES2_BUS_WIDTH1_test_0 (
	ASYNC, 
	CLK, 
	RST, 
	SYNC, 
	test_si, 
	test_se);
   input [0:0] ASYNC;
   input CLK;
   input RST;
   output [0:0] SYNC;
   input test_si;
   input test_se;

   Multi_Flop_Synchronizer_NUM_STAGES2_test_0 \genblk1[0].u0  (.async(ASYNC[0]),
	.clk(CLK),
	.rst(RST),
	.sync(SYNC[0]),
	.test_si(test_si),
	.test_se(test_se));
endmodule

module Pulse_Gen_test_0 (
	Signal_in, 
	clk, 
	rst, 
	Pulse_out, 
	test_so, 
	test_se);
   input Signal_in;
   input clk;
   input rst;
   output Pulse_out;
   output test_so;
   input test_se;

   // Internal wires
   wire Q;

   assign test_so = Q ;

   SDFFRQX1M Q_reg (.SI(Signal_in),
	.SE(test_se),
	.D(Signal_in),
	.CK(clk),
	.RN(rst),
	.Q(Q));
   NOR2BX2M U5 (.AN(Signal_in),
	.B(Q),
	.Y(Pulse_out));
endmodule

module Data_Sync_test_0 (
	Unsync_Bus, 
	Enable, 
	clk, 
	rst, 
	Sync_Bus, 
	Enable_Pulse, 
	test_si, 
	test_so, 
	test_se);
   input [7:0] Unsync_Bus;
   input Enable;
   input clk;
   input rst;
   output [7:0] Sync_Bus;
   output Enable_Pulse;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire FE_PHN26_n12;
   wire Pulse_out;
   wire Enable_Sync;
   wire n4;
   wire n6;
   wire n8;
   wire n10;
   wire n12;
   wire n14;
   wire n16;
   wire n18;
   wire n27;

   CLKBUFX3M FE_PHC26_n12 (.A(test_si),
	.Y(FE_PHN26_n12));
   SDFFRQX1M Enable_Pulse_reg (.SI(FE_PHN26_n12),
	.SE(test_se),
	.D(Pulse_out),
	.CK(clk),
	.RN(rst),
	.Q(Enable_Pulse));
   SDFFRQX1M \Sync_Bus_reg[7]  (.SI(Sync_Bus[6]),
	.SE(test_se),
	.D(n18),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[7]));
   SDFFRQX1M \Sync_Bus_reg[6]  (.SI(Sync_Bus[5]),
	.SE(test_se),
	.D(n16),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[6]));
   SDFFRQX1M \Sync_Bus_reg[5]  (.SI(Sync_Bus[4]),
	.SE(test_se),
	.D(n14),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[5]));
   SDFFRQX1M \Sync_Bus_reg[4]  (.SI(Sync_Bus[3]),
	.SE(test_se),
	.D(n12),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[4]));
   SDFFRQX1M \Sync_Bus_reg[3]  (.SI(Sync_Bus[2]),
	.SE(test_se),
	.D(n10),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[3]));
   SDFFRQX1M \Sync_Bus_reg[2]  (.SI(Sync_Bus[1]),
	.SE(test_se),
	.D(n8),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[2]));
   SDFFRQX1M \Sync_Bus_reg[1]  (.SI(Sync_Bus[0]),
	.SE(test_se),
	.D(n6),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[1]));
   SDFFRQX1M \Sync_Bus_reg[0]  (.SI(Enable_Pulse),
	.SE(test_se),
	.D(n4),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[0]));
   INVX2M U21 (.A(Pulse_out),
	.Y(n27));
   AO22X1M U22 (.A0(Unsync_Bus[0]),
	.A1(Pulse_out),
	.B0(Sync_Bus[0]),
	.B1(n27),
	.Y(n4));
   AO22X1M U23 (.A0(Unsync_Bus[1]),
	.A1(Pulse_out),
	.B0(Sync_Bus[1]),
	.B1(n27),
	.Y(n6));
   AO22X1M U24 (.A0(Unsync_Bus[2]),
	.A1(Pulse_out),
	.B0(Sync_Bus[2]),
	.B1(n27),
	.Y(n8));
   AO22X1M U25 (.A0(Unsync_Bus[3]),
	.A1(Pulse_out),
	.B0(Sync_Bus[3]),
	.B1(n27),
	.Y(n10));
   AO22X1M U26 (.A0(Unsync_Bus[4]),
	.A1(Pulse_out),
	.B0(Sync_Bus[4]),
	.B1(n27),
	.Y(n12));
   AO22X1M U27 (.A0(Unsync_Bus[5]),
	.A1(Pulse_out),
	.B0(Sync_Bus[5]),
	.B1(n27),
	.Y(n14));
   AO22X1M U28 (.A0(Unsync_Bus[6]),
	.A1(Pulse_out),
	.B0(Sync_Bus[6]),
	.B1(n27),
	.Y(n16));
   AO22X1M U29 (.A0(Unsync_Bus[7]),
	.A1(Pulse_out),
	.B0(Sync_Bus[7]),
	.B1(n27),
	.Y(n18));
   Multi_Flop_Synchronizer_Multi_bits_NUM_STAGES2_BUS_WIDTH1_test_0 u_Multi_Flop_Synchronizer_Multi_bits (.ASYNC(Enable),
	.CLK(clk),
	.RST(rst),
	.SYNC(Enable_Sync),
	.test_si(Sync_Bus[7]),
	.test_se(test_se));
   Pulse_Gen_test_0 u_Pulse_Gen (.Signal_in(Enable_Sync),
	.clk(clk),
	.rst(rst),
	.Pulse_out(Pulse_out),
	.test_so(test_so),
	.test_se(test_se));
endmodule

module Tx_Controler_00000008_00000010_test_1 (
	clk, 
	rst, 
	ALU_Out, 
	ALU_Valid, 
	REG_RdData, 
	REG_Rd_Valid, 
	Tx_Busy, 
	Tx_P_Data, 
	Tx_Valid, 
	test_si, 
	test_so, 
	test_se, 
	p1);
   input clk;
   input rst;
   input [15:0] ALU_Out;
   input ALU_Valid;
   input [7:0] REG_RdData;
   input REG_Rd_Valid;
   input Tx_Busy;
   output [7:0] Tx_P_Data;
   output Tx_Valid;
   input test_si;
   output test_so;
   input test_se;
   input p1;

   // Internal wires
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire [2:0] Current_State;
   wire [2:0] Next_State;

   assign test_so = n29 ;

   SDFFRQX1M \Current_State_reg[2]  (.SI(n28),
	.SE(test_se),
	.D(n26),
	.CK(clk),
	.RN(rst),
	.Q(Current_State[2]));
   SDFFRQX1M \Current_State_reg[1]  (.SI(n27),
	.SE(p1),
	.D(Next_State[1]),
	.CK(clk),
	.RN(rst),
	.Q(Current_State[1]));
   SDFFRQX1M \Current_State_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(Next_State[0]),
	.CK(clk),
	.RN(rst),
	.Q(Current_State[0]));
   OR2X2M U9 (.A(n11),
	.B(n13),
	.Y(n10));
   OR2X2M U10 (.A(n9),
	.B(n10),
	.Y(Tx_Valid));
   INVX2M U11 (.A(n21),
	.Y(n26));
   OAI2BB1X2M U12 (.A0N(REG_RdData[0]),
	.A1N(n11),
	.B0(n20),
	.Y(Tx_P_Data[0]));
   AOI22X1M U13 (.A0(ALU_Out[8]),
	.A1(n9),
	.B0(ALU_Out[0]),
	.B1(n13),
	.Y(n20));
   OAI2BB1X2M U14 (.A0N(REG_RdData[1]),
	.A1N(n11),
	.B0(n19),
	.Y(Tx_P_Data[1]));
   AOI22X1M U15 (.A0(ALU_Out[9]),
	.A1(n9),
	.B0(ALU_Out[1]),
	.B1(n13),
	.Y(n19));
   OAI2BB1X2M U16 (.A0N(REG_RdData[2]),
	.A1N(n11),
	.B0(n18),
	.Y(Tx_P_Data[2]));
   AOI22X1M U17 (.A0(ALU_Out[10]),
	.A1(n9),
	.B0(ALU_Out[2]),
	.B1(n13),
	.Y(n18));
   OAI2BB1X2M U18 (.A0N(REG_RdData[3]),
	.A1N(n11),
	.B0(n17),
	.Y(Tx_P_Data[3]));
   AOI22X1M U19 (.A0(ALU_Out[11]),
	.A1(n9),
	.B0(ALU_Out[3]),
	.B1(n13),
	.Y(n17));
   OAI2BB1X2M U20 (.A0N(REG_RdData[4]),
	.A1N(n11),
	.B0(n16),
	.Y(Tx_P_Data[4]));
   AOI22X1M U21 (.A0(ALU_Out[12]),
	.A1(n9),
	.B0(ALU_Out[4]),
	.B1(n13),
	.Y(n16));
   OAI2BB1X2M U22 (.A0N(REG_RdData[5]),
	.A1N(n11),
	.B0(n15),
	.Y(Tx_P_Data[5]));
   AOI22X1M U23 (.A0(ALU_Out[13]),
	.A1(n9),
	.B0(ALU_Out[5]),
	.B1(n13),
	.Y(n15));
   OAI2BB1X2M U24 (.A0N(REG_RdData[6]),
	.A1N(n11),
	.B0(n14),
	.Y(Tx_P_Data[6]));
   AOI22X1M U25 (.A0(ALU_Out[14]),
	.A1(n9),
	.B0(ALU_Out[6]),
	.B1(n13),
	.Y(n14));
   OAI2BB1X2M U26 (.A0N(REG_RdData[7]),
	.A1N(n11),
	.B0(n12),
	.Y(Tx_P_Data[7]));
   AOI22X1M U27 (.A0(ALU_Out[15]),
	.A1(n9),
	.B0(ALU_Out[7]),
	.B1(n13),
	.Y(n12));
   NOR3X2M U28 (.A(Current_State[1]),
	.B(Current_State[2]),
	.C(n27),
	.Y(n11));
   OAI21X2M U29 (.A0(Current_State[2]),
	.A1(n22),
	.B0(n21),
	.Y(Next_State[1]));
   AOI31X2M U30 (.A0(n23),
	.A1(n30),
	.A2(ALU_Valid),
	.B0(Current_State[1]),
	.Y(n22));
   INVX2M U31 (.A(REG_Rd_Valid),
	.Y(n30));
   INVX2M U32 (.A(Current_State[1]),
	.Y(n28));
   INVX2M U33 (.A(Current_State[0]),
	.Y(n27));
   INVX2M U34 (.A(Current_State[2]),
	.Y(n29));
   NOR2X2M U35 (.A(Tx_Busy),
	.B(n24),
	.Y(Next_State[0]));
   AOI31X2M U36 (.A0(n28),
	.A1(n29),
	.A2(n25),
	.B0(n10),
	.Y(n24));
   CLKXOR2X2M U37 (.A(REG_Rd_Valid),
	.B(ALU_Valid),
	.Y(n25));
   NOR3X2M U39 (.A(n28),
	.B(Current_State[2]),
	.C(n27),
	.Y(n13));
   NOR3X2M U41 (.A(n28),
	.B(Current_State[0]),
	.C(n29),
	.Y(n9));
   NOR2X2M U42 (.A(Current_State[0]),
	.B(Tx_Busy),
	.Y(n23));
   NAND2X2M U43 (.A(n23),
	.B(Current_State[1]),
	.Y(n21));
endmodule

module ALU_00000008_00000010_0000000e_00000004_DW_div_uns_0 (
	a, 
	b, 
	quotient, 
	remainder, 
	divide_by_0, 
	p1, 
	p2, 
	p3, 
	p4, 
	p5, 
	p6, 
	p7, 
	p8, 
	p9);
   input [7:0] a;
   input [7:0] b;
   output [7:0] quotient;
   output [7:0] remainder;
   output divide_by_0;
   input p1;
   input p2;
   input p3;
   input p4;
   input p5;
   input p6;
   input p7;
   input p8;
   input p9;

   // Internal wires
   wire \u_div/SumTmp[1][0] ;
   wire \u_div/SumTmp[1][1] ;
   wire \u_div/SumTmp[1][2] ;
   wire \u_div/SumTmp[1][3] ;
   wire \u_div/SumTmp[1][4] ;
   wire \u_div/SumTmp[1][5] ;
   wire \u_div/SumTmp[1][6] ;
   wire \u_div/SumTmp[2][0] ;
   wire \u_div/SumTmp[2][1] ;
   wire \u_div/SumTmp[2][2] ;
   wire \u_div/SumTmp[2][3] ;
   wire \u_div/SumTmp[2][4] ;
   wire \u_div/SumTmp[2][5] ;
   wire \u_div/SumTmp[3][0] ;
   wire \u_div/SumTmp[3][1] ;
   wire \u_div/SumTmp[3][2] ;
   wire \u_div/SumTmp[3][3] ;
   wire \u_div/SumTmp[3][4] ;
   wire \u_div/SumTmp[4][0] ;
   wire \u_div/SumTmp[4][1] ;
   wire \u_div/SumTmp[4][2] ;
   wire \u_div/SumTmp[4][3] ;
   wire \u_div/SumTmp[5][0] ;
   wire \u_div/SumTmp[5][1] ;
   wire \u_div/SumTmp[5][2] ;
   wire \u_div/SumTmp[6][0] ;
   wire \u_div/SumTmp[6][1] ;
   wire \u_div/SumTmp[7][0] ;
   wire \u_div/CryTmp[0][1] ;
   wire \u_div/CryTmp[0][2] ;
   wire \u_div/CryTmp[0][3] ;
   wire \u_div/CryTmp[0][4] ;
   wire \u_div/CryTmp[0][5] ;
   wire \u_div/CryTmp[0][6] ;
   wire \u_div/CryTmp[0][7] ;
   wire \u_div/CryTmp[1][1] ;
   wire \u_div/CryTmp[1][2] ;
   wire \u_div/CryTmp[1][3] ;
   wire \u_div/CryTmp[1][4] ;
   wire \u_div/CryTmp[1][5] ;
   wire \u_div/CryTmp[1][6] ;
   wire \u_div/CryTmp[1][7] ;
   wire \u_div/CryTmp[2][1] ;
   wire \u_div/CryTmp[2][2] ;
   wire \u_div/CryTmp[2][3] ;
   wire \u_div/CryTmp[2][4] ;
   wire \u_div/CryTmp[2][5] ;
   wire \u_div/CryTmp[2][6] ;
   wire \u_div/CryTmp[3][1] ;
   wire \u_div/CryTmp[3][2] ;
   wire \u_div/CryTmp[3][3] ;
   wire \u_div/CryTmp[3][4] ;
   wire \u_div/CryTmp[3][5] ;
   wire \u_div/CryTmp[4][1] ;
   wire \u_div/CryTmp[4][2] ;
   wire \u_div/CryTmp[4][3] ;
   wire \u_div/CryTmp[4][4] ;
   wire \u_div/CryTmp[5][1] ;
   wire \u_div/CryTmp[5][2] ;
   wire \u_div/CryTmp[5][3] ;
   wire \u_div/CryTmp[6][1] ;
   wire \u_div/CryTmp[6][2] ;
   wire \u_div/CryTmp[7][1] ;
   wire \u_div/PartRem[1][1] ;
   wire \u_div/PartRem[1][2] ;
   wire \u_div/PartRem[1][3] ;
   wire \u_div/PartRem[1][4] ;
   wire \u_div/PartRem[1][5] ;
   wire \u_div/PartRem[1][6] ;
   wire \u_div/PartRem[1][7] ;
   wire \u_div/PartRem[2][1] ;
   wire \u_div/PartRem[2][2] ;
   wire \u_div/PartRem[2][3] ;
   wire \u_div/PartRem[2][4] ;
   wire \u_div/PartRem[2][5] ;
   wire \u_div/PartRem[2][6] ;
   wire \u_div/PartRem[3][1] ;
   wire \u_div/PartRem[3][2] ;
   wire \u_div/PartRem[3][3] ;
   wire \u_div/PartRem[3][4] ;
   wire \u_div/PartRem[3][5] ;
   wire \u_div/PartRem[4][1] ;
   wire \u_div/PartRem[4][2] ;
   wire \u_div/PartRem[4][3] ;
   wire \u_div/PartRem[4][4] ;
   wire \u_div/PartRem[5][1] ;
   wire \u_div/PartRem[5][2] ;
   wire \u_div/PartRem[5][3] ;
   wire \u_div/PartRem[6][1] ;
   wire \u_div/PartRem[6][2] ;
   wire \u_div/PartRem[7][1] ;
   wire n20;
   wire n21;
   wire n22;

   ADDFX2M \u_div/u_fa_PartRem_0_6_1  (.A(\u_div/PartRem[7][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[6][1] ),
	.S(\u_div/SumTmp[6][1] ),
	.CO(\u_div/CryTmp[6][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_5  (.A(\u_div/PartRem[3][5] ),
	.B(b[5]),
	.CI(\u_div/CryTmp[2][5] ),
	.S(\u_div/SumTmp[2][5] ),
	.CO(\u_div/CryTmp[2][6] ));
   ADDFX2M \u_div/u_fa_PartRem_0_4_3  (.A(\u_div/PartRem[5][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[4][3] ),
	.S(\u_div/SumTmp[4][3] ),
	.CO(\u_div/CryTmp[4][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_5_2  (.A(\u_div/PartRem[6][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[5][2] ),
	.S(\u_div/SumTmp[5][2] ),
	.CO(\u_div/CryTmp[5][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_4  (.A(\u_div/PartRem[4][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[3][4] ),
	.S(\u_div/SumTmp[3][4] ),
	.CO(\u_div/CryTmp[3][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_5  (.A(\u_div/PartRem[1][5] ),
	.B(b[5]),
	.CI(\u_div/CryTmp[0][5] ),
	.CO(\u_div/CryTmp[0][6] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_6  (.A(\u_div/PartRem[1][6] ),
	.B(p2),
	.CI(\u_div/CryTmp[0][6] ),
	.CO(\u_div/CryTmp[0][7] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_7  (.A(\u_div/PartRem[1][7] ),
	.B(p3),
	.CI(\u_div/CryTmp[0][7] ),
	.CO(quotient[0]));
   ADDFX2M \u_div/u_fa_PartRem_0_0_1  (.A(\u_div/PartRem[1][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[0][1] ),
	.CO(\u_div/CryTmp[0][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_1  (.A(\u_div/PartRem[2][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[1][1] ),
	.S(\u_div/SumTmp[1][1] ),
	.CO(\u_div/CryTmp[1][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_1  (.A(\u_div/PartRem[3][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[2][1] ),
	.S(\u_div/SumTmp[2][1] ),
	.CO(\u_div/CryTmp[2][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_1  (.A(\u_div/PartRem[4][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[3][1] ),
	.S(\u_div/SumTmp[3][1] ),
	.CO(\u_div/CryTmp[3][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_4_1  (.A(\u_div/PartRem[5][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[4][1] ),
	.S(\u_div/SumTmp[4][1] ),
	.CO(\u_div/CryTmp[4][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_5_1  (.A(\u_div/PartRem[6][1] ),
	.B(b[1]),
	.CI(\u_div/CryTmp[5][1] ),
	.S(\u_div/SumTmp[5][1] ),
	.CO(\u_div/CryTmp[5][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_2  (.A(\u_div/PartRem[1][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[0][2] ),
	.CO(\u_div/CryTmp[0][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_3  (.A(\u_div/PartRem[1][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[0][3] ),
	.CO(\u_div/CryTmp[0][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_4  (.A(\u_div/PartRem[1][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[0][4] ),
	.CO(\u_div/CryTmp[0][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_5  (.A(\u_div/PartRem[2][5] ),
	.B(b[5]),
	.CI(\u_div/CryTmp[1][5] ),
	.S(\u_div/SumTmp[1][5] ),
	.CO(\u_div/CryTmp[1][6] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_4  (.A(\u_div/PartRem[2][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[1][4] ),
	.S(\u_div/SumTmp[1][4] ),
	.CO(\u_div/CryTmp[1][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_3  (.A(\u_div/PartRem[2][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[1][3] ),
	.S(\u_div/SumTmp[1][3] ),
	.CO(\u_div/CryTmp[1][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_4  (.A(\u_div/PartRem[3][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[2][4] ),
	.S(\u_div/SumTmp[2][4] ),
	.CO(\u_div/CryTmp[2][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_2  (.A(\u_div/PartRem[2][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[1][2] ),
	.S(\u_div/SumTmp[1][2] ),
	.CO(\u_div/CryTmp[1][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_3  (.A(\u_div/PartRem[3][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[2][3] ),
	.S(\u_div/SumTmp[2][3] ),
	.CO(\u_div/CryTmp[2][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_2  (.A(\u_div/PartRem[3][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[2][2] ),
	.S(\u_div/SumTmp[2][2] ),
	.CO(\u_div/CryTmp[2][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_3  (.A(\u_div/PartRem[4][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[3][3] ),
	.S(\u_div/SumTmp[3][3] ),
	.CO(\u_div/CryTmp[3][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_2  (.A(\u_div/PartRem[4][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[3][2] ),
	.S(\u_div/SumTmp[3][2] ),
	.CO(\u_div/CryTmp[3][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_4_2  (.A(\u_div/PartRem[5][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[4][2] ),
	.S(\u_div/SumTmp[4][2] ),
	.CO(\u_div/CryTmp[4][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_6  (.A(\u_div/PartRem[2][6] ),
	.B(p2),
	.CI(\u_div/CryTmp[1][6] ),
	.S(\u_div/SumTmp[1][6] ),
	.CO(\u_div/CryTmp[1][7] ));
   XNOR2X2M U3 (.A(p1),
	.B(a[2]),
	.Y(\u_div/SumTmp[2][0] ));
   XNOR2X2M U4 (.A(p1),
	.B(a[3]),
	.Y(\u_div/SumTmp[3][0] ));
   XNOR2X2M U5 (.A(p1),
	.B(a[4]),
	.Y(\u_div/SumTmp[4][0] ));
   XNOR2X2M U6 (.A(p1),
	.B(a[5]),
	.Y(\u_div/SumTmp[5][0] ));
   XNOR2X2M U7 (.A(p1),
	.B(a[6]),
	.Y(\u_div/SumTmp[6][0] ));
   XNOR2X2M U8 (.A(p1),
	.B(a[7]),
	.Y(\u_div/SumTmp[7][0] ));
   OR2X2M U9 (.A(p1),
	.B(a[7]),
	.Y(\u_div/CryTmp[7][1] ));
   XNOR2X2M U10 (.A(p1),
	.B(a[1]),
	.Y(\u_div/SumTmp[1][0] ));
   NAND2X2M U11 (.A(b[0]),
	.B(p8),
	.Y(\u_div/CryTmp[5][1] ));
   NAND2X2M U14 (.A(b[0]),
	.B(p7),
	.Y(\u_div/CryTmp[4][1] ));
   NAND2X2M U17 (.A(b[0]),
	.B(p6),
	.Y(\u_div/CryTmp[3][1] ));
   NAND2X2M U20 (.A(b[0]),
	.B(p5),
	.Y(\u_div/CryTmp[2][1] ));
   NAND2X2M U23 (.A(b[0]),
	.B(p4),
	.Y(\u_div/CryTmp[1][1] ));
   NAND2X2M U25 (.A(b[0]),
	.B(a[0]),
	.Y(\u_div/CryTmp[0][1] ));
   NAND2X2M U27 (.A(b[0]),
	.B(p9),
	.Y(\u_div/CryTmp[6][1] ));
   CLKMX2X2M U35 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][6] ),
	.A(\u_div/PartRem[2][6] ),
	.Y(\u_div/PartRem[1][7] ));
   CLKMX2X2M U36 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][5] ),
	.A(\u_div/PartRem[3][5] ),
	.Y(\u_div/PartRem[2][6] ));
   CLKMX2X2M U37 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][4] ),
	.A(\u_div/PartRem[4][4] ),
	.Y(\u_div/PartRem[3][5] ));
   CLKMX2X2M U38 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][3] ),
	.A(\u_div/PartRem[5][3] ),
	.Y(\u_div/PartRem[4][4] ));
   CLKMX2X2M U39 (.S0(quotient[5]),
	.B(\u_div/SumTmp[5][2] ),
	.A(\u_div/PartRem[6][2] ),
	.Y(\u_div/PartRem[5][3] ));
   CLKMX2X2M U40 (.S0(quotient[6]),
	.B(\u_div/SumTmp[6][1] ),
	.A(\u_div/PartRem[7][1] ),
	.Y(\u_div/PartRem[6][2] ));
   CLKMX2X2M U41 (.S0(quotient[7]),
	.B(\u_div/SumTmp[7][0] ),
	.A(a[7]),
	.Y(\u_div/PartRem[7][1] ));
   CLKMX2X2M U42 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][5] ),
	.A(\u_div/PartRem[2][5] ),
	.Y(\u_div/PartRem[1][6] ));
   CLKMX2X2M U43 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][4] ),
	.A(\u_div/PartRem[3][4] ),
	.Y(\u_div/PartRem[2][5] ));
   CLKMX2X2M U44 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][3] ),
	.A(\u_div/PartRem[4][3] ),
	.Y(\u_div/PartRem[3][4] ));
   CLKMX2X2M U45 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][2] ),
	.A(\u_div/PartRem[5][2] ),
	.Y(\u_div/PartRem[4][3] ));
   CLKMX2X2M U46 (.S0(quotient[5]),
	.B(\u_div/SumTmp[5][1] ),
	.A(\u_div/PartRem[6][1] ),
	.Y(\u_div/PartRem[5][2] ));
   CLKMX2X2M U47 (.S0(quotient[6]),
	.B(\u_div/SumTmp[6][0] ),
	.A(a[6]),
	.Y(\u_div/PartRem[6][1] ));
   CLKMX2X2M U48 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][4] ),
	.A(\u_div/PartRem[2][4] ),
	.Y(\u_div/PartRem[1][5] ));
   CLKMX2X2M U49 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][3] ),
	.A(\u_div/PartRem[3][3] ),
	.Y(\u_div/PartRem[2][4] ));
   CLKMX2X2M U50 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][2] ),
	.A(\u_div/PartRem[4][2] ),
	.Y(\u_div/PartRem[3][3] ));
   CLKMX2X2M U51 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][1] ),
	.A(\u_div/PartRem[5][1] ),
	.Y(\u_div/PartRem[4][2] ));
   CLKMX2X2M U52 (.S0(quotient[5]),
	.B(\u_div/SumTmp[5][0] ),
	.A(a[5]),
	.Y(\u_div/PartRem[5][1] ));
   CLKMX2X2M U53 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][3] ),
	.A(\u_div/PartRem[2][3] ),
	.Y(\u_div/PartRem[1][4] ));
   CLKMX2X2M U54 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][2] ),
	.A(\u_div/PartRem[3][2] ),
	.Y(\u_div/PartRem[2][3] ));
   CLKMX2X2M U55 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][1] ),
	.A(\u_div/PartRem[4][1] ),
	.Y(\u_div/PartRem[3][2] ));
   CLKMX2X2M U56 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][0] ),
	.A(a[4]),
	.Y(\u_div/PartRem[4][1] ));
   CLKMX2X2M U57 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][2] ),
	.A(\u_div/PartRem[2][2] ),
	.Y(\u_div/PartRem[1][3] ));
   CLKMX2X2M U58 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][1] ),
	.A(\u_div/PartRem[3][1] ),
	.Y(\u_div/PartRem[2][2] ));
   CLKMX2X2M U59 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][0] ),
	.A(a[3]),
	.Y(\u_div/PartRem[3][1] ));
   CLKMX2X2M U60 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][1] ),
	.A(\u_div/PartRem[2][1] ),
	.Y(\u_div/PartRem[1][2] ));
   CLKMX2X2M U61 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][0] ),
	.A(a[2]),
	.Y(\u_div/PartRem[2][1] ));
   CLKMX2X2M U62 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][0] ),
	.A(a[1]),
	.Y(\u_div/PartRem[1][1] ));
   AND4X1M U63 (.A(\u_div/CryTmp[7][1] ),
	.B(n20),
	.C(b[1]),
	.D(b[2]),
	.Y(quotient[7]));
   AND3X1M U64 (.A(n20),
	.B(b[2]),
	.C(\u_div/CryTmp[6][2] ),
	.Y(quotient[6]));
   AND2X1M U65 (.A(\u_div/CryTmp[5][3] ),
	.B(n20),
	.Y(quotient[5]));
   AND2X1M U66 (.A(n21),
	.B(b[3]),
	.Y(n20));
   AND2X1M U67 (.A(\u_div/CryTmp[4][4] ),
	.B(n21),
	.Y(quotient[4]));
   AND3X1M U68 (.A(n22),
	.B(b[4]),
	.C(b[5]),
	.Y(n21));
   AND3X1M U69 (.A(n22),
	.B(b[5]),
	.C(\u_div/CryTmp[3][5] ),
	.Y(quotient[3]));
   AND2X1M U70 (.A(\u_div/CryTmp[2][6] ),
	.B(n22),
	.Y(quotient[2]));
   NOR2X1M U71 (.A(b[6]),
	.B(b[7]),
	.Y(n22));
   AND2X1M U72 (.A(\u_div/CryTmp[1][7] ),
	.B(p3),
	.Y(quotient[1]));
endmodule

module ALU_00000008_00000010_0000000e_00000004_DW01_sub_0 (
	A, 
	B, 
	CI, 
	DIFF, 
	CO, 
	p1, 
	p2);
   input [8:0] A;
   input [8:0] B;
   input CI;
   output [8:0] DIFF;
   output CO;
   input p1;
   input p2;

   // Internal wires
   wire [9:0] carry;

   ADDFX2M U2_1 (.A(A[1]),
	.B(B[1]),
	.CI(carry[1]),
	.S(DIFF[1]),
	.CO(carry[2]));
   ADDFX2M U2_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(DIFF[5]),
	.CO(carry[6]));
   ADDFX2M U2_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(DIFF[4]),
	.CO(carry[5]));
   ADDFX2M U2_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(DIFF[3]),
	.CO(carry[4]));
   ADDFX2M U2_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(DIFF[2]),
	.CO(carry[3]));
   ADDFX2M U2_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(DIFF[7]),
	.CO(carry[8]));
   ADDFX2M U2_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(DIFF[6]),
	.CO(carry[7]));
   XNOR2X2M U1 (.A(p1),
	.B(A[0]),
	.Y(DIFF[0]));
   INVX2M U2 (.A(carry[8]),
	.Y(DIFF[8]));
   NAND2X2M U10 (.A(B[0]),
	.B(p2),
	.Y(carry[1]));
endmodule

module ALU_00000008_00000010_0000000e_00000004_DW01_add_0 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [8:0] A;
   input [8:0] B;
   input CI;
   output [8:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire [8:1] carry;

   ADDFX2M U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFX2M U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFX2M U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFX2M U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFX2M U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFX2M U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFX2M U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   AND2X2M U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   CLKXOR2X2M U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module ALU_00000008_00000010_0000000e_00000004_DW01_add_1 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [13:0] A;
   input [13:0] B;
   input CI;
   output [13:0] SUM;
   output CO;

   // Internal wires
   wire \A[5] ;
   wire \A[4] ;
   wire \A[3] ;
   wire \A[2] ;
   wire \A[1] ;
   wire \A[0] ;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;

   assign SUM[6] = A[6] ;
   assign SUM[5] = \A[5]  ;
   assign \A[5]  = A[5] ;
   assign SUM[4] = \A[4]  ;
   assign \A[4]  = A[4] ;
   assign SUM[3] = \A[3]  ;
   assign \A[3]  = A[3] ;
   assign SUM[2] = \A[2]  ;
   assign \A[2]  = A[2] ;
   assign SUM[1] = \A[1]  ;
   assign \A[1]  = A[1] ;
   assign SUM[0] = \A[0]  ;
   assign \A[0]  = A[0] ;

   AOI21BX2M U2 (.A0(n11),
	.A1(A[12]),
	.B0N(n12),
	.Y(n1));
   NAND2X2M U3 (.A(A[7]),
	.B(B[7]),
	.Y(n8));
   XNOR2X2M U4 (.A(A[7]),
	.B(n2),
	.Y(SUM[7]));
   INVX2M U5 (.A(B[7]),
	.Y(n2));
   XNOR2X2M U6 (.A(B[13]),
	.B(n1),
	.Y(SUM[13]));
   XNOR2X1M U7 (.A(n3),
	.B(n4),
	.Y(SUM[9]));
   NOR2X1M U8 (.A(n5),
	.B(n6),
	.Y(n4));
   CLKXOR2X2M U9 (.A(n7),
	.B(n8),
	.Y(SUM[8]));
   NAND2BX1M U10 (.AN(n9),
	.B(n10),
	.Y(n7));
   OAI21X1M U11 (.A0(A[12]),
	.A1(n11),
	.B0(B[12]),
	.Y(n12));
   XOR3XLM U12 (.A(B[12]),
	.B(A[12]),
	.C(n11),
	.Y(SUM[12]));
   OAI21BX1M U13 (.A0(n13),
	.A1(n14),
	.B0N(n15),
	.Y(n11));
   XNOR2X1M U14 (.A(n14),
	.B(n16),
	.Y(SUM[11]));
   NOR2X1M U15 (.A(n15),
	.B(n13),
	.Y(n16));
   NOR2X1M U16 (.A(B[11]),
	.B(A[11]),
	.Y(n13));
   AND2X1M U17 (.A(B[11]),
	.B(A[11]),
	.Y(n15));
   OA21X1M U18 (.A0(n17),
	.A1(n18),
	.B0(n19),
	.Y(n14));
   CLKXOR2X2M U19 (.A(n20),
	.B(n18),
	.Y(SUM[10]));
   AOI2BB1X1M U20 (.A0N(n3),
	.A1N(n6),
	.B0(n5),
	.Y(n18));
   AND2X1M U21 (.A(B[9]),
	.B(A[9]),
	.Y(n5));
   NOR2X1M U22 (.A(B[9]),
	.B(A[9]),
	.Y(n6));
   OA21X1M U23 (.A0(n8),
	.A1(n9),
	.B0(n10),
	.Y(n3));
   CLKNAND2X2M U24 (.A(B[8]),
	.B(A[8]),
	.Y(n10));
   NOR2X1M U25 (.A(B[8]),
	.B(A[8]),
	.Y(n9));
   NAND2BX1M U26 (.AN(n17),
	.B(n19),
	.Y(n20));
   CLKNAND2X2M U27 (.A(B[10]),
	.B(A[10]),
	.Y(n19));
   NOR2X1M U28 (.A(B[10]),
	.B(A[10]),
	.Y(n17));
endmodule

module ALU_00000008_00000010_0000000e_00000004_DW02_mult_0 (
	A, 
	B, 
	TC, 
	PRODUCT);
   input [7:0] A;
   input [7:0] B;
   input TC;
   output [15:0] PRODUCT;

   // Internal wires
   wire \ab[7][7] ;
   wire \ab[7][6] ;
   wire \ab[7][5] ;
   wire \ab[7][4] ;
   wire \ab[7][3] ;
   wire \ab[7][2] ;
   wire \ab[7][1] ;
   wire \ab[7][0] ;
   wire \ab[6][7] ;
   wire \ab[6][6] ;
   wire \ab[6][5] ;
   wire \ab[6][4] ;
   wire \ab[6][3] ;
   wire \ab[6][2] ;
   wire \ab[6][1] ;
   wire \ab[6][0] ;
   wire \ab[5][7] ;
   wire \ab[5][6] ;
   wire \ab[5][5] ;
   wire \ab[5][4] ;
   wire \ab[5][3] ;
   wire \ab[5][2] ;
   wire \ab[5][1] ;
   wire \ab[5][0] ;
   wire \ab[4][7] ;
   wire \ab[4][6] ;
   wire \ab[4][5] ;
   wire \ab[4][4] ;
   wire \ab[4][3] ;
   wire \ab[4][2] ;
   wire \ab[4][1] ;
   wire \ab[4][0] ;
   wire \ab[3][7] ;
   wire \ab[3][6] ;
   wire \ab[3][5] ;
   wire \ab[3][4] ;
   wire \ab[3][3] ;
   wire \ab[3][2] ;
   wire \ab[3][1] ;
   wire \ab[3][0] ;
   wire \ab[2][7] ;
   wire \ab[2][6] ;
   wire \ab[2][5] ;
   wire \ab[2][4] ;
   wire \ab[2][3] ;
   wire \ab[2][2] ;
   wire \ab[2][1] ;
   wire \ab[2][0] ;
   wire \ab[1][7] ;
   wire \ab[1][6] ;
   wire \ab[1][5] ;
   wire \ab[1][4] ;
   wire \ab[1][3] ;
   wire \ab[1][2] ;
   wire \ab[1][1] ;
   wire \ab[1][0] ;
   wire \ab[0][7] ;
   wire \ab[0][6] ;
   wire \ab[0][5] ;
   wire \ab[0][4] ;
   wire \ab[0][3] ;
   wire \ab[0][2] ;
   wire \ab[0][1] ;
   wire \CARRYB[7][6] ;
   wire \CARRYB[7][5] ;
   wire \CARRYB[7][4] ;
   wire \CARRYB[7][3] ;
   wire \CARRYB[7][2] ;
   wire \CARRYB[7][1] ;
   wire \CARRYB[7][0] ;
   wire \CARRYB[6][6] ;
   wire \CARRYB[6][5] ;
   wire \CARRYB[6][4] ;
   wire \CARRYB[6][3] ;
   wire \CARRYB[6][2] ;
   wire \CARRYB[6][1] ;
   wire \CARRYB[6][0] ;
   wire \CARRYB[5][6] ;
   wire \CARRYB[5][5] ;
   wire \CARRYB[5][4] ;
   wire \CARRYB[5][3] ;
   wire \CARRYB[5][2] ;
   wire \CARRYB[5][1] ;
   wire \CARRYB[5][0] ;
   wire \CARRYB[4][6] ;
   wire \CARRYB[4][5] ;
   wire \CARRYB[4][4] ;
   wire \CARRYB[4][3] ;
   wire \CARRYB[4][2] ;
   wire \CARRYB[4][1] ;
   wire \CARRYB[4][0] ;
   wire \CARRYB[3][6] ;
   wire \CARRYB[3][5] ;
   wire \CARRYB[3][4] ;
   wire \CARRYB[3][3] ;
   wire \CARRYB[3][2] ;
   wire \CARRYB[3][1] ;
   wire \CARRYB[3][0] ;
   wire \CARRYB[2][6] ;
   wire \CARRYB[2][5] ;
   wire \CARRYB[2][4] ;
   wire \CARRYB[2][3] ;
   wire \CARRYB[2][2] ;
   wire \CARRYB[2][1] ;
   wire \CARRYB[2][0] ;
   wire \SUMB[7][6] ;
   wire \SUMB[7][5] ;
   wire \SUMB[7][4] ;
   wire \SUMB[7][3] ;
   wire \SUMB[7][2] ;
   wire \SUMB[7][1] ;
   wire \SUMB[7][0] ;
   wire \SUMB[6][6] ;
   wire \SUMB[6][5] ;
   wire \SUMB[6][4] ;
   wire \SUMB[6][3] ;
   wire \SUMB[6][2] ;
   wire \SUMB[6][1] ;
   wire \SUMB[5][6] ;
   wire \SUMB[5][5] ;
   wire \SUMB[5][4] ;
   wire \SUMB[5][3] ;
   wire \SUMB[5][2] ;
   wire \SUMB[5][1] ;
   wire \SUMB[4][6] ;
   wire \SUMB[4][5] ;
   wire \SUMB[4][4] ;
   wire \SUMB[4][3] ;
   wire \SUMB[4][2] ;
   wire \SUMB[4][1] ;
   wire \SUMB[3][6] ;
   wire \SUMB[3][5] ;
   wire \SUMB[3][4] ;
   wire \SUMB[3][3] ;
   wire \SUMB[3][2] ;
   wire \SUMB[3][1] ;
   wire \SUMB[2][6] ;
   wire \SUMB[2][5] ;
   wire \SUMB[2][4] ;
   wire \SUMB[2][3] ;
   wire \SUMB[2][2] ;
   wire \SUMB[2][1] ;
   wire \SUMB[1][6] ;
   wire \SUMB[1][5] ;
   wire \SUMB[1][4] ;
   wire \SUMB[1][3] ;
   wire \SUMB[1][2] ;
   wire \SUMB[1][1] ;
   wire \A1[12] ;
   wire \A1[11] ;
   wire \A1[10] ;
   wire \A1[9] ;
   wire \A1[8] ;
   wire \A1[7] ;
   wire \A1[6] ;
   wire \A1[4] ;
   wire \A1[3] ;
   wire \A1[2] ;
   wire \A1[1] ;
   wire \A1[0] ;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;

   ADDFX2M S1_6_0 (.A(\ab[6][0] ),
	.B(\CARRYB[5][0] ),
	.CI(\SUMB[5][1] ),
	.S(\A1[4] ),
	.CO(\CARRYB[6][0] ));
   ADDFX2M S1_5_0 (.A(\ab[5][0] ),
	.B(\CARRYB[4][0] ),
	.CI(\SUMB[4][1] ),
	.S(\A1[3] ),
	.CO(\CARRYB[5][0] ));
   ADDFX2M S1_4_0 (.A(\ab[4][0] ),
	.B(\CARRYB[3][0] ),
	.CI(\SUMB[3][1] ),
	.S(\A1[2] ),
	.CO(\CARRYB[4][0] ));
   ADDFX2M S1_3_0 (.A(\ab[3][0] ),
	.B(\CARRYB[2][0] ),
	.CI(\SUMB[2][1] ),
	.S(\A1[1] ),
	.CO(\CARRYB[3][0] ));
   ADDFX2M S2_6_5 (.A(\ab[6][5] ),
	.B(\CARRYB[5][5] ),
	.CI(\SUMB[5][6] ),
	.S(\SUMB[6][5] ),
	.CO(\CARRYB[6][5] ));
   ADDFX2M S2_6_4 (.A(\ab[6][4] ),
	.B(\CARRYB[5][4] ),
	.CI(\SUMB[5][5] ),
	.S(\SUMB[6][4] ),
	.CO(\CARRYB[6][4] ));
   ADDFX2M S2_5_5 (.A(\ab[5][5] ),
	.B(\CARRYB[4][5] ),
	.CI(\SUMB[4][6] ),
	.S(\SUMB[5][5] ),
	.CO(\CARRYB[5][5] ));
   ADDFX2M S2_6_3 (.A(\ab[6][3] ),
	.B(\CARRYB[5][3] ),
	.CI(\SUMB[5][4] ),
	.S(\SUMB[6][3] ),
	.CO(\CARRYB[6][3] ));
   ADDFX2M S2_5_4 (.A(\ab[5][4] ),
	.B(\CARRYB[4][4] ),
	.CI(\SUMB[4][5] ),
	.S(\SUMB[5][4] ),
	.CO(\CARRYB[5][4] ));
   ADDFX2M S2_6_1 (.A(\ab[6][1] ),
	.B(\CARRYB[5][1] ),
	.CI(\SUMB[5][2] ),
	.S(\SUMB[6][1] ),
	.CO(\CARRYB[6][1] ));
   ADDFX2M S2_6_2 (.A(\ab[6][2] ),
	.B(\CARRYB[5][2] ),
	.CI(\SUMB[5][3] ),
	.S(\SUMB[6][2] ),
	.CO(\CARRYB[6][2] ));
   ADDFX2M S2_4_5 (.A(\ab[4][5] ),
	.B(\CARRYB[3][5] ),
	.CI(\SUMB[3][6] ),
	.S(\SUMB[4][5] ),
	.CO(\CARRYB[4][5] ));
   ADDFX2M S2_5_1 (.A(\ab[5][1] ),
	.B(\CARRYB[4][1] ),
	.CI(\SUMB[4][2] ),
	.S(\SUMB[5][1] ),
	.CO(\CARRYB[5][1] ));
   ADDFX2M S2_5_2 (.A(\ab[5][2] ),
	.B(\CARRYB[4][2] ),
	.CI(\SUMB[4][3] ),
	.S(\SUMB[5][2] ),
	.CO(\CARRYB[5][2] ));
   ADDFX2M S2_5_3 (.A(\ab[5][3] ),
	.B(\CARRYB[4][3] ),
	.CI(\SUMB[4][4] ),
	.S(\SUMB[5][3] ),
	.CO(\CARRYB[5][3] ));
   ADDFX2M S2_4_1 (.A(\ab[4][1] ),
	.B(\CARRYB[3][1] ),
	.CI(\SUMB[3][2] ),
	.S(\SUMB[4][1] ),
	.CO(\CARRYB[4][1] ));
   ADDFX2M S2_4_2 (.A(\ab[4][2] ),
	.B(\CARRYB[3][2] ),
	.CI(\SUMB[3][3] ),
	.S(\SUMB[4][2] ),
	.CO(\CARRYB[4][2] ));
   ADDFX2M S2_4_3 (.A(\ab[4][3] ),
	.B(\CARRYB[3][3] ),
	.CI(\SUMB[3][4] ),
	.S(\SUMB[4][3] ),
	.CO(\CARRYB[4][3] ));
   ADDFX2M S2_4_4 (.A(\ab[4][4] ),
	.B(\CARRYB[3][4] ),
	.CI(\SUMB[3][5] ),
	.S(\SUMB[4][4] ),
	.CO(\CARRYB[4][4] ));
   ADDFX2M S2_3_1 (.A(\ab[3][1] ),
	.B(\CARRYB[2][1] ),
	.CI(\SUMB[2][2] ),
	.S(\SUMB[3][1] ),
	.CO(\CARRYB[3][1] ));
   ADDFX2M S2_3_2 (.A(\ab[3][2] ),
	.B(\CARRYB[2][2] ),
	.CI(\SUMB[2][3] ),
	.S(\SUMB[3][2] ),
	.CO(\CARRYB[3][2] ));
   ADDFX2M S2_3_3 (.A(\ab[3][3] ),
	.B(\CARRYB[2][3] ),
	.CI(\SUMB[2][4] ),
	.S(\SUMB[3][3] ),
	.CO(\CARRYB[3][3] ));
   ADDFX2M S2_3_4 (.A(\ab[3][4] ),
	.B(\CARRYB[2][4] ),
	.CI(\SUMB[2][5] ),
	.S(\SUMB[3][4] ),
	.CO(\CARRYB[3][4] ));
   ADDFX2M S2_3_5 (.A(\ab[3][5] ),
	.B(\CARRYB[2][5] ),
	.CI(\SUMB[2][6] ),
	.S(\SUMB[3][5] ),
	.CO(\CARRYB[3][5] ));
   ADDFX2M S3_6_6 (.A(\ab[6][6] ),
	.B(\CARRYB[5][6] ),
	.CI(\ab[5][7] ),
	.S(\SUMB[6][6] ),
	.CO(\CARRYB[6][6] ));
   ADDFX2M S3_5_6 (.A(\ab[5][6] ),
	.B(\CARRYB[4][6] ),
	.CI(\ab[4][7] ),
	.S(\SUMB[5][6] ),
	.CO(\CARRYB[5][6] ));
   ADDFX2M S3_4_6 (.A(\ab[4][6] ),
	.B(\CARRYB[3][6] ),
	.CI(\ab[3][7] ),
	.S(\SUMB[4][6] ),
	.CO(\CARRYB[4][6] ));
   ADDFX2M S3_3_6 (.A(\ab[3][6] ),
	.B(\CARRYB[2][6] ),
	.CI(\ab[2][7] ),
	.S(\SUMB[3][6] ),
	.CO(\CARRYB[3][6] ));
   ADDFX2M S3_2_6 (.A(\ab[2][6] ),
	.B(n3),
	.CI(\ab[1][7] ),
	.S(\SUMB[2][6] ),
	.CO(\CARRYB[2][6] ));
   ADDFX2M S1_2_0 (.A(\ab[2][0] ),
	.B(n9),
	.CI(\SUMB[1][1] ),
	.S(\A1[0] ),
	.CO(\CARRYB[2][0] ));
   ADDFX2M S2_2_1 (.A(\ab[2][1] ),
	.B(n8),
	.CI(\SUMB[1][2] ),
	.S(\SUMB[2][1] ),
	.CO(\CARRYB[2][1] ));
   ADDFX2M S2_2_2 (.A(\ab[2][2] ),
	.B(n7),
	.CI(\SUMB[1][3] ),
	.S(\SUMB[2][2] ),
	.CO(\CARRYB[2][2] ));
   ADDFX2M S2_2_3 (.A(\ab[2][3] ),
	.B(n6),
	.CI(\SUMB[1][4] ),
	.S(\SUMB[2][3] ),
	.CO(\CARRYB[2][3] ));
   ADDFX2M S2_2_4 (.A(\ab[2][4] ),
	.B(n5),
	.CI(\SUMB[1][5] ),
	.S(\SUMB[2][4] ),
	.CO(\CARRYB[2][4] ));
   ADDFX2M S2_2_5 (.A(\ab[2][5] ),
	.B(n4),
	.CI(\SUMB[1][6] ),
	.S(\SUMB[2][5] ),
	.CO(\CARRYB[2][5] ));
   ADDFX2M S4_0 (.A(\ab[7][0] ),
	.B(\CARRYB[6][0] ),
	.CI(\SUMB[6][1] ),
	.S(\SUMB[7][0] ),
	.CO(\CARRYB[7][0] ));
   ADDFX2M S4_5 (.A(\ab[7][5] ),
	.B(\CARRYB[6][5] ),
	.CI(\SUMB[6][6] ),
	.S(\SUMB[7][5] ),
	.CO(\CARRYB[7][5] ));
   ADDFX2M S4_4 (.A(\ab[7][4] ),
	.B(\CARRYB[6][4] ),
	.CI(\SUMB[6][5] ),
	.S(\SUMB[7][4] ),
	.CO(\CARRYB[7][4] ));
   ADDFX2M S4_3 (.A(\ab[7][3] ),
	.B(\CARRYB[6][3] ),
	.CI(\SUMB[6][4] ),
	.S(\SUMB[7][3] ),
	.CO(\CARRYB[7][3] ));
   ADDFX2M S4_2 (.A(\ab[7][2] ),
	.B(\CARRYB[6][2] ),
	.CI(\SUMB[6][3] ),
	.S(\SUMB[7][2] ),
	.CO(\CARRYB[7][2] ));
   ADDFX2M S4_1 (.A(\ab[7][1] ),
	.B(\CARRYB[6][1] ),
	.CI(\SUMB[6][2] ),
	.S(\SUMB[7][1] ),
	.CO(\CARRYB[7][1] ));
   ADDFX2M S5_6 (.A(\ab[7][6] ),
	.B(\CARRYB[6][6] ),
	.CI(\ab[6][7] ),
	.S(\SUMB[7][6] ),
	.CO(\CARRYB[7][6] ));
   AND2X2M U2 (.A(\ab[0][7] ),
	.B(\ab[1][6] ),
	.Y(n3));
   AND2X2M U3 (.A(\ab[0][6] ),
	.B(\ab[1][5] ),
	.Y(n4));
   AND2X2M U4 (.A(\ab[0][5] ),
	.B(\ab[1][4] ),
	.Y(n5));
   AND2X2M U5 (.A(\ab[0][4] ),
	.B(\ab[1][3] ),
	.Y(n6));
   AND2X2M U6 (.A(\ab[0][3] ),
	.B(\ab[1][2] ),
	.Y(n7));
   AND2X2M U7 (.A(\ab[0][2] ),
	.B(\ab[1][1] ),
	.Y(n8));
   AND2X2M U8 (.A(\ab[0][1] ),
	.B(\ab[1][0] ),
	.Y(n9));
   AND2X2M U9 (.A(\CARRYB[7][6] ),
	.B(\ab[7][7] ),
	.Y(n10));
   INVX2M U10 (.A(\ab[0][6] ),
	.Y(n22));
   CLKXOR2X2M U11 (.A(\CARRYB[7][1] ),
	.B(\SUMB[7][2] ),
	.Y(\A1[7] ));
   CLKXOR2X2M U12 (.A(\ab[1][0] ),
	.B(\ab[0][1] ),
	.Y(PRODUCT[1]));
   CLKXOR2X2M U13 (.A(\CARRYB[7][6] ),
	.B(\ab[7][7] ),
	.Y(\A1[12] ));
   CLKXOR2X2M U14 (.A(\CARRYB[7][2] ),
	.B(\SUMB[7][3] ),
	.Y(\A1[8] ));
   CLKXOR2X2M U15 (.A(\CARRYB[7][4] ),
	.B(\SUMB[7][5] ),
	.Y(\A1[10] ));
   CLKXOR2X2M U16 (.A(\CARRYB[7][3] ),
	.B(\SUMB[7][4] ),
	.Y(\A1[9] ));
   CLKXOR2X2M U17 (.A(\CARRYB[7][5] ),
	.B(\SUMB[7][6] ),
	.Y(\A1[11] ));
   INVX2M U18 (.A(\ab[0][7] ),
	.Y(n23));
   INVX2M U19 (.A(\ab[0][5] ),
	.Y(n21));
   INVX2M U20 (.A(\ab[0][4] ),
	.Y(n20));
   INVX2M U21 (.A(\ab[0][3] ),
	.Y(n19));
   INVX2M U22 (.A(\ab[0][2] ),
	.Y(n18));
   AND2X2M U23 (.A(\CARRYB[7][0] ),
	.B(\SUMB[7][1] ),
	.Y(n11));
   INVX2M U24 (.A(\SUMB[7][1] ),
	.Y(n17));
   AND2X2M U25 (.A(\CARRYB[7][1] ),
	.B(\SUMB[7][2] ),
	.Y(n12));
   AND2X2M U26 (.A(\CARRYB[7][3] ),
	.B(\SUMB[7][4] ),
	.Y(n13));
   AND2X2M U27 (.A(\CARRYB[7][5] ),
	.B(\SUMB[7][6] ),
	.Y(n14));
   AND2X2M U28 (.A(\CARRYB[7][2] ),
	.B(\SUMB[7][3] ),
	.Y(n15));
   AND2X2M U29 (.A(\CARRYB[7][4] ),
	.B(\SUMB[7][5] ),
	.Y(n16));
   XNOR2X2M U30 (.A(\CARRYB[7][0] ),
	.B(n17),
	.Y(\A1[6] ));
   XNOR2X2M U31 (.A(\ab[1][6] ),
	.B(n23),
	.Y(\SUMB[1][6] ));
   XNOR2X2M U32 (.A(\ab[1][5] ),
	.B(n22),
	.Y(\SUMB[1][5] ));
   XNOR2X2M U33 (.A(\ab[1][4] ),
	.B(n21),
	.Y(\SUMB[1][4] ));
   XNOR2X2M U34 (.A(\ab[1][3] ),
	.B(n20),
	.Y(\SUMB[1][3] ));
   XNOR2X2M U35 (.A(\ab[1][2] ),
	.B(n19),
	.Y(\SUMB[1][2] ));
   XNOR2X2M U36 (.A(\ab[1][1] ),
	.B(n18),
	.Y(\SUMB[1][1] ));
   NOR2X1M U54 (.A(A[7]),
	.B(B[7]),
	.Y(\ab[7][7] ));
   NOR2X1M U55 (.A(A[7]),
	.B(B[6]),
	.Y(\ab[7][6] ));
   NOR2X1M U56 (.A(A[7]),
	.B(B[5]),
	.Y(\ab[7][5] ));
   NOR2X1M U57 (.A(A[7]),
	.B(B[4]),
	.Y(\ab[7][4] ));
   NOR2X1M U58 (.A(A[7]),
	.B(B[3]),
	.Y(\ab[7][3] ));
   NOR2X1M U59 (.A(A[7]),
	.B(B[2]),
	.Y(\ab[7][2] ));
   NOR2X1M U60 (.A(A[7]),
	.B(B[1]),
	.Y(\ab[7][1] ));
   NOR2X1M U61 (.A(A[7]),
	.B(B[0]),
	.Y(\ab[7][0] ));
   NOR2X1M U62 (.A(B[7]),
	.B(A[6]),
	.Y(\ab[6][7] ));
   NOR2X1M U63 (.A(B[6]),
	.B(A[6]),
	.Y(\ab[6][6] ));
   NOR2X1M U64 (.A(B[5]),
	.B(A[6]),
	.Y(\ab[6][5] ));
   NOR2X1M U65 (.A(B[4]),
	.B(A[6]),
	.Y(\ab[6][4] ));
   NOR2X1M U66 (.A(B[3]),
	.B(A[6]),
	.Y(\ab[6][3] ));
   NOR2X1M U67 (.A(B[2]),
	.B(A[6]),
	.Y(\ab[6][2] ));
   NOR2X1M U68 (.A(B[1]),
	.B(A[6]),
	.Y(\ab[6][1] ));
   NOR2X1M U69 (.A(B[0]),
	.B(A[6]),
	.Y(\ab[6][0] ));
   NOR2X1M U70 (.A(B[7]),
	.B(A[5]),
	.Y(\ab[5][7] ));
   NOR2X1M U71 (.A(B[6]),
	.B(A[5]),
	.Y(\ab[5][6] ));
   NOR2X1M U72 (.A(B[5]),
	.B(A[5]),
	.Y(\ab[5][5] ));
   NOR2X1M U73 (.A(B[4]),
	.B(A[5]),
	.Y(\ab[5][4] ));
   NOR2X1M U74 (.A(B[3]),
	.B(A[5]),
	.Y(\ab[5][3] ));
   NOR2X1M U75 (.A(B[2]),
	.B(A[5]),
	.Y(\ab[5][2] ));
   NOR2X1M U76 (.A(B[1]),
	.B(A[5]),
	.Y(\ab[5][1] ));
   NOR2X1M U77 (.A(B[0]),
	.B(A[5]),
	.Y(\ab[5][0] ));
   NOR2X1M U78 (.A(B[7]),
	.B(A[4]),
	.Y(\ab[4][7] ));
   NOR2X1M U79 (.A(B[6]),
	.B(A[4]),
	.Y(\ab[4][6] ));
   NOR2X1M U80 (.A(B[5]),
	.B(A[4]),
	.Y(\ab[4][5] ));
   NOR2X1M U81 (.A(B[4]),
	.B(A[4]),
	.Y(\ab[4][4] ));
   NOR2X1M U82 (.A(B[3]),
	.B(A[4]),
	.Y(\ab[4][3] ));
   NOR2X1M U83 (.A(B[2]),
	.B(A[4]),
	.Y(\ab[4][2] ));
   NOR2X1M U84 (.A(B[1]),
	.B(A[4]),
	.Y(\ab[4][1] ));
   NOR2X1M U85 (.A(B[0]),
	.B(A[4]),
	.Y(\ab[4][0] ));
   NOR2X1M U86 (.A(B[7]),
	.B(A[3]),
	.Y(\ab[3][7] ));
   NOR2X1M U87 (.A(B[6]),
	.B(A[3]),
	.Y(\ab[3][6] ));
   NOR2X1M U88 (.A(B[5]),
	.B(A[3]),
	.Y(\ab[3][5] ));
   NOR2X1M U89 (.A(B[4]),
	.B(A[3]),
	.Y(\ab[3][4] ));
   NOR2X1M U90 (.A(B[3]),
	.B(A[3]),
	.Y(\ab[3][3] ));
   NOR2X1M U91 (.A(B[2]),
	.B(A[3]),
	.Y(\ab[3][2] ));
   NOR2X1M U92 (.A(B[1]),
	.B(A[3]),
	.Y(\ab[3][1] ));
   NOR2X1M U93 (.A(B[0]),
	.B(A[3]),
	.Y(\ab[3][0] ));
   NOR2X1M U94 (.A(B[7]),
	.B(A[2]),
	.Y(\ab[2][7] ));
   NOR2X1M U95 (.A(B[6]),
	.B(A[2]),
	.Y(\ab[2][6] ));
   NOR2X1M U96 (.A(B[5]),
	.B(A[2]),
	.Y(\ab[2][5] ));
   NOR2X1M U97 (.A(B[4]),
	.B(A[2]),
	.Y(\ab[2][4] ));
   NOR2X1M U98 (.A(B[3]),
	.B(A[2]),
	.Y(\ab[2][3] ));
   NOR2X1M U99 (.A(B[2]),
	.B(A[2]),
	.Y(\ab[2][2] ));
   NOR2X1M U100 (.A(B[1]),
	.B(A[2]),
	.Y(\ab[2][1] ));
   NOR2X1M U101 (.A(B[0]),
	.B(A[2]),
	.Y(\ab[2][0] ));
   NOR2X1M U102 (.A(B[7]),
	.B(A[1]),
	.Y(\ab[1][7] ));
   NOR2X1M U103 (.A(B[6]),
	.B(A[1]),
	.Y(\ab[1][6] ));
   NOR2X1M U104 (.A(B[5]),
	.B(A[1]),
	.Y(\ab[1][5] ));
   NOR2X1M U105 (.A(B[4]),
	.B(A[1]),
	.Y(\ab[1][4] ));
   NOR2X1M U106 (.A(B[3]),
	.B(A[1]),
	.Y(\ab[1][3] ));
   NOR2X1M U107 (.A(B[2]),
	.B(A[1]),
	.Y(\ab[1][2] ));
   NOR2X1M U108 (.A(B[1]),
	.B(A[1]),
	.Y(\ab[1][1] ));
   NOR2X1M U109 (.A(B[0]),
	.B(A[1]),
	.Y(\ab[1][0] ));
   NOR2X1M U110 (.A(B[7]),
	.B(A[0]),
	.Y(\ab[0][7] ));
   NOR2X1M U111 (.A(B[6]),
	.B(A[0]),
	.Y(\ab[0][6] ));
   NOR2X1M U112 (.A(B[5]),
	.B(A[0]),
	.Y(\ab[0][5] ));
   NOR2X1M U113 (.A(B[4]),
	.B(A[0]),
	.Y(\ab[0][4] ));
   NOR2X1M U114 (.A(B[3]),
	.B(A[0]),
	.Y(\ab[0][3] ));
   NOR2X1M U115 (.A(B[2]),
	.B(A[0]),
	.Y(\ab[0][2] ));
   NOR2X1M U116 (.A(B[1]),
	.B(A[0]),
	.Y(\ab[0][1] ));
   NOR2X1M U117 (.A(B[0]),
	.B(A[0]),
	.Y(PRODUCT[0]));
   ALU_00000008_00000010_0000000e_00000004_DW01_add_1 FS_1 (.A({ FE_UNCONNECTEDZ_0,
		\A1[12] ,
		\A1[11] ,
		\A1[10] ,
		\A1[9] ,
		\A1[8] ,
		\A1[7] ,
		\A1[6] ,
		\SUMB[7][0] ,
		\A1[4] ,
		\A1[3] ,
		\A1[2] ,
		\A1[1] ,
		\A1[0]  }),
	.B({ n10,
		n14,
		n16,
		n13,
		n15,
		n12,
		n11,
		FE_UNCONNECTEDZ_1,
		FE_UNCONNECTEDZ_2,
		FE_UNCONNECTEDZ_3,
		FE_UNCONNECTEDZ_4,
		FE_UNCONNECTEDZ_5,
		FE_UNCONNECTEDZ_6,
		FE_UNCONNECTEDZ_7 }),
	.SUM({ PRODUCT[15],
		PRODUCT[14],
		PRODUCT[13],
		PRODUCT[12],
		PRODUCT[11],
		PRODUCT[10],
		PRODUCT[9],
		PRODUCT[8],
		PRODUCT[7],
		PRODUCT[6],
		PRODUCT[5],
		PRODUCT[4],
		PRODUCT[3],
		PRODUCT[2] }));
endmodule

module ALU_00000008_00000010_0000000e_00000004_test_1 (
	clk, 
	rst, 
	Operand_A, 
	Operand_B, 
	ALU_Fun, 
	Enable, 
	ALU_Out, 
	Out_Valid, 
	test_si, 
	test_se);
   input clk;
   input rst;
   input [7:0] Operand_A;
   input [7:0] Operand_B;
   input [3:0] ALU_Fun;
   input Enable;
   output [15:0] ALU_Out;
   output Out_Valid;
   input test_si;
   input test_se;

   // Internal wires
   wire FE_DBTN15_Operand_A_Top_7_;
   wire FE_DBTN14_Operand_A_Top_6_;
   wire FE_DBTN13_Operand_A_Top_5_;
   wire FE_DBTN12_Operand_A_Top_4_;
   wire FE_DBTN11_Operand_A_Top_3_;
   wire FE_DBTN10_Operand_A_Top_2_;
   wire FE_DBTN9_Operand_A_Top_1_;
   wire FE_DBTN8_Operand_A_Top_0_;
   wire FE_DBTN7_Operand_B_Top_7_;
   wire FE_DBTN6_Operand_B_Top_6_;
   wire FE_DBTN5_Operand_B_Top_5_;
   wire FE_DBTN4_Operand_B_Top_4_;
   wire FE_DBTN3_Operand_B_Top_3_;
   wire FE_DBTN2_Operand_B_Top_2_;
   wire FE_DBTN1_Operand_B_Top_1_;
   wire FE_DBTN0_Operand_B_Top_0_;
   wire N91;
   wire N92;
   wire N93;
   wire N94;
   wire N95;
   wire N96;
   wire N97;
   wire N98;
   wire N99;
   wire N100;
   wire N101;
   wire N102;
   wire N103;
   wire N104;
   wire N105;
   wire N106;
   wire N107;
   wire N108;
   wire N109;
   wire N110;
   wire N111;
   wire N112;
   wire N113;
   wire N114;
   wire N115;
   wire N116;
   wire N117;
   wire N118;
   wire N119;
   wire N120;
   wire N121;
   wire N122;
   wire N123;
   wire N124;
   wire N125;
   wire N126;
   wire N127;
   wire N128;
   wire N129;
   wire N130;
   wire N131;
   wire N132;
   wire N157;
   wire N158;
   wire N159;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n61;
   wire n62;
   wire n63;
   wire n64;
   wire n65;
   wire n66;
   wire n67;
   wire n68;
   wire n69;
   wire n70;
   wire n71;
   wire n72;
   wire n73;
   wire n74;
   wire n75;
   wire n76;
   wire n77;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;
   wire n100;
   wire n101;
   wire n102;
   wire n103;
   wire n104;
   wire n105;
   wire n106;
   wire n107;
   wire n108;
   wire n109;
   wire n110;
   wire n111;
   wire n112;
   wire n113;
   wire n114;
   wire n115;
   wire n116;
   wire n117;
   wire n118;
   wire n119;
   wire n120;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n121;
   wire n122;
   wire n123;
   wire n124;
   wire n125;
   wire n126;
   wire n127;
   wire n128;
   wire n133;
   wire n134;
   wire n136;
   wire n148;
   wire n149;
   wire n150;
   wire n151;
   wire n152;
   wire [15:0] ALU_Out_Comb;

   INVX2M FE_DBTC15_Operand_A_Top_7_ (.A(Operand_A[7]),
	.Y(FE_DBTN15_Operand_A_Top_7_));
   INVX2M FE_DBTC14_Operand_A_Top_6_ (.A(Operand_A[6]),
	.Y(FE_DBTN14_Operand_A_Top_6_));
   INVX2M FE_DBTC13_Operand_A_Top_5_ (.A(Operand_A[5]),
	.Y(FE_DBTN13_Operand_A_Top_5_));
   INVX2M FE_DBTC12_Operand_A_Top_4_ (.A(Operand_A[4]),
	.Y(FE_DBTN12_Operand_A_Top_4_));
   INVX2M FE_DBTC11_Operand_A_Top_3_ (.A(Operand_A[3]),
	.Y(FE_DBTN11_Operand_A_Top_3_));
   INVX2M FE_DBTC10_Operand_A_Top_2_ (.A(Operand_A[2]),
	.Y(FE_DBTN10_Operand_A_Top_2_));
   INVX2M FE_DBTC9_Operand_A_Top_1_ (.A(Operand_A[1]),
	.Y(FE_DBTN9_Operand_A_Top_1_));
   INVX2M FE_DBTC8_Operand_A_Top_0_ (.A(Operand_A[0]),
	.Y(FE_DBTN8_Operand_A_Top_0_));
   INVX2M FE_DBTC7_Operand_B_Top_7_ (.A(Operand_B[7]),
	.Y(FE_DBTN7_Operand_B_Top_7_));
   INVX2M FE_DBTC6_Operand_B_Top_6_ (.A(Operand_B[6]),
	.Y(FE_DBTN6_Operand_B_Top_6_));
   INVX2M FE_DBTC5_Operand_B_Top_5_ (.A(Operand_B[5]),
	.Y(FE_DBTN5_Operand_B_Top_5_));
   INVX2M FE_DBTC4_Operand_B_Top_4_ (.A(Operand_B[4]),
	.Y(FE_DBTN4_Operand_B_Top_4_));
   INVX2M FE_DBTC3_Operand_B_Top_3_ (.A(Operand_B[3]),
	.Y(FE_DBTN3_Operand_B_Top_3_));
   INVX2M FE_DBTC2_Operand_B_Top_2_ (.A(Operand_B[2]),
	.Y(FE_DBTN2_Operand_B_Top_2_));
   INVX2M FE_DBTC1_Operand_B_Top_1_ (.A(Operand_B[1]),
	.Y(FE_DBTN1_Operand_B_Top_1_));
   INVX2M FE_DBTC0_Operand_B_Top_0_ (.A(Operand_B[0]),
	.Y(FE_DBTN0_Operand_B_Top_0_));
   SDFFRQX2M \ALU_Out_reg[7]  (.SI(ALU_Out[6]),
	.SE(test_se),
	.D(ALU_Out_Comb[7]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[7]));
   SDFFRQX2M \ALU_Out_reg[6]  (.SI(ALU_Out[5]),
	.SE(test_se),
	.D(ALU_Out_Comb[6]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[6]));
   SDFFRQX2M \ALU_Out_reg[5]  (.SI(ALU_Out[4]),
	.SE(test_se),
	.D(ALU_Out_Comb[5]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[5]));
   SDFFRQX2M \ALU_Out_reg[4]  (.SI(ALU_Out[3]),
	.SE(test_se),
	.D(ALU_Out_Comb[4]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[4]));
   SDFFRQX2M \ALU_Out_reg[3]  (.SI(ALU_Out[2]),
	.SE(test_se),
	.D(ALU_Out_Comb[3]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[3]));
   SDFFRQX2M \ALU_Out_reg[2]  (.SI(ALU_Out[1]),
	.SE(test_se),
	.D(ALU_Out_Comb[2]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[2]));
   SDFFRQX2M \ALU_Out_reg[1]  (.SI(ALU_Out[0]),
	.SE(test_se),
	.D(ALU_Out_Comb[1]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[1]));
   SDFFRQX2M \ALU_Out_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(ALU_Out_Comb[0]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[0]));
   SDFFRQX2M \ALU_Out_reg[15]  (.SI(ALU_Out[14]),
	.SE(test_se),
	.D(ALU_Out_Comb[15]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[15]));
   SDFFRQX2M \ALU_Out_reg[14]  (.SI(ALU_Out[13]),
	.SE(test_se),
	.D(ALU_Out_Comb[14]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[14]));
   SDFFRQX2M \ALU_Out_reg[13]  (.SI(ALU_Out[12]),
	.SE(test_se),
	.D(ALU_Out_Comb[13]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[13]));
   SDFFRQX2M \ALU_Out_reg[12]  (.SI(ALU_Out[11]),
	.SE(test_se),
	.D(ALU_Out_Comb[12]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[12]));
   SDFFRQX2M \ALU_Out_reg[11]  (.SI(ALU_Out[10]),
	.SE(test_se),
	.D(ALU_Out_Comb[11]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[11]));
   SDFFRQX2M \ALU_Out_reg[10]  (.SI(ALU_Out[9]),
	.SE(test_se),
	.D(ALU_Out_Comb[10]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[10]));
   SDFFRQX2M \ALU_Out_reg[9]  (.SI(ALU_Out[8]),
	.SE(test_se),
	.D(ALU_Out_Comb[9]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[9]));
   SDFFRQX2M \ALU_Out_reg[8]  (.SI(ALU_Out[7]),
	.SE(test_se),
	.D(ALU_Out_Comb[8]),
	.CK(clk),
	.RN(rst),
	.Q(ALU_Out[8]));
   SDFFRQX2M Out_Valid_reg (.SI(ALU_Out[15]),
	.SE(test_se),
	.D(Enable),
	.CK(clk),
	.RN(rst),
	.Q(Out_Valid));
   OAI2B1X2M U27 (.A0(n106),
	.A1N(n119),
	.B0(n117),
	.Y(n65));
   OAI2B1X2M U28 (.A0(n116),
	.A1N(n115),
	.B0(n117),
	.Y(n66));
   NOR2BX2M U29 (.AN(n120),
	.B(n116),
	.Y(n55));
   AND2X2M U30 (.A(n115),
	.B(n119),
	.Y(n60));
   NAND2X2M U31 (.A(n149),
	.B(n151),
	.Y(n116));
   INVX2M U32 (.A(n53),
	.Y(n148));
   AND2X2M U33 (.A(n120),
	.B(n119),
	.Y(n68));
   NOR2X2M U35 (.A(n106),
	.B(n116),
	.Y(n59));
   OAI2BB1X2M U36 (.A0N(N118),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[9]));
   OAI2BB1X2M U37 (.A0N(N119),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[10]));
   OAI2BB1X2M U38 (.A0N(N120),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[11]));
   OAI2BB1X2M U39 (.A0N(N121),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[12]));
   OAI2BB1X2M U40 (.A0N(N122),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[13]));
   OAI2BB1X2M U41 (.A0N(N123),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[14]));
   OAI2BB1X2M U42 (.A0N(N124),
	.A1N(n49),
	.B0(n50),
	.Y(ALU_Out_Comb[15]));
   NOR3X2M U43 (.A(n106),
	.B(ALU_Fun[0]),
	.C(n149),
	.Y(n53));
   NOR2X2M U44 (.A(ALU_Fun[2]),
	.B(ALU_Fun[1]),
	.Y(n120));
   AND3X2M U45 (.A(n120),
	.B(n151),
	.C(ALU_Fun[3]),
	.Y(n64));
   AND3X2M U46 (.A(n119),
	.B(ALU_Fun[1]),
	.C(n150),
	.Y(n67));
   AND3X2M U47 (.A(n115),
	.B(ALU_Fun[3]),
	.C(ALU_Fun[0]),
	.Y(n72));
   NOR2X2M U48 (.A(n151),
	.B(ALU_Fun[3]),
	.Y(n119));
   NOR2X2M U49 (.A(n150),
	.B(ALU_Fun[1]),
	.Y(n115));
   NAND2X2M U50 (.A(ALU_Fun[2]),
	.B(ALU_Fun[1]),
	.Y(n106));
   INVX2M U51 (.A(ALU_Fun[0]),
	.Y(n151));
   NAND3X2M U52 (.A(n120),
	.B(ALU_Fun[0]),
	.C(ALU_Fun[3]),
	.Y(n117));
   INVX2M U53 (.A(ALU_Fun[3]),
	.Y(n149));
   INVX2M U54 (.A(ALU_Fun[2]),
	.Y(n150));
   NAND2X2M U55 (.A(Enable),
	.B(n136),
	.Y(n50));
   INVX2M U56 (.A(Enable),
	.Y(n152));
   NOR3BX4M U58 (.AN(ALU_Fun[1]),
	.B(n116),
	.C(ALU_Fun[2]),
	.Y(n54));
   AND2X2M U59 (.A(n54),
	.B(Enable),
	.Y(n49));
   OAI222X1M U60 (.A0(n74),
	.A1(FE_DBTN6_Operand_B_Top_6_),
	.B0(Operand_B[6]),
	.B1(n75),
	.C0(n148),
	.C1(FE_DBTN13_Operand_A_Top_5_),
	.Y(n73));
   AOI221XLM U61 (.A0(Operand_A[6]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN14_Operand_A_Top_6_),
	.C0(n59),
	.Y(n75));
   AOI221XLM U62 (.A0(n64),
	.A1(FE_DBTN14_Operand_A_Top_6_),
	.B0(Operand_A[6]),
	.B1(n66),
	.C0(n60),
	.Y(n74));
   AOI221XLM U63 (.A0(n64),
	.A1(FE_DBTN8_Operand_A_Top_0_),
	.B0(Operand_A[0]),
	.B1(n66),
	.C0(n60),
	.Y(n114));
   AOI31X2M U65 (.A0(n108),
	.A1(n109),
	.A2(n110),
	.B0(n152),
	.Y(ALU_Out_Comb[0]));
   AOI22X1M U66 (.A0(N100),
	.A1(n68),
	.B0(N91),
	.B1(n55),
	.Y(n108));
   AOI221XLM U67 (.A0(Operand_A[1]),
	.A1(n72),
	.B0(n59),
	.B1(FE_DBTN8_Operand_A_Top_0_),
	.C0(n111),
	.Y(n110));
   AOI222X1M U68 (.A0(N109),
	.A1(n54),
	.B0(Operand_A[0]),
	.B1(n60),
	.C0(N125),
	.C1(n67),
	.Y(n109));
   AOI31X2M U69 (.A0(n100),
	.A1(n101),
	.A2(n102),
	.B0(n152),
	.Y(ALU_Out_Comb[1]));
   AOI22X1M U70 (.A0(N101),
	.A1(n68),
	.B0(N92),
	.B1(n55),
	.Y(n100));
   AOI221XLM U71 (.A0(Operand_A[2]),
	.A1(n72),
	.B0(n59),
	.B1(FE_DBTN9_Operand_A_Top_1_),
	.C0(n103),
	.Y(n102));
   AOI222X1M U72 (.A0(N110),
	.A1(n54),
	.B0(Operand_A[1]),
	.B1(n60),
	.C0(N126),
	.C1(n67),
	.Y(n101));
   AOI31X2M U73 (.A0(n94),
	.A1(n95),
	.A2(n96),
	.B0(n152),
	.Y(ALU_Out_Comb[2]));
   AOI22X1M U74 (.A0(N102),
	.A1(n68),
	.B0(N93),
	.B1(n55),
	.Y(n94));
   AOI221XLM U75 (.A0(Operand_A[3]),
	.A1(n72),
	.B0(n59),
	.B1(FE_DBTN10_Operand_A_Top_2_),
	.C0(n97),
	.Y(n96));
   AOI222X1M U76 (.A0(N111),
	.A1(n54),
	.B0(Operand_A[2]),
	.B1(n60),
	.C0(N127),
	.C1(n67),
	.Y(n95));
   AOI31X2M U77 (.A0(n88),
	.A1(n89),
	.A2(n90),
	.B0(n152),
	.Y(ALU_Out_Comb[3]));
   AOI22X1M U78 (.A0(N103),
	.A1(n68),
	.B0(N94),
	.B1(n55),
	.Y(n88));
   AOI221XLM U79 (.A0(Operand_A[4]),
	.A1(n72),
	.B0(n59),
	.B1(FE_DBTN11_Operand_A_Top_3_),
	.C0(n91),
	.Y(n90));
   AOI222X1M U80 (.A0(N112),
	.A1(n54),
	.B0(Operand_A[3]),
	.B1(n60),
	.C0(N128),
	.C1(n67),
	.Y(n89));
   AOI31X2M U81 (.A0(n82),
	.A1(n83),
	.A2(n84),
	.B0(n152),
	.Y(ALU_Out_Comb[4]));
   AOI22X1M U82 (.A0(N104),
	.A1(n68),
	.B0(N95),
	.B1(n55),
	.Y(n82));
   AOI221XLM U83 (.A0(n72),
	.A1(Operand_A[5]),
	.B0(n59),
	.B1(FE_DBTN12_Operand_A_Top_4_),
	.C0(n85),
	.Y(n84));
   AOI222X1M U84 (.A0(N113),
	.A1(n54),
	.B0(Operand_A[4]),
	.B1(n60),
	.C0(N129),
	.C1(n67),
	.Y(n83));
   AOI31X2M U85 (.A0(n76),
	.A1(n77),
	.A2(n78),
	.B0(n152),
	.Y(ALU_Out_Comb[5]));
   AOI22X1M U86 (.A0(N105),
	.A1(n68),
	.B0(N96),
	.B1(n55),
	.Y(n76));
   AOI221XLM U87 (.A0(n72),
	.A1(Operand_A[6]),
	.B0(n59),
	.B1(FE_DBTN13_Operand_A_Top_5_),
	.C0(n79),
	.Y(n78));
   AOI222X1M U88 (.A0(N114),
	.A1(n54),
	.B0(Operand_A[5]),
	.B1(n60),
	.C0(N130),
	.C1(n67),
	.Y(n77));
   AOI31X2M U89 (.A0(n69),
	.A1(n70),
	.A2(n71),
	.B0(n152),
	.Y(ALU_Out_Comb[6]));
   AOI22X1M U90 (.A0(N106),
	.A1(n68),
	.B0(N97),
	.B1(n55),
	.Y(n69));
   AOI221XLM U91 (.A0(n72),
	.A1(Operand_A[7]),
	.B0(n59),
	.B1(FE_DBTN14_Operand_A_Top_6_),
	.C0(n73),
	.Y(n71));
   AOI222X1M U92 (.A0(N115),
	.A1(n54),
	.B0(n60),
	.B1(Operand_A[6]),
	.C0(N131),
	.C1(n67),
	.Y(n70));
   AOI31X2M U93 (.A0(n56),
	.A1(n57),
	.A2(n58),
	.B0(n152),
	.Y(ALU_Out_Comb[7]));
   AOI22X1M U94 (.A0(N132),
	.A1(n67),
	.B0(N116),
	.B1(n54),
	.Y(n57));
   AOI22X1M U95 (.A0(N107),
	.A1(n68),
	.B0(N98),
	.B1(n55),
	.Y(n56));
   AOI221XLM U96 (.A0(n59),
	.A1(FE_DBTN15_Operand_A_Top_7_),
	.B0(n60),
	.B1(Operand_A[7]),
	.C0(n61),
	.Y(n58));
   INVX2M U97 (.A(n107),
	.Y(n136));
   AOI211X2M U98 (.A0(N108),
	.A1(n68),
	.B0(n59),
	.C0(n65),
	.Y(n107));
   AOI21X2M U99 (.A0(n51),
	.A1(n52),
	.B0(n152),
	.Y(ALU_Out_Comb[8]));
   AOI21X2M U100 (.A0(N99),
	.A1(n55),
	.B0(n136),
	.Y(n51));
   AOI22X1M U101 (.A0(Operand_A[7]),
	.A1(n53),
	.B0(N117),
	.B1(n54),
	.Y(n52));
   AO22X1M U102 (.A0(N158),
	.A1(ALU_Fun[0]),
	.B0(N157),
	.B1(n151),
	.Y(n118));
   INVX2M U103 (.A(n128),
	.Y(N158));
   OAI222X1M U112 (.A0(Operand_B[0]),
	.A1(n112),
	.B0(n113),
	.B1(n149),
	.C0(n114),
	.C1(FE_DBTN0_Operand_B_Top_0_),
	.Y(n111));
   AOI221XLM U113 (.A0(Operand_A[0]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN8_Operand_A_Top_0_),
	.C0(n59),
	.Y(n112));
   AOI33X2M U114 (.A0(n118),
	.A1(n150),
	.A2(ALU_Fun[1]),
	.B0(n115),
	.B1(n151),
	.B2(N159),
	.Y(n113));
   OAI222X1M U115 (.A0(n104),
	.A1(FE_DBTN1_Operand_B_Top_1_),
	.B0(Operand_B[1]),
	.B1(n105),
	.C0(n148),
	.C1(FE_DBTN8_Operand_A_Top_0_),
	.Y(n103));
   AOI221XLM U117 (.A0(Operand_A[1]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN9_Operand_A_Top_1_),
	.C0(n59),
	.Y(n105));
   AOI221XLM U118 (.A0(n64),
	.A1(FE_DBTN9_Operand_A_Top_1_),
	.B0(Operand_A[1]),
	.B1(n66),
	.C0(n60),
	.Y(n104));
   OAI222X1M U119 (.A0(n98),
	.A1(FE_DBTN2_Operand_B_Top_2_),
	.B0(Operand_B[2]),
	.B1(n99),
	.C0(n148),
	.C1(FE_DBTN9_Operand_A_Top_1_),
	.Y(n97));
   AOI221XLM U120 (.A0(Operand_A[2]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN10_Operand_A_Top_2_),
	.C0(n59),
	.Y(n99));
   AOI221XLM U121 (.A0(n64),
	.A1(FE_DBTN10_Operand_A_Top_2_),
	.B0(Operand_A[2]),
	.B1(n66),
	.C0(n60),
	.Y(n98));
   OAI222X1M U122 (.A0(n92),
	.A1(FE_DBTN3_Operand_B_Top_3_),
	.B0(Operand_B[3]),
	.B1(n93),
	.C0(n148),
	.C1(FE_DBTN10_Operand_A_Top_2_),
	.Y(n91));
   AOI221XLM U123 (.A0(Operand_A[3]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN11_Operand_A_Top_3_),
	.C0(n59),
	.Y(n93));
   AOI221XLM U124 (.A0(n64),
	.A1(FE_DBTN11_Operand_A_Top_3_),
	.B0(Operand_A[3]),
	.B1(n66),
	.C0(n60),
	.Y(n92));
   OAI222X1M U125 (.A0(n86),
	.A1(FE_DBTN4_Operand_B_Top_4_),
	.B0(Operand_B[4]),
	.B1(n87),
	.C0(n148),
	.C1(FE_DBTN11_Operand_A_Top_3_),
	.Y(n85));
   AOI221XLM U127 (.A0(Operand_A[4]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN12_Operand_A_Top_4_),
	.C0(n59),
	.Y(n87));
   AOI221XLM U128 (.A0(n64),
	.A1(FE_DBTN12_Operand_A_Top_4_),
	.B0(Operand_A[4]),
	.B1(n66),
	.C0(n60),
	.Y(n86));
   OAI222X1M U129 (.A0(n80),
	.A1(FE_DBTN5_Operand_B_Top_5_),
	.B0(Operand_B[5]),
	.B1(n81),
	.C0(n148),
	.C1(FE_DBTN12_Operand_A_Top_4_),
	.Y(n79));
   AOI221XLM U131 (.A0(Operand_A[5]),
	.A1(n64),
	.B0(n65),
	.B1(FE_DBTN13_Operand_A_Top_5_),
	.C0(n59),
	.Y(n81));
   AOI221XLM U132 (.A0(n64),
	.A1(FE_DBTN13_Operand_A_Top_5_),
	.B0(Operand_A[5]),
	.B1(n66),
	.C0(n60),
	.Y(n80));
   OAI222X1M U133 (.A0(n62),
	.A1(FE_DBTN7_Operand_B_Top_7_),
	.B0(Operand_B[7]),
	.B1(n63),
	.C0(n148),
	.C1(FE_DBTN14_Operand_A_Top_6_),
	.Y(n61));
   AOI221XLM U135 (.A0(n64),
	.A1(Operand_A[7]),
	.B0(n65),
	.B1(FE_DBTN15_Operand_A_Top_7_),
	.C0(n59),
	.Y(n63));
   AOI221XLM U136 (.A0(n64),
	.A1(FE_DBTN15_Operand_A_Top_7_),
	.B0(Operand_A[7]),
	.B1(n66),
	.C0(n60),
	.Y(n62));
   INVX2M U137 (.A(n31),
	.Y(n133));
   INVX2M U138 (.A(n42),
	.Y(n134));
   NOR2X1M U146 (.A(FE_DBTN15_Operand_A_Top_7_),
	.B(Operand_B[7]),
	.Y(n125));
   NAND2BX1M U147 (.AN(Operand_B[4]),
	.B(Operand_A[4]),
	.Y(n46));
   NAND2BX1M U148 (.AN(Operand_A[4]),
	.B(Operand_B[4]),
	.Y(n35));
   CLKNAND2X2M U149 (.A(n46),
	.B(n35),
	.Y(n48));
   NOR2X1M U150 (.A(FE_DBTN3_Operand_B_Top_3_),
	.B(Operand_A[3]),
	.Y(n43));
   NOR2X1M U151 (.A(FE_DBTN2_Operand_B_Top_2_),
	.B(Operand_A[2]),
	.Y(n34));
   NOR2X1M U152 (.A(FE_DBTN0_Operand_B_Top_0_),
	.B(Operand_A[0]),
	.Y(n31));
   CLKNAND2X2M U153 (.A(Operand_A[2]),
	.B(FE_DBTN2_Operand_B_Top_2_),
	.Y(n45));
   NAND2BX1M U154 (.AN(n34),
	.B(n45),
	.Y(n40));
   AOI21X1M U155 (.A0(n31),
	.A1(FE_DBTN9_Operand_A_Top_1_),
	.B0(Operand_B[1]),
	.Y(n32));
   AOI211X1M U156 (.A0(Operand_A[1]),
	.A1(n133),
	.B0(n40),
	.C0(n32),
	.Y(n33));
   CLKNAND2X2M U157 (.A(Operand_A[3]),
	.B(FE_DBTN3_Operand_B_Top_3_),
	.Y(n44));
   OAI31X1M U158 (.A0(n43),
	.A1(n34),
	.A2(n33),
	.B0(n44),
	.Y(n36));
   NAND2BX1M U159 (.AN(Operand_A[5]),
	.B(Operand_B[5]),
	.Y(n123));
   OAI211X1M U160 (.A0(n48),
	.A1(n36),
	.B0(n35),
	.C0(n123),
	.Y(n37));
   NAND2BX1M U161 (.AN(Operand_B[5]),
	.B(Operand_A[5]),
	.Y(n47));
   XNOR2X1M U162 (.A(Operand_A[6]),
	.B(Operand_B[6]),
	.Y(n122));
   AOI32X1M U163 (.A0(n37),
	.A1(n47),
	.A2(n122),
	.B0(Operand_B[6]),
	.B1(FE_DBTN14_Operand_A_Top_6_),
	.Y(n38));
   CLKNAND2X2M U164 (.A(Operand_B[7]),
	.B(FE_DBTN15_Operand_A_Top_7_),
	.Y(n126));
   OAI21X1M U165 (.A0(n125),
	.A1(n38),
	.B0(n126),
	.Y(N159));
   CLKNAND2X2M U166 (.A(Operand_A[0]),
	.B(FE_DBTN0_Operand_B_Top_0_),
	.Y(n41));
   OA21X1M U167 (.A0(n41),
	.A1(FE_DBTN9_Operand_A_Top_1_),
	.B0(Operand_B[1]),
	.Y(n39));
   AOI211X1M U168 (.A0(n41),
	.A1(FE_DBTN9_Operand_A_Top_1_),
	.B0(n40),
	.C0(n39),
	.Y(n42));
   AOI31X1M U169 (.A0(n134),
	.A1(n45),
	.A2(n44),
	.B0(n43),
	.Y(n121));
   OAI2B11X1M U170 (.A0(n48),
	.A1N(n121),
	.B0(n47),
	.C0(n46),
	.Y(n124));
   AOI32X1M U171 (.A0(n124),
	.A1(n123),
	.A2(n122),
	.B0(Operand_A[6]),
	.B1(FE_DBTN6_Operand_B_Top_6_),
	.Y(n127));
   AOI2B1X1M U172 (.A0(n126),
	.A1N(n127),
	.B0(n125),
	.Y(n128));
   NOR2X1M U173 (.A(N159),
	.B(N158),
	.Y(N157));
   ALU_00000008_00000010_0000000e_00000004_DW_div_uns_0 div_67 (.a({ Operand_A[7],
		Operand_A[6],
		Operand_A[5],
		Operand_A[4],
		Operand_A[3],
		Operand_A[2],
		Operand_A[1],
		FE_DBTN8_Operand_A_Top_0_ }),
	.b({ Operand_B[7],
		Operand_B[6],
		FE_DBTN5_Operand_B_Top_5_,
		FE_DBTN4_Operand_B_Top_4_,
		FE_DBTN3_Operand_B_Top_3_,
		FE_DBTN2_Operand_B_Top_2_,
		FE_DBTN1_Operand_B_Top_1_,
		Operand_B[0] }),
	.quotient({ N132,
		N131,
		N130,
		N129,
		N128,
		N127,
		N126,
		N125 }),
	.p1(FE_DBTN0_Operand_B_Top_0_),
	.p2(FE_DBTN6_Operand_B_Top_6_),
	.p3(FE_DBTN7_Operand_B_Top_7_),
	.p4(FE_DBTN9_Operand_A_Top_1_),
	.p5(FE_DBTN10_Operand_A_Top_2_),
	.p6(FE_DBTN11_Operand_A_Top_3_),
	.p7(FE_DBTN12_Operand_A_Top_4_),
	.p8(FE_DBTN13_Operand_A_Top_5_),
	.p9(FE_DBTN14_Operand_A_Top_6_));
   ALU_00000008_00000010_0000000e_00000004_DW01_sub_0 sub_59 (.A({ FE_UNCONNECTEDZ_0,
		Operand_A }),
	.B({ FE_UNCONNECTEDZ_1,
		FE_DBTN7_Operand_B_Top_7_,
		FE_DBTN6_Operand_B_Top_6_,
		FE_DBTN5_Operand_B_Top_5_,
		FE_DBTN4_Operand_B_Top_4_,
		FE_DBTN3_Operand_B_Top_3_,
		FE_DBTN2_Operand_B_Top_2_,
		FE_DBTN1_Operand_B_Top_1_,
		Operand_B[0] }),
	.DIFF({ N108,
		N107,
		N106,
		N105,
		N104,
		N103,
		N102,
		N101,
		N100 }),
	.p1(FE_DBTN0_Operand_B_Top_0_),
	.p2(FE_DBTN8_Operand_A_Top_0_));
   ALU_00000008_00000010_0000000e_00000004_DW01_add_0 add_55 (.A({ FE_UNCONNECTEDZ_2,
		Operand_A }),
	.B({ FE_UNCONNECTEDZ_3,
		Operand_B }),
	.SUM({ N99,
		N98,
		N97,
		N96,
		N95,
		N94,
		N93,
		N92,
		N91 }));
   ALU_00000008_00000010_0000000e_00000004_DW02_mult_0 mult_63 (.A({ FE_DBTN15_Operand_A_Top_7_,
		FE_DBTN14_Operand_A_Top_6_,
		FE_DBTN13_Operand_A_Top_5_,
		FE_DBTN12_Operand_A_Top_4_,
		FE_DBTN11_Operand_A_Top_3_,
		FE_DBTN10_Operand_A_Top_2_,
		FE_DBTN9_Operand_A_Top_1_,
		FE_DBTN8_Operand_A_Top_0_ }),
	.B({ FE_DBTN7_Operand_B_Top_7_,
		FE_DBTN6_Operand_B_Top_6_,
		FE_DBTN5_Operand_B_Top_5_,
		FE_DBTN4_Operand_B_Top_4_,
		FE_DBTN3_Operand_B_Top_3_,
		FE_DBTN2_Operand_B_Top_2_,
		FE_DBTN1_Operand_B_Top_1_,
		FE_DBTN0_Operand_B_Top_0_ }),
	.PRODUCT({ N124,
		N123,
		N122,
		N121,
		N120,
		N119,
		N118,
		N117,
		N116,
		N115,
		N114,
		N113,
		N112,
		N111,
		N110,
		N109 }));
endmodule

module Clock_Gating (
	clk, 
	En, 
	test_mode, 
	Gated_clk);
   input clk;
   input En;
   input test_mode;
   output Gated_clk;

   // Internal wires
   wire _0_net_;

   TLATNCAX20M U0 (.E(_0_net_),
	.CK(clk),
	.ECK(Gated_clk));
   OR2X2M U1 (.A(En),
	.B(test_mode),
	.Y(_0_net_));
endmodule

module REG_File_00000008_00000010_00000004_00000000_00000000_0000001c_00000008_test_1 (
	clk, 
	rst, 
	Address, 
	WrEn, 
	RdEn, 
	WrData, 
	RdData, 
	RdData_Valid, 
	REG0_ALU_A, 
	REG1_ALU_B, 
	REG2_UART, 
	REG3_DIV, 
	test_si3, 
	test_si2, 
	test_si1, 
	test_so3, 
	test_so2, 
	test_so1, 
	test_se, 
	p1, 
	p2, 
	p3, 
	p4, 
	REF_CLK_MUX__L2_N0, 
	REF_CLK_MUX__L2_N3, 
	REF_CLK_MUX__L2_N2);
   input clk;
   input rst;
   input [3:0] Address;
   input WrEn;
   input RdEn;
   input [7:0] WrData;
   output [7:0] RdData;
   output RdData_Valid;
   output [7:0] REG0_ALU_A;
   output [7:0] REG1_ALU_B;
   output [6:0] REG2_UART;
   output [3:0] REG3_DIV;
   input test_si3;
   input test_si2;
   input test_si1;
   output test_so3;
   output test_so2;
   output test_so1;
   input test_se;
   input p1;
   input p2;
   input p3;
   input p4;
   input REF_CLK_MUX__L2_N0;
   input REF_CLK_MUX__L2_N3;
   input REF_CLK_MUX__L2_N2;

   // Internal wires
   wire FE_PHN29_SI_1_;
   wire FE_PHN28_SI_0_;
   wire FE_PHN24_SI_0_;
   wire FE_PHN23_SI_1_;
   wire FE_OFN19_REF_CLK_Sync_RST_MUX;
   wire N10;
   wire N11;
   wire N12;
   wire N13;
   wire \Memory[2][7] ;
   wire \Memory[3][7] ;
   wire \Memory[3][6] ;
   wire \Memory[3][5] ;
   wire \Memory[3][4] ;
   wire \Memory[4][7] ;
   wire \Memory[4][6] ;
   wire \Memory[4][5] ;
   wire \Memory[4][4] ;
   wire \Memory[4][3] ;
   wire \Memory[4][2] ;
   wire \Memory[4][1] ;
   wire \Memory[4][0] ;
   wire \Memory[5][7] ;
   wire \Memory[5][6] ;
   wire \Memory[5][5] ;
   wire \Memory[5][4] ;
   wire \Memory[5][3] ;
   wire \Memory[5][2] ;
   wire \Memory[5][1] ;
   wire \Memory[5][0] ;
   wire \Memory[6][7] ;
   wire \Memory[6][6] ;
   wire \Memory[6][5] ;
   wire \Memory[6][4] ;
   wire \Memory[6][3] ;
   wire \Memory[6][2] ;
   wire \Memory[6][1] ;
   wire \Memory[6][0] ;
   wire \Memory[7][7] ;
   wire \Memory[7][6] ;
   wire \Memory[7][5] ;
   wire \Memory[7][4] ;
   wire \Memory[7][3] ;
   wire \Memory[7][2] ;
   wire \Memory[7][1] ;
   wire \Memory[7][0] ;
   wire \Memory[8][7] ;
   wire \Memory[8][6] ;
   wire \Memory[8][5] ;
   wire \Memory[8][4] ;
   wire \Memory[8][3] ;
   wire \Memory[8][2] ;
   wire \Memory[8][1] ;
   wire \Memory[8][0] ;
   wire \Memory[9][7] ;
   wire \Memory[9][6] ;
   wire \Memory[9][5] ;
   wire \Memory[9][4] ;
   wire \Memory[9][3] ;
   wire \Memory[9][2] ;
   wire \Memory[9][1] ;
   wire \Memory[9][0] ;
   wire \Memory[10][7] ;
   wire \Memory[10][6] ;
   wire \Memory[10][5] ;
   wire \Memory[10][4] ;
   wire \Memory[10][3] ;
   wire \Memory[10][2] ;
   wire \Memory[10][1] ;
   wire \Memory[10][0] ;
   wire \Memory[11][7] ;
   wire \Memory[11][6] ;
   wire \Memory[11][5] ;
   wire \Memory[11][4] ;
   wire \Memory[11][3] ;
   wire \Memory[11][2] ;
   wire \Memory[11][1] ;
   wire \Memory[11][0] ;
   wire \Memory[12][7] ;
   wire \Memory[12][6] ;
   wire \Memory[12][5] ;
   wire \Memory[12][4] ;
   wire \Memory[12][3] ;
   wire \Memory[12][2] ;
   wire \Memory[12][1] ;
   wire \Memory[12][0] ;
   wire \Memory[13][7] ;
   wire \Memory[13][6] ;
   wire \Memory[13][5] ;
   wire \Memory[13][4] ;
   wire \Memory[13][3] ;
   wire \Memory[13][2] ;
   wire \Memory[13][1] ;
   wire \Memory[13][0] ;
   wire \Memory[14][7] ;
   wire \Memory[14][6] ;
   wire \Memory[14][5] ;
   wire \Memory[14][4] ;
   wire \Memory[14][3] ;
   wire \Memory[14][2] ;
   wire \Memory[14][1] ;
   wire \Memory[14][0] ;
   wire \Memory[15][7] ;
   wire \Memory[15][6] ;
   wire \Memory[15][5] ;
   wire \Memory[15][4] ;
   wire \Memory[15][3] ;
   wire \Memory[15][2] ;
   wire \Memory[15][1] ;
   wire \Memory[15][0] ;
   wire n140;
   wire n141;
   wire n142;
   wire n143;
   wire n144;
   wire n145;
   wire n146;
   wire n147;
   wire n148;
   wire n149;
   wire n150;
   wire n151;
   wire n152;
   wire n153;
   wire n154;
   wire n155;
   wire n156;
   wire n157;
   wire n158;
   wire n159;
   wire n160;
   wire n161;
   wire n162;
   wire n163;
   wire n164;
   wire n165;
   wire n166;
   wire n167;
   wire n168;
   wire n169;
   wire n170;
   wire n171;
   wire n172;
   wire n173;
   wire n174;
   wire n175;
   wire n176;
   wire n177;
   wire n178;
   wire n179;
   wire n180;
   wire n181;
   wire n182;
   wire n183;
   wire n184;
   wire n185;
   wire n186;
   wire n187;
   wire n188;
   wire n189;
   wire n190;
   wire n191;
   wire n192;
   wire n193;
   wire n194;
   wire n195;
   wire n196;
   wire n197;
   wire n198;
   wire n199;
   wire n200;
   wire n201;
   wire n202;
   wire n203;
   wire n204;
   wire n205;
   wire n206;
   wire n207;
   wire n208;
   wire n209;
   wire n210;
   wire n211;
   wire n212;
   wire n213;
   wire n214;
   wire n215;
   wire n216;
   wire n217;
   wire n218;
   wire n219;
   wire n220;
   wire n221;
   wire n222;
   wire n223;
   wire n224;
   wire n225;
   wire n226;
   wire n227;
   wire n228;
   wire n229;
   wire n230;
   wire n231;
   wire n232;
   wire n233;
   wire n234;
   wire n235;
   wire n236;
   wire n237;
   wire n238;
   wire n239;
   wire n240;
   wire n241;
   wire n242;
   wire n243;
   wire n244;
   wire n245;
   wire n246;
   wire n247;
   wire n248;
   wire n249;
   wire n250;
   wire n251;
   wire n252;
   wire n253;
   wire n254;
   wire n255;
   wire n256;
   wire n257;
   wire n258;
   wire n259;
   wire n260;
   wire n261;
   wire n262;
   wire n263;
   wire n264;
   wire n265;
   wire n266;
   wire n267;
   wire n268;
   wire n269;
   wire n270;
   wire n271;
   wire n272;
   wire n273;
   wire n274;
   wire n275;
   wire n276;
   wire n277;
   wire n278;
   wire n279;
   wire n280;
   wire n281;
   wire n282;
   wire n283;
   wire n284;
   wire n285;
   wire n286;
   wire n287;
   wire n288;
   wire n289;
   wire n290;
   wire n291;
   wire n292;
   wire n293;
   wire n408;
   wire n409;
   wire n410;
   wire n411;
   wire n412;
   wire n413;
   wire n414;
   wire n415;
   wire n416;
   wire n417;
   wire n418;
   wire n419;
   wire n420;
   wire n421;
   wire n422;
   wire n423;
   wire n424;
   wire n425;
   wire n426;
   wire n427;
   wire n428;
   wire n429;
   wire n430;
   wire n431;
   wire n432;
   wire n433;
   wire n434;
   wire n435;
   wire n436;
   wire n437;
   wire n438;
   wire n439;
   wire n446;
   wire n447;
   wire n448;
   wire n449;
   wire n450;
   wire n451;
   wire n452;
   wire n453;
   wire n454;
   wire n455;
   wire n456;

   assign N10 = Address[0] ;
   assign N11 = Address[1] ;
   assign N12 = Address[2] ;
   assign N13 = Address[3] ;
   assign RdData_Valid = RdEn ;
   assign test_so1 = \Memory[4][5]  ;
   assign test_so2 = \Memory[14][2]  ;
   assign test_so3 = \Memory[15][7]  ;

   DLY1X1M FE_PHC29_SI_1_ (.A(FE_PHN23_SI_1_),
	.Y(FE_PHN29_SI_1_));
   DLY4X1M FE_PHC28_SI_0_ (.A(FE_PHN24_SI_0_),
	.Y(FE_PHN28_SI_0_));
   DLY4X1M FE_PHC24_SI_0_ (.A(test_si3),
	.Y(FE_PHN24_SI_0_));
   DLY4X1M FE_PHC23_SI_1_ (.A(test_si2),
	.Y(FE_PHN23_SI_1_));
   BUFX8M FE_OFC19_REF_CLK_Sync_RST_MUX (.A(rst),
	.Y(FE_OFN19_REF_CLK_Sync_RST_MUX));
   SDFFSQX1M \Memory_reg[2][3]  (.SI(REG2_UART[2]),
	.SE(p1),
	.D(n273),
	.CK(clk),
	.SN(rst),
	.Q(REG2_UART[3]));
   SDFFSQX1M \Memory_reg[2][4]  (.SI(REG2_UART[3]),
	.SE(p1),
	.D(n274),
	.CK(clk),
	.SN(rst),
	.Q(REG2_UART[4]));
   SDFFSQX1M \Memory_reg[2][2]  (.SI(REG2_UART[1]),
	.SE(p1),
	.D(n272),
	.CK(clk),
	.SN(rst),
	.Q(REG2_UART[2]));
   SDFFRQX1M \Memory_reg[1][7]  (.SI(REG1_ALU_B[6]),
	.SE(p1),
	.D(n285),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(REG1_ALU_B[7]));
   SDFFRQX1M \Memory_reg[1][5]  (.SI(REG1_ALU_B[4]),
	.SE(p1),
	.D(n283),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(REG1_ALU_B[5]));
   SDFFRQX1M \Memory_reg[1][4]  (.SI(REG1_ALU_B[3]),
	.SE(p1),
	.D(n282),
	.CK(clk),
	.RN(p4),
	.Q(REG1_ALU_B[4]));
   SDFFRQX1M \Memory_reg[1][3]  (.SI(REG1_ALU_B[2]),
	.SE(p1),
	.D(n281),
	.CK(clk),
	.RN(p4),
	.Q(REG1_ALU_B[3]));
   SDFFRQX1M \Memory_reg[1][2]  (.SI(REG1_ALU_B[1]),
	.SE(p1),
	.D(n280),
	.CK(clk),
	.RN(p4),
	.Q(REG1_ALU_B[2]));
   SDFFRQX1M \Memory_reg[1][1]  (.SI(REG1_ALU_B[0]),
	.SE(p1),
	.D(n279),
	.CK(clk),
	.RN(p4),
	.Q(REG1_ALU_B[1]));
   SDFFRQX1M \Memory_reg[1][0]  (.SI(REG0_ALU_A[7]),
	.SE(p1),
	.D(n278),
	.CK(clk),
	.RN(p4),
	.Q(REG1_ALU_B[0]));
   SDFFRQX1M \Memory_reg[7][7]  (.SI(\Memory[7][6] ),
	.SE(p2),
	.D(n237),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[7][7] ));
   SDFFRQX1M \Memory_reg[7][6]  (.SI(\Memory[7][5] ),
	.SE(p2),
	.D(n236),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[7][6] ));
   SDFFRQX1M \Memory_reg[7][5]  (.SI(\Memory[7][4] ),
	.SE(p2),
	.D(n235),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[7][5] ));
   SDFFRQX1M \Memory_reg[7][4]  (.SI(\Memory[7][3] ),
	.SE(p2),
	.D(n234),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[7][4] ));
   SDFFRQX1M \Memory_reg[7][3]  (.SI(\Memory[7][2] ),
	.SE(p2),
	.D(n233),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[7][3] ));
   SDFFRQX1M \Memory_reg[7][2]  (.SI(\Memory[7][1] ),
	.SE(p2),
	.D(n232),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[7][2] ));
   SDFFRQX1M \Memory_reg[7][1]  (.SI(\Memory[7][0] ),
	.SE(p2),
	.D(n231),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[7][1] ));
   SDFFRQX1M \Memory_reg[7][0]  (.SI(\Memory[6][7] ),
	.SE(p2),
	.D(n230),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[7][0] ));
   SDFFRQX1M \Memory_reg[6][7]  (.SI(\Memory[6][6] ),
	.SE(p2),
	.D(n245),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[6][7] ));
   SDFFRQX1M \Memory_reg[6][6]  (.SI(\Memory[6][5] ),
	.SE(p2),
	.D(n244),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[6][6] ));
   SDFFRQX1M \Memory_reg[6][5]  (.SI(\Memory[6][4] ),
	.SE(p2),
	.D(n243),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[6][5] ));
   SDFFRQX1M \Memory_reg[6][4]  (.SI(\Memory[6][3] ),
	.SE(p2),
	.D(n242),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[6][4] ));
   SDFFRQX1M \Memory_reg[6][3]  (.SI(\Memory[6][2] ),
	.SE(p2),
	.D(n241),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[6][3] ));
   SDFFRQX1M \Memory_reg[6][2]  (.SI(\Memory[6][1] ),
	.SE(p2),
	.D(n240),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[6][2] ));
   SDFFRQX1M \Memory_reg[6][1]  (.SI(\Memory[6][0] ),
	.SE(p2),
	.D(n239),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[6][1] ));
   SDFFRQX1M \Memory_reg[6][0]  (.SI(\Memory[5][7] ),
	.SE(p2),
	.D(n238),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[6][0] ));
   SDFFRQX1M \Memory_reg[5][7]  (.SI(\Memory[5][6] ),
	.SE(p2),
	.D(n253),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[5][7] ));
   SDFFRQX1M \Memory_reg[5][6]  (.SI(\Memory[5][5] ),
	.SE(p2),
	.D(n252),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[5][6] ));
   SDFFRQX1M \Memory_reg[5][5]  (.SI(\Memory[5][4] ),
	.SE(p2),
	.D(n251),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[5][5] ));
   SDFFRQX1M \Memory_reg[5][4]  (.SI(\Memory[5][3] ),
	.SE(p2),
	.D(n250),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[5][4] ));
   SDFFRQX1M \Memory_reg[5][3]  (.SI(\Memory[5][2] ),
	.SE(p2),
	.D(n249),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[5][3] ));
   SDFFRQX1M \Memory_reg[5][2]  (.SI(\Memory[5][1] ),
	.SE(p2),
	.D(n248),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[5][2] ));
   SDFFRQX1M \Memory_reg[5][1]  (.SI(\Memory[5][0] ),
	.SE(p2),
	.D(n247),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[5][1] ));
   SDFFRQX1M \Memory_reg[5][0]  (.SI(\Memory[4][7] ),
	.SE(p2),
	.D(n246),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[5][0] ));
   SDFFRQX1M \Memory_reg[4][7]  (.SI(\Memory[4][6] ),
	.SE(p1),
	.D(n261),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(\Memory[4][7] ));
   SDFFRQX1M \Memory_reg[4][6]  (.SI(FE_PHN29_SI_1_),
	.SE(test_se),
	.D(n260),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(\Memory[4][6] ));
   SDFFRQX1M \Memory_reg[4][5]  (.SI(\Memory[4][4] ),
	.SE(p1),
	.D(n259),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[4][5] ));
   SDFFRQX1M \Memory_reg[4][4]  (.SI(\Memory[4][3] ),
	.SE(p2),
	.D(n258),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[4][4] ));
   SDFFRQX1M \Memory_reg[4][3]  (.SI(\Memory[4][2] ),
	.SE(p2),
	.D(n257),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[4][3] ));
   SDFFRQX1M \Memory_reg[4][2]  (.SI(\Memory[4][1] ),
	.SE(p2),
	.D(n256),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(\Memory[4][2] ));
   SDFFRQX1M \Memory_reg[4][1]  (.SI(\Memory[4][0] ),
	.SE(p2),
	.D(n255),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[4][1] ));
   SDFFRQX1M \Memory_reg[4][0]  (.SI(\Memory[3][7] ),
	.SE(p1),
	.D(n254),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(\Memory[4][0] ));
   SDFFRQX1M \Memory_reg[3][7]  (.SI(\Memory[3][6] ),
	.SE(p1),
	.D(n269),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(\Memory[3][7] ));
   SDFFRQX1M \Memory_reg[3][6]  (.SI(\Memory[3][5] ),
	.SE(p1),
	.D(n268),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(\Memory[3][6] ));
   SDFFRQX1M \Memory_reg[3][5]  (.SI(\Memory[3][4] ),
	.SE(p1),
	.D(n267),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(\Memory[3][5] ));
   SDFFRQX1M \Memory_reg[3][4]  (.SI(REG3_DIV[3]),
	.SE(p1),
	.D(n266),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[3][4] ));
   SDFFRQX1M \Memory_reg[3][2]  (.SI(REG3_DIV[1]),
	.SE(p1),
	.D(n264),
	.CK(clk),
	.RN(rst),
	.Q(REG3_DIV[2]));
   SDFFRQX1M \Memory_reg[3][1]  (.SI(REG3_DIV[0]),
	.SE(p1),
	.D(n263),
	.CK(clk),
	.RN(rst),
	.Q(REG3_DIV[1]));
   SDFFRQX1M \Memory_reg[3][0]  (.SI(\Memory[2][7] ),
	.SE(p1),
	.D(n262),
	.CK(clk),
	.RN(p4),
	.Q(REG3_DIV[0]));
   SDFFRQX1M \Memory_reg[2][7]  (.SI(REG2_UART[6]),
	.SE(p1),
	.D(n277),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[2][7] ));
   SDFFRQX1M \Memory_reg[2][6]  (.SI(REG2_UART[5]),
	.SE(p1),
	.D(n276),
	.CK(clk),
	.RN(rst),
	.Q(REG2_UART[6]));
   SDFFRQX1M \Memory_reg[2][5]  (.SI(REG2_UART[4]),
	.SE(p1),
	.D(n275),
	.CK(clk),
	.RN(rst),
	.Q(REG2_UART[5]));
   SDFFRQX1M \Memory_reg[2][1]  (.SI(REG2_UART[0]),
	.SE(test_se),
	.D(n271),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(REG2_UART[1]));
   SDFFRQX1M \Memory_reg[2][0]  (.SI(REG1_ALU_B[7]),
	.SE(p1),
	.D(n270),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(REG2_UART[0]));
   SDFFRQX1M \Memory_reg[1][6]  (.SI(REG1_ALU_B[5]),
	.SE(p1),
	.D(n284),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(REG1_ALU_B[6]));
   SDFFRQX1M \Memory_reg[0][7]  (.SI(REG0_ALU_A[6]),
	.SE(p1),
	.D(n293),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(p4),
	.Q(REG0_ALU_A[7]));
   SDFFRQX1M \Memory_reg[0][6]  (.SI(REG0_ALU_A[5]),
	.SE(p1),
	.D(n292),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(REG0_ALU_A[6]));
   SDFFRQX1M \Memory_reg[0][5]  (.SI(REG0_ALU_A[4]),
	.SE(p3),
	.D(n291),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(p4),
	.Q(REG0_ALU_A[5]));
   SDFFRQX1M \Memory_reg[0][4]  (.SI(REG0_ALU_A[3]),
	.SE(p1),
	.D(n290),
	.CK(clk),
	.RN(p4),
	.Q(REG0_ALU_A[4]));
   SDFFRQX1M \Memory_reg[0][3]  (.SI(REG0_ALU_A[2]),
	.SE(p1),
	.D(n289),
	.CK(clk),
	.RN(rst),
	.Q(REG0_ALU_A[3]));
   SDFFRQX1M \Memory_reg[0][2]  (.SI(REG0_ALU_A[1]),
	.SE(p1),
	.D(n288),
	.CK(clk),
	.RN(rst),
	.Q(REG0_ALU_A[2]));
   SDFFRQX1M \Memory_reg[0][1]  (.SI(REG0_ALU_A[0]),
	.SE(p1),
	.D(n287),
	.CK(clk),
	.RN(p4),
	.Q(REG0_ALU_A[1]));
   SDFFRQX1M \Memory_reg[0][0]  (.SI(test_si1),
	.SE(p1),
	.D(n286),
	.CK(clk),
	.RN(rst),
	.Q(REG0_ALU_A[0]));
   SDFFRQX1M \Memory_reg[14][7]  (.SI(\Memory[14][6] ),
	.SE(test_se),
	.D(n181),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[14][7] ));
   SDFFRQX1M \Memory_reg[14][6]  (.SI(\Memory[14][5] ),
	.SE(test_se),
	.D(n180),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[14][6] ));
   SDFFRQX1M \Memory_reg[14][5]  (.SI(\Memory[14][4] ),
	.SE(test_se),
	.D(n179),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[14][5] ));
   SDFFRQX1M \Memory_reg[14][4]  (.SI(\Memory[14][3] ),
	.SE(test_se),
	.D(n178),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[14][4] ));
   SDFFRQX1M \Memory_reg[14][3]  (.SI(FE_PHN28_SI_0_),
	.SE(test_se),
	.D(n177),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[14][3] ));
   SDFFRQX1M \Memory_reg[14][2]  (.SI(\Memory[14][1] ),
	.SE(test_se),
	.D(n176),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[14][2] ));
   SDFFRQX1M \Memory_reg[14][1]  (.SI(\Memory[14][0] ),
	.SE(test_se),
	.D(n175),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[14][1] ));
   SDFFRQX1M \Memory_reg[14][0]  (.SI(\Memory[13][7] ),
	.SE(test_se),
	.D(n174),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[14][0] ));
   SDFFRQX1M \Memory_reg[13][7]  (.SI(\Memory[13][6] ),
	.SE(test_se),
	.D(n189),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[13][7] ));
   SDFFRQX1M \Memory_reg[13][6]  (.SI(\Memory[13][5] ),
	.SE(test_se),
	.D(n188),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[13][6] ));
   SDFFRQX1M \Memory_reg[13][5]  (.SI(\Memory[13][4] ),
	.SE(test_se),
	.D(n187),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[13][5] ));
   SDFFRQX1M \Memory_reg[13][4]  (.SI(\Memory[13][3] ),
	.SE(test_se),
	.D(n186),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[13][4] ));
   SDFFRQX1M \Memory_reg[13][3]  (.SI(\Memory[13][2] ),
	.SE(test_se),
	.D(n185),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[13][3] ));
   SDFFRQX1M \Memory_reg[13][2]  (.SI(\Memory[13][1] ),
	.SE(test_se),
	.D(n184),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[13][2] ));
   SDFFRQX1M \Memory_reg[13][1]  (.SI(\Memory[13][0] ),
	.SE(test_se),
	.D(n183),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[13][1] ));
   SDFFRQX1M \Memory_reg[13][0]  (.SI(\Memory[12][7] ),
	.SE(test_se),
	.D(n182),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[13][0] ));
   SDFFRQX1M \Memory_reg[11][7]  (.SI(\Memory[11][6] ),
	.SE(test_se),
	.D(n205),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][7] ));
   SDFFRQX1M \Memory_reg[11][6]  (.SI(\Memory[11][5] ),
	.SE(test_se),
	.D(n204),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][6] ));
   SDFFRQX1M \Memory_reg[11][5]  (.SI(\Memory[11][4] ),
	.SE(test_se),
	.D(n203),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][5] ));
   SDFFRQX1M \Memory_reg[11][4]  (.SI(\Memory[11][3] ),
	.SE(p2),
	.D(n202),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][4] ));
   SDFFRQX1M \Memory_reg[11][3]  (.SI(\Memory[11][2] ),
	.SE(p2),
	.D(n201),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][3] ));
   SDFFRQX1M \Memory_reg[11][2]  (.SI(\Memory[11][1] ),
	.SE(p2),
	.D(n200),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][2] ));
   SDFFRQX1M \Memory_reg[11][1]  (.SI(\Memory[11][0] ),
	.SE(p2),
	.D(n199),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][1] ));
   SDFFRQX1M \Memory_reg[11][0]  (.SI(\Memory[10][7] ),
	.SE(test_se),
	.D(n198),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[11][0] ));
   SDFFRQX1M \Memory_reg[9][7]  (.SI(\Memory[9][6] ),
	.SE(test_se),
	.D(n221),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][7] ));
   SDFFRQX1M \Memory_reg[9][6]  (.SI(\Memory[9][5] ),
	.SE(test_se),
	.D(n220),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][6] ));
   SDFFRQX1M \Memory_reg[9][5]  (.SI(\Memory[9][4] ),
	.SE(test_se),
	.D(n219),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][5] ));
   SDFFRQX1M \Memory_reg[9][4]  (.SI(\Memory[9][3] ),
	.SE(p2),
	.D(n218),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][4] ));
   SDFFRQX1M \Memory_reg[9][3]  (.SI(\Memory[9][2] ),
	.SE(p2),
	.D(n217),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][3] ));
   SDFFRQX1M \Memory_reg[9][2]  (.SI(\Memory[9][1] ),
	.SE(p2),
	.D(n216),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][2] ));
   SDFFRQX1M \Memory_reg[9][1]  (.SI(\Memory[9][0] ),
	.SE(p2),
	.D(n215),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][1] ));
   SDFFRQX1M \Memory_reg[9][0]  (.SI(\Memory[8][7] ),
	.SE(test_se),
	.D(n214),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[9][0] ));
   SDFFRQX1M \Memory_reg[12][7]  (.SI(\Memory[12][6] ),
	.SE(test_se),
	.D(n197),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[12][7] ));
   SDFFRQX1M \Memory_reg[12][6]  (.SI(\Memory[12][5] ),
	.SE(test_se),
	.D(n196),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][6] ));
   SDFFRQX1M \Memory_reg[12][5]  (.SI(\Memory[12][4] ),
	.SE(test_se),
	.D(n195),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][5] ));
   SDFFRQX1M \Memory_reg[12][4]  (.SI(\Memory[12][3] ),
	.SE(test_se),
	.D(n194),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][4] ));
   SDFFRQX1M \Memory_reg[12][3]  (.SI(\Memory[12][2] ),
	.SE(test_se),
	.D(n193),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][3] ));
   SDFFRQX1M \Memory_reg[12][2]  (.SI(\Memory[12][1] ),
	.SE(test_se),
	.D(n192),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][2] ));
   SDFFRQX1M \Memory_reg[12][1]  (.SI(\Memory[12][0] ),
	.SE(test_se),
	.D(n191),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][1] ));
   SDFFRQX1M \Memory_reg[12][0]  (.SI(\Memory[11][7] ),
	.SE(test_se),
	.D(n190),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[12][0] ));
   SDFFRQX1M \Memory_reg[10][7]  (.SI(\Memory[10][6] ),
	.SE(test_se),
	.D(n213),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][7] ));
   SDFFRQX1M \Memory_reg[10][6]  (.SI(\Memory[10][5] ),
	.SE(test_se),
	.D(n212),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][6] ));
   SDFFRQX1M \Memory_reg[10][5]  (.SI(\Memory[10][4] ),
	.SE(test_se),
	.D(n211),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][5] ));
   SDFFRQX1M \Memory_reg[10][4]  (.SI(\Memory[10][3] ),
	.SE(p2),
	.D(n210),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][4] ));
   SDFFRQX1M \Memory_reg[10][3]  (.SI(\Memory[10][2] ),
	.SE(p2),
	.D(n209),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][3] ));
   SDFFRQX1M \Memory_reg[10][2]  (.SI(\Memory[10][1] ),
	.SE(p2),
	.D(n208),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][2] ));
   SDFFRQX1M \Memory_reg[10][1]  (.SI(\Memory[10][0] ),
	.SE(p2),
	.D(n207),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][1] ));
   SDFFRQX1M \Memory_reg[10][0]  (.SI(\Memory[9][7] ),
	.SE(test_se),
	.D(n206),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[10][0] ));
   SDFFRQX1M \Memory_reg[8][7]  (.SI(\Memory[8][6] ),
	.SE(test_se),
	.D(n229),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][7] ));
   SDFFRQX1M \Memory_reg[8][6]  (.SI(\Memory[8][5] ),
	.SE(test_se),
	.D(n228),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][6] ));
   SDFFRQX1M \Memory_reg[8][5]  (.SI(\Memory[8][4] ),
	.SE(p2),
	.D(n227),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][5] ));
   SDFFRQX1M \Memory_reg[8][4]  (.SI(\Memory[8][3] ),
	.SE(p2),
	.D(n226),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][4] ));
   SDFFRQX1M \Memory_reg[8][3]  (.SI(\Memory[8][2] ),
	.SE(p2),
	.D(n225),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][3] ));
   SDFFRQX1M \Memory_reg[8][2]  (.SI(\Memory[8][1] ),
	.SE(p2),
	.D(n224),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][2] ));
   SDFFRQX1M \Memory_reg[8][1]  (.SI(\Memory[8][0] ),
	.SE(p2),
	.D(n223),
	.CK(REF_CLK_MUX__L2_N3),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][1] ));
   SDFFRQX1M \Memory_reg[8][0]  (.SI(\Memory[7][7] ),
	.SE(p2),
	.D(n222),
	.CK(REF_CLK_MUX__L2_N2),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[8][0] ));
   SDFFRQX1M \Memory_reg[15][7]  (.SI(\Memory[15][6] ),
	.SE(test_se),
	.D(n173),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[15][7] ));
   SDFFRQX1M \Memory_reg[15][6]  (.SI(\Memory[15][5] ),
	.SE(test_se),
	.D(n172),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[15][6] ));
   SDFFRQX1M \Memory_reg[15][5]  (.SI(\Memory[15][4] ),
	.SE(test_se),
	.D(n171),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[15][5] ));
   SDFFRQX1M \Memory_reg[15][4]  (.SI(\Memory[15][3] ),
	.SE(test_se),
	.D(n170),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[15][4] ));
   SDFFRQX1M \Memory_reg[15][3]  (.SI(\Memory[15][2] ),
	.SE(test_se),
	.D(n169),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(FE_OFN19_REF_CLK_Sync_RST_MUX),
	.Q(\Memory[15][3] ));
   SDFFRQX1M \Memory_reg[15][2]  (.SI(\Memory[15][1] ),
	.SE(test_se),
	.D(n168),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[15][2] ));
   SDFFRQX1M \Memory_reg[15][1]  (.SI(\Memory[15][0] ),
	.SE(test_se),
	.D(n167),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[15][1] ));
   SDFFRQX1M \Memory_reg[15][0]  (.SI(\Memory[14][7] ),
	.SE(test_se),
	.D(n166),
	.CK(REF_CLK_MUX__L2_N0),
	.RN(rst),
	.Q(\Memory[15][0] ));
   SDFFSQX1M \Memory_reg[3][3]  (.SI(REG3_DIV[2]),
	.SE(p1),
	.D(n265),
	.CK(clk),
	.SN(rst),
	.Q(REG3_DIV[3]));
   NOR2X2M U255 (.A(n447),
	.B(N12),
	.Y(n149));
   NOR2X2M U256 (.A(N11),
	.B(N12),
	.Y(n152));
   NOR2X2M U257 (.A(n454),
	.B(n447),
	.Y(n141));
   INVX2M U258 (.A(WrData[5]),
	.Y(n450));
   INVX2M U259 (.A(WrData[6]),
	.Y(n449));
   NAND2X2M U260 (.A(n146),
	.B(n142),
	.Y(n145));
   NAND2X2M U261 (.A(n156),
	.B(n146),
	.Y(n159));
   NOR2X2M U268 (.A(n454),
	.B(N11),
	.Y(n146));
   NAND2X2M U269 (.A(n149),
	.B(n142),
	.Y(n148));
   NAND2X2M U270 (.A(n149),
	.B(n144),
	.Y(n150));
   NAND2X2M U271 (.A(n152),
	.B(n142),
	.Y(n151));
   NAND2X2M U272 (.A(n152),
	.B(n144),
	.Y(n154));
   NAND2X2M U273 (.A(n146),
	.B(n144),
	.Y(n147));
   NAND2X2M U274 (.A(n144),
	.B(n141),
	.Y(n143));
   NAND2X2M U275 (.A(n156),
	.B(n141),
	.Y(n155));
   NAND2X2M U276 (.A(n158),
	.B(n141),
	.Y(n157));
   NAND2X2M U277 (.A(n156),
	.B(n149),
	.Y(n161));
   NAND2X2M U278 (.A(n158),
	.B(n149),
	.Y(n162));
   NAND2X2M U279 (.A(n156),
	.B(n152),
	.Y(n163));
   NAND2X2M U280 (.A(n158),
	.B(n152),
	.Y(n165));
   NAND2X2M U281 (.A(n158),
	.B(n146),
	.Y(n160));
   NAND2X2M U282 (.A(n141),
	.B(n142),
	.Y(n140));
   AND2X2M U283 (.A(n153),
	.B(N10),
	.Y(n142));
   AND2X2M U284 (.A(n164),
	.B(N10),
	.Y(n156));
   INVX2M U285 (.A(WrData[0]),
	.Y(n456));
   INVX2M U286 (.A(WrData[1]),
	.Y(n455));
   INVX2M U287 (.A(WrData[2]),
	.Y(n453));
   INVX2M U288 (.A(WrData[3]),
	.Y(n452));
   INVX2M U289 (.A(WrData[4]),
	.Y(n451));
   INVX2M U290 (.A(WrData[7]),
	.Y(n448));
   AND2X2M U291 (.A(n153),
	.B(n446),
	.Y(n144));
   NOR2BX2M U292 (.AN(WrEn),
	.B(N13),
	.Y(n164));
   AND2X2M U293 (.A(n164),
	.B(n446),
	.Y(n158));
   INVX2M U294 (.A(N12),
	.Y(n454));
   AND2X2M U295 (.A(WrEn),
	.B(N13),
	.Y(n153));
   MX4X1M U296 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3_DIV[0]),
	.C(REG2_UART[0]),
	.B(REG1_ALU_B[0]),
	.A(REG0_ALU_A[0]),
	.Y(n411));
   MX4X1M U297 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3_DIV[1]),
	.C(REG2_UART[1]),
	.B(REG1_ALU_B[1]),
	.A(REG0_ALU_A[1]),
	.Y(n415));
   MX4X1M U298 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3_DIV[2]),
	.C(REG2_UART[2]),
	.B(REG1_ALU_B[2]),
	.A(REG0_ALU_A[2]),
	.Y(n419));
   MX4X1M U299 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3_DIV[3]),
	.C(REG2_UART[3]),
	.B(REG1_ALU_B[3]),
	.A(REG0_ALU_A[3]),
	.Y(n423));
   MX4X1M U300 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[3][4] ),
	.C(REG2_UART[4]),
	.B(REG1_ALU_B[4]),
	.A(REG0_ALU_A[4]),
	.Y(n427));
   MX4X1M U301 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[3][5] ),
	.C(REG2_UART[5]),
	.B(REG1_ALU_B[5]),
	.A(REG0_ALU_A[5]),
	.Y(n431));
   MX4X1M U302 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[3][6] ),
	.C(REG2_UART[6]),
	.B(REG1_ALU_B[6]),
	.A(REG0_ALU_A[6]),
	.Y(n435));
   MX4X1M U303 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[3][7] ),
	.C(\Memory[2][7] ),
	.B(REG1_ALU_B[7]),
	.A(REG0_ALU_A[7]),
	.Y(n439));
   MX4X1M U304 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][0] ),
	.C(\Memory[6][0] ),
	.B(\Memory[5][0] ),
	.A(\Memory[4][0] ),
	.Y(n410));
   MX4X1M U305 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][1] ),
	.C(\Memory[6][1] ),
	.B(\Memory[5][1] ),
	.A(\Memory[4][1] ),
	.Y(n414));
   MX4X1M U306 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][2] ),
	.C(\Memory[6][2] ),
	.B(\Memory[5][2] ),
	.A(\Memory[4][2] ),
	.Y(n418));
   MX4X1M U307 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][3] ),
	.C(\Memory[6][3] ),
	.B(\Memory[5][3] ),
	.A(\Memory[4][3] ),
	.Y(n422));
   MX4X1M U308 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][4] ),
	.C(\Memory[6][4] ),
	.B(\Memory[5][4] ),
	.A(\Memory[4][4] ),
	.Y(n426));
   MX4X1M U309 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][5] ),
	.C(\Memory[6][5] ),
	.B(\Memory[5][5] ),
	.A(\Memory[4][5] ),
	.Y(n430));
   MX4X1M U310 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][6] ),
	.C(\Memory[6][6] ),
	.B(\Memory[5][6] ),
	.A(\Memory[4][6] ),
	.Y(n434));
   MX4X1M U311 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[7][7] ),
	.C(\Memory[6][7] ),
	.B(\Memory[5][7] ),
	.A(\Memory[4][7] ),
	.Y(n438));
   MX4X1M U312 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][0] ),
	.C(\Memory[14][0] ),
	.B(\Memory[13][0] ),
	.A(\Memory[12][0] ),
	.Y(n408));
   MX4X1M U313 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][1] ),
	.C(\Memory[14][1] ),
	.B(\Memory[13][1] ),
	.A(\Memory[12][1] ),
	.Y(n412));
   MX4X1M U314 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][2] ),
	.C(\Memory[14][2] ),
	.B(\Memory[13][2] ),
	.A(\Memory[12][2] ),
	.Y(n416));
   MX4X1M U315 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][3] ),
	.C(\Memory[14][3] ),
	.B(\Memory[13][3] ),
	.A(\Memory[12][3] ),
	.Y(n420));
   MX4X1M U316 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][4] ),
	.C(\Memory[14][4] ),
	.B(\Memory[13][4] ),
	.A(\Memory[12][4] ),
	.Y(n424));
   MX4X1M U317 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][5] ),
	.C(\Memory[14][5] ),
	.B(\Memory[13][5] ),
	.A(\Memory[12][5] ),
	.Y(n428));
   MX4X1M U318 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][6] ),
	.C(\Memory[14][6] ),
	.B(\Memory[13][6] ),
	.A(\Memory[12][6] ),
	.Y(n432));
   MX4X1M U319 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[15][7] ),
	.C(\Memory[14][7] ),
	.B(\Memory[13][7] ),
	.A(\Memory[12][7] ),
	.Y(n436));
   MX4X1M U320 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][0] ),
	.C(\Memory[10][0] ),
	.B(\Memory[9][0] ),
	.A(\Memory[8][0] ),
	.Y(n409));
   MX4X1M U321 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][1] ),
	.C(\Memory[10][1] ),
	.B(\Memory[9][1] ),
	.A(\Memory[8][1] ),
	.Y(n413));
   MX4X1M U322 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][2] ),
	.C(\Memory[10][2] ),
	.B(\Memory[9][2] ),
	.A(\Memory[8][2] ),
	.Y(n417));
   MX4X1M U323 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][3] ),
	.C(\Memory[10][3] ),
	.B(\Memory[9][3] ),
	.A(\Memory[8][3] ),
	.Y(n421));
   MX4X1M U324 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][4] ),
	.C(\Memory[10][4] ),
	.B(\Memory[9][4] ),
	.A(\Memory[8][4] ),
	.Y(n425));
   MX4X1M U325 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][5] ),
	.C(\Memory[10][5] ),
	.B(\Memory[9][5] ),
	.A(\Memory[8][5] ),
	.Y(n429));
   MX4X1M U326 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][6] ),
	.C(\Memory[10][6] ),
	.B(\Memory[9][6] ),
	.A(\Memory[8][6] ),
	.Y(n433));
   MX4X1M U327 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\Memory[11][7] ),
	.C(\Memory[10][7] ),
	.B(\Memory[9][7] ),
	.A(\Memory[8][7] ),
	.Y(n437));
   INVX2M U328 (.A(N11),
	.Y(n447));
   INVX2M U329 (.A(N10),
	.Y(n446));
   MX4X1M U330 (.S1(N12),
	.S0(N13),
	.D(n408),
	.C(n410),
	.B(n409),
	.A(n411),
	.Y(RdData[0]));
   MX4X1M U331 (.S1(N12),
	.S0(N13),
	.D(n412),
	.C(n414),
	.B(n413),
	.A(n415),
	.Y(RdData[1]));
   MX4X1M U332 (.S1(N12),
	.S0(N13),
	.D(n416),
	.C(n418),
	.B(n417),
	.A(n419),
	.Y(RdData[2]));
   MX4X1M U333 (.S1(N12),
	.S0(N13),
	.D(n420),
	.C(n422),
	.B(n421),
	.A(n423),
	.Y(RdData[3]));
   MX4X1M U334 (.S1(N12),
	.S0(N13),
	.D(n424),
	.C(n426),
	.B(n425),
	.A(n427),
	.Y(RdData[4]));
   MX4X1M U335 (.S1(N12),
	.S0(N13),
	.D(n428),
	.C(n430),
	.B(n429),
	.A(n431),
	.Y(RdData[5]));
   MX4X1M U336 (.S1(N12),
	.S0(N13),
	.D(n432),
	.C(n434),
	.B(n433),
	.A(n435),
	.Y(RdData[6]));
   MX4X1M U337 (.S1(N12),
	.S0(N13),
	.D(n436),
	.C(n438),
	.B(n437),
	.A(n439),
	.Y(RdData[7]));
   OAI2BB2X1M U338 (.A0N(\Memory[15][0] ),
	.A1N(n140),
	.B0(n140),
	.B1(n456),
	.Y(n166));
   OAI2BB2X1M U339 (.A0N(\Memory[15][1] ),
	.A1N(n140),
	.B0(n140),
	.B1(n455),
	.Y(n167));
   OAI2BB2X1M U340 (.A0N(\Memory[15][2] ),
	.A1N(n140),
	.B0(n140),
	.B1(n453),
	.Y(n168));
   OAI2BB2X1M U341 (.A0N(\Memory[15][3] ),
	.A1N(n140),
	.B0(n140),
	.B1(n452),
	.Y(n169));
   OAI2BB2X1M U342 (.A0N(\Memory[15][4] ),
	.A1N(n140),
	.B0(n140),
	.B1(n451),
	.Y(n170));
   OAI2BB2X1M U343 (.A0N(\Memory[15][5] ),
	.A1N(n140),
	.B0(n140),
	.B1(n450),
	.Y(n171));
   OAI2BB2X1M U344 (.A0N(\Memory[15][6] ),
	.A1N(n140),
	.B0(n140),
	.B1(n449),
	.Y(n172));
   OAI2BB2X1M U345 (.A0N(\Memory[15][7] ),
	.A1N(n140),
	.B0(n140),
	.B1(n448),
	.Y(n173));
   OAI2BB2X1M U346 (.A0N(\Memory[11][0] ),
	.A1N(n148),
	.B0(n456),
	.B1(n148),
	.Y(n198));
   OAI2BB2X1M U347 (.A0N(\Memory[11][1] ),
	.A1N(n148),
	.B0(n455),
	.B1(n148),
	.Y(n199));
   OAI2BB2X1M U348 (.A0N(\Memory[11][2] ),
	.A1N(n148),
	.B0(n453),
	.B1(n148),
	.Y(n200));
   OAI2BB2X1M U349 (.A0N(\Memory[11][3] ),
	.A1N(n148),
	.B0(n452),
	.B1(n148),
	.Y(n201));
   OAI2BB2X1M U350 (.A0N(\Memory[11][4] ),
	.A1N(n148),
	.B0(n451),
	.B1(n148),
	.Y(n202));
   OAI2BB2X1M U351 (.A0N(\Memory[11][5] ),
	.A1N(n148),
	.B0(n450),
	.B1(n148),
	.Y(n203));
   OAI2BB2X1M U352 (.A0N(\Memory[11][6] ),
	.A1N(n148),
	.B0(n449),
	.B1(n148),
	.Y(n204));
   OAI2BB2X1M U353 (.A0N(\Memory[11][7] ),
	.A1N(n148),
	.B0(n448),
	.B1(n148),
	.Y(n205));
   OAI2BB2X1M U354 (.A0N(\Memory[10][0] ),
	.A1N(n150),
	.B0(n456),
	.B1(n150),
	.Y(n206));
   OAI2BB2X1M U355 (.A0N(\Memory[10][1] ),
	.A1N(n150),
	.B0(n455),
	.B1(n150),
	.Y(n207));
   OAI2BB2X1M U356 (.A0N(\Memory[10][2] ),
	.A1N(n150),
	.B0(n453),
	.B1(n150),
	.Y(n208));
   OAI2BB2X1M U357 (.A0N(\Memory[10][3] ),
	.A1N(n150),
	.B0(n452),
	.B1(n150),
	.Y(n209));
   OAI2BB2X1M U358 (.A0N(\Memory[10][4] ),
	.A1N(n150),
	.B0(n451),
	.B1(n150),
	.Y(n210));
   OAI2BB2X1M U359 (.A0N(\Memory[10][5] ),
	.A1N(n150),
	.B0(n450),
	.B1(n150),
	.Y(n211));
   OAI2BB2X1M U360 (.A0N(\Memory[10][6] ),
	.A1N(n150),
	.B0(n449),
	.B1(n150),
	.Y(n212));
   OAI2BB2X1M U361 (.A0N(\Memory[10][7] ),
	.A1N(n150),
	.B0(n448),
	.B1(n150),
	.Y(n213));
   OAI2BB2X1M U362 (.A0N(\Memory[9][0] ),
	.A1N(n151),
	.B0(n456),
	.B1(n151),
	.Y(n214));
   OAI2BB2X1M U363 (.A0N(\Memory[9][1] ),
	.A1N(n151),
	.B0(n455),
	.B1(n151),
	.Y(n215));
   OAI2BB2X1M U364 (.A0N(\Memory[9][2] ),
	.A1N(n151),
	.B0(n453),
	.B1(n151),
	.Y(n216));
   OAI2BB2X1M U365 (.A0N(\Memory[9][3] ),
	.A1N(n151),
	.B0(n452),
	.B1(n151),
	.Y(n217));
   OAI2BB2X1M U366 (.A0N(\Memory[9][4] ),
	.A1N(n151),
	.B0(n451),
	.B1(n151),
	.Y(n218));
   OAI2BB2X1M U367 (.A0N(\Memory[9][5] ),
	.A1N(n151),
	.B0(n450),
	.B1(n151),
	.Y(n219));
   OAI2BB2X1M U368 (.A0N(\Memory[9][6] ),
	.A1N(n151),
	.B0(n449),
	.B1(n151),
	.Y(n220));
   OAI2BB2X1M U369 (.A0N(\Memory[9][7] ),
	.A1N(n151),
	.B0(n448),
	.B1(n151),
	.Y(n221));
   OAI2BB2X1M U370 (.A0N(\Memory[8][0] ),
	.A1N(n154),
	.B0(n456),
	.B1(n154),
	.Y(n222));
   OAI2BB2X1M U371 (.A0N(\Memory[8][1] ),
	.A1N(n154),
	.B0(n455),
	.B1(n154),
	.Y(n223));
   OAI2BB2X1M U372 (.A0N(\Memory[8][2] ),
	.A1N(n154),
	.B0(n453),
	.B1(n154),
	.Y(n224));
   OAI2BB2X1M U373 (.A0N(\Memory[8][3] ),
	.A1N(n154),
	.B0(n452),
	.B1(n154),
	.Y(n225));
   OAI2BB2X1M U374 (.A0N(\Memory[8][4] ),
	.A1N(n154),
	.B0(n451),
	.B1(n154),
	.Y(n226));
   OAI2BB2X1M U375 (.A0N(\Memory[8][5] ),
	.A1N(n154),
	.B0(n450),
	.B1(n154),
	.Y(n227));
   OAI2BB2X1M U376 (.A0N(\Memory[8][6] ),
	.A1N(n154),
	.B0(n449),
	.B1(n154),
	.Y(n228));
   OAI2BB2X1M U377 (.A0N(\Memory[8][7] ),
	.A1N(n154),
	.B0(n448),
	.B1(n154),
	.Y(n229));
   OAI2BB2X1M U378 (.A0N(\Memory[13][0] ),
	.A1N(n145),
	.B0(n456),
	.B1(n145),
	.Y(n182));
   OAI2BB2X1M U379 (.A0N(\Memory[13][1] ),
	.A1N(n145),
	.B0(n455),
	.B1(n145),
	.Y(n183));
   OAI2BB2X1M U380 (.A0N(\Memory[13][2] ),
	.A1N(n145),
	.B0(n453),
	.B1(n145),
	.Y(n184));
   OAI2BB2X1M U381 (.A0N(\Memory[13][3] ),
	.A1N(n145),
	.B0(n452),
	.B1(n145),
	.Y(n185));
   OAI2BB2X1M U382 (.A0N(\Memory[13][4] ),
	.A1N(n145),
	.B0(n451),
	.B1(n145),
	.Y(n186));
   OAI2BB2X1M U383 (.A0N(\Memory[13][5] ),
	.A1N(n145),
	.B0(n450),
	.B1(n145),
	.Y(n187));
   OAI2BB2X1M U384 (.A0N(\Memory[13][6] ),
	.A1N(n145),
	.B0(n449),
	.B1(n145),
	.Y(n188));
   OAI2BB2X1M U385 (.A0N(\Memory[13][7] ),
	.A1N(n145),
	.B0(n448),
	.B1(n145),
	.Y(n189));
   OAI2BB2X1M U386 (.A0N(\Memory[12][0] ),
	.A1N(n147),
	.B0(n456),
	.B1(n147),
	.Y(n190));
   OAI2BB2X1M U387 (.A0N(\Memory[12][1] ),
	.A1N(n147),
	.B0(n455),
	.B1(n147),
	.Y(n191));
   OAI2BB2X1M U388 (.A0N(\Memory[12][2] ),
	.A1N(n147),
	.B0(n453),
	.B1(n147),
	.Y(n192));
   OAI2BB2X1M U389 (.A0N(\Memory[12][3] ),
	.A1N(n147),
	.B0(n452),
	.B1(n147),
	.Y(n193));
   OAI2BB2X1M U390 (.A0N(\Memory[12][4] ),
	.A1N(n147),
	.B0(n451),
	.B1(n147),
	.Y(n194));
   OAI2BB2X1M U391 (.A0N(\Memory[12][5] ),
	.A1N(n147),
	.B0(n450),
	.B1(n147),
	.Y(n195));
   OAI2BB2X1M U392 (.A0N(\Memory[12][6] ),
	.A1N(n147),
	.B0(n449),
	.B1(n147),
	.Y(n196));
   OAI2BB2X1M U393 (.A0N(\Memory[12][7] ),
	.A1N(n147),
	.B0(n448),
	.B1(n147),
	.Y(n197));
   OAI2BB2X1M U394 (.A0N(\Memory[14][0] ),
	.A1N(n143),
	.B0(n456),
	.B1(n143),
	.Y(n174));
   OAI2BB2X1M U395 (.A0N(\Memory[14][1] ),
	.A1N(n143),
	.B0(n455),
	.B1(n143),
	.Y(n175));
   OAI2BB2X1M U396 (.A0N(\Memory[14][2] ),
	.A1N(n143),
	.B0(n453),
	.B1(n143),
	.Y(n176));
   OAI2BB2X1M U397 (.A0N(\Memory[14][3] ),
	.A1N(n143),
	.B0(n452),
	.B1(n143),
	.Y(n177));
   OAI2BB2X1M U398 (.A0N(\Memory[14][4] ),
	.A1N(n143),
	.B0(n451),
	.B1(n143),
	.Y(n178));
   OAI2BB2X1M U399 (.A0N(\Memory[14][5] ),
	.A1N(n143),
	.B0(n450),
	.B1(n143),
	.Y(n179));
   OAI2BB2X1M U400 (.A0N(\Memory[14][6] ),
	.A1N(n143),
	.B0(n449),
	.B1(n143),
	.Y(n180));
   OAI2BB2X1M U401 (.A0N(\Memory[14][7] ),
	.A1N(n143),
	.B0(n448),
	.B1(n143),
	.Y(n181));
   OAI2BB2X1M U402 (.A0N(\Memory[7][0] ),
	.A1N(n155),
	.B0(n456),
	.B1(n155),
	.Y(n230));
   OAI2BB2X1M U403 (.A0N(\Memory[7][1] ),
	.A1N(n155),
	.B0(n455),
	.B1(n155),
	.Y(n231));
   OAI2BB2X1M U404 (.A0N(\Memory[7][2] ),
	.A1N(n155),
	.B0(n453),
	.B1(n155),
	.Y(n232));
   OAI2BB2X1M U405 (.A0N(\Memory[7][3] ),
	.A1N(n155),
	.B0(n452),
	.B1(n155),
	.Y(n233));
   OAI2BB2X1M U406 (.A0N(\Memory[7][4] ),
	.A1N(n155),
	.B0(n451),
	.B1(n155),
	.Y(n234));
   OAI2BB2X1M U407 (.A0N(\Memory[7][5] ),
	.A1N(n155),
	.B0(n450),
	.B1(n155),
	.Y(n235));
   OAI2BB2X1M U408 (.A0N(\Memory[7][6] ),
	.A1N(n155),
	.B0(n449),
	.B1(n155),
	.Y(n236));
   OAI2BB2X1M U409 (.A0N(\Memory[7][7] ),
	.A1N(n155),
	.B0(n448),
	.B1(n155),
	.Y(n237));
   OAI2BB2X1M U410 (.A0N(\Memory[6][0] ),
	.A1N(n157),
	.B0(n456),
	.B1(n157),
	.Y(n238));
   OAI2BB2X1M U411 (.A0N(\Memory[6][1] ),
	.A1N(n157),
	.B0(n455),
	.B1(n157),
	.Y(n239));
   OAI2BB2X1M U412 (.A0N(\Memory[6][2] ),
	.A1N(n157),
	.B0(n453),
	.B1(n157),
	.Y(n240));
   OAI2BB2X1M U413 (.A0N(\Memory[6][3] ),
	.A1N(n157),
	.B0(n452),
	.B1(n157),
	.Y(n241));
   OAI2BB2X1M U414 (.A0N(\Memory[6][4] ),
	.A1N(n157),
	.B0(n451),
	.B1(n157),
	.Y(n242));
   OAI2BB2X1M U415 (.A0N(\Memory[6][5] ),
	.A1N(n157),
	.B0(n450),
	.B1(n157),
	.Y(n243));
   OAI2BB2X1M U416 (.A0N(\Memory[6][6] ),
	.A1N(n157),
	.B0(n449),
	.B1(n157),
	.Y(n244));
   OAI2BB2X1M U417 (.A0N(\Memory[6][7] ),
	.A1N(n157),
	.B0(n448),
	.B1(n157),
	.Y(n245));
   OAI2BB2X1M U418 (.A0N(REG3_DIV[0]),
	.A1N(n161),
	.B0(n456),
	.B1(n161),
	.Y(n262));
   OAI2BB2X1M U419 (.A0N(REG3_DIV[1]),
	.A1N(n161),
	.B0(n455),
	.B1(n161),
	.Y(n263));
   OAI2BB2X1M U420 (.A0N(REG3_DIV[2]),
	.A1N(n161),
	.B0(n453),
	.B1(n161),
	.Y(n264));
   OAI2BB2X1M U421 (.A0N(\Memory[3][4] ),
	.A1N(n161),
	.B0(n451),
	.B1(n161),
	.Y(n266));
   OAI2BB2X1M U422 (.A0N(\Memory[3][5] ),
	.A1N(n161),
	.B0(n450),
	.B1(n161),
	.Y(n267));
   OAI2BB2X1M U423 (.A0N(\Memory[3][6] ),
	.A1N(n161),
	.B0(n449),
	.B1(n161),
	.Y(n268));
   OAI2BB2X1M U424 (.A0N(\Memory[3][7] ),
	.A1N(n161),
	.B0(n448),
	.B1(n161),
	.Y(n269));
   OAI2BB2X1M U425 (.A0N(REG2_UART[0]),
	.A1N(n162),
	.B0(n456),
	.B1(n162),
	.Y(n270));
   OAI2BB2X1M U426 (.A0N(REG2_UART[1]),
	.A1N(n162),
	.B0(n455),
	.B1(n162),
	.Y(n271));
   OAI2BB2X1M U427 (.A0N(REG2_UART[5]),
	.A1N(n162),
	.B0(n450),
	.B1(n162),
	.Y(n275));
   OAI2BB2X1M U428 (.A0N(REG2_UART[6]),
	.A1N(n162),
	.B0(n449),
	.B1(n162),
	.Y(n276));
   OAI2BB2X1M U429 (.A0N(\Memory[2][7] ),
	.A1N(n162),
	.B0(n448),
	.B1(n162),
	.Y(n277));
   OAI2BB2X1M U430 (.A0N(REG1_ALU_B[0]),
	.A1N(n163),
	.B0(n456),
	.B1(n163),
	.Y(n278));
   OAI2BB2X1M U431 (.A0N(REG1_ALU_B[1]),
	.A1N(n163),
	.B0(n455),
	.B1(n163),
	.Y(n279));
   OAI2BB2X1M U432 (.A0N(REG1_ALU_B[2]),
	.A1N(n163),
	.B0(n453),
	.B1(n163),
	.Y(n280));
   OAI2BB2X1M U433 (.A0N(REG1_ALU_B[3]),
	.A1N(n163),
	.B0(n452),
	.B1(n163),
	.Y(n281));
   OAI2BB2X1M U434 (.A0N(REG1_ALU_B[4]),
	.A1N(n163),
	.B0(n451),
	.B1(n163),
	.Y(n282));
   OAI2BB2X1M U435 (.A0N(REG1_ALU_B[5]),
	.A1N(n163),
	.B0(n450),
	.B1(n163),
	.Y(n283));
   OAI2BB2X1M U436 (.A0N(REG1_ALU_B[6]),
	.A1N(n163),
	.B0(n449),
	.B1(n163),
	.Y(n284));
   OAI2BB2X1M U437 (.A0N(REG1_ALU_B[7]),
	.A1N(n163),
	.B0(n448),
	.B1(n163),
	.Y(n285));
   OAI2BB2X1M U438 (.A0N(REG0_ALU_A[0]),
	.A1N(n165),
	.B0(n456),
	.B1(n165),
	.Y(n286));
   OAI2BB2X1M U439 (.A0N(REG0_ALU_A[1]),
	.A1N(n165),
	.B0(n455),
	.B1(n165),
	.Y(n287));
   OAI2BB2X1M U440 (.A0N(REG0_ALU_A[2]),
	.A1N(n165),
	.B0(n453),
	.B1(n165),
	.Y(n288));
   OAI2BB2X1M U441 (.A0N(REG0_ALU_A[3]),
	.A1N(n165),
	.B0(n452),
	.B1(n165),
	.Y(n289));
   OAI2BB2X1M U442 (.A0N(REG0_ALU_A[4]),
	.A1N(n165),
	.B0(n451),
	.B1(n165),
	.Y(n290));
   OAI2BB2X1M U443 (.A0N(REG0_ALU_A[5]),
	.A1N(n165),
	.B0(n450),
	.B1(n165),
	.Y(n291));
   OAI2BB2X1M U444 (.A0N(REG0_ALU_A[6]),
	.A1N(n165),
	.B0(n449),
	.B1(n165),
	.Y(n292));
   OAI2BB2X1M U445 (.A0N(REG0_ALU_A[7]),
	.A1N(n165),
	.B0(n448),
	.B1(n165),
	.Y(n293));
   OAI2BB2X1M U446 (.A0N(\Memory[5][0] ),
	.A1N(n159),
	.B0(n456),
	.B1(n159),
	.Y(n246));
   OAI2BB2X1M U447 (.A0N(\Memory[5][1] ),
	.A1N(n159),
	.B0(n455),
	.B1(n159),
	.Y(n247));
   OAI2BB2X1M U448 (.A0N(\Memory[5][2] ),
	.A1N(n159),
	.B0(n453),
	.B1(n159),
	.Y(n248));
   OAI2BB2X1M U449 (.A0N(\Memory[5][3] ),
	.A1N(n159),
	.B0(n452),
	.B1(n159),
	.Y(n249));
   OAI2BB2X1M U450 (.A0N(\Memory[5][4] ),
	.A1N(n159),
	.B0(n451),
	.B1(n159),
	.Y(n250));
   OAI2BB2X1M U451 (.A0N(\Memory[5][5] ),
	.A1N(n159),
	.B0(n450),
	.B1(n159),
	.Y(n251));
   OAI2BB2X1M U452 (.A0N(\Memory[5][6] ),
	.A1N(n159),
	.B0(n449),
	.B1(n159),
	.Y(n252));
   OAI2BB2X1M U453 (.A0N(\Memory[5][7] ),
	.A1N(n159),
	.B0(n448),
	.B1(n159),
	.Y(n253));
   OAI2BB2X1M U454 (.A0N(\Memory[4][0] ),
	.A1N(n160),
	.B0(n456),
	.B1(n160),
	.Y(n254));
   OAI2BB2X1M U455 (.A0N(\Memory[4][1] ),
	.A1N(n160),
	.B0(n455),
	.B1(n160),
	.Y(n255));
   OAI2BB2X1M U456 (.A0N(\Memory[4][2] ),
	.A1N(n160),
	.B0(n453),
	.B1(n160),
	.Y(n256));
   OAI2BB2X1M U457 (.A0N(\Memory[4][3] ),
	.A1N(n160),
	.B0(n452),
	.B1(n160),
	.Y(n257));
   OAI2BB2X1M U458 (.A0N(\Memory[4][4] ),
	.A1N(n160),
	.B0(n451),
	.B1(n160),
	.Y(n258));
   OAI2BB2X1M U459 (.A0N(\Memory[4][5] ),
	.A1N(n160),
	.B0(n450),
	.B1(n160),
	.Y(n259));
   OAI2BB2X1M U460 (.A0N(\Memory[4][6] ),
	.A1N(n160),
	.B0(n449),
	.B1(n160),
	.Y(n260));
   OAI2BB2X1M U461 (.A0N(\Memory[4][7] ),
	.A1N(n160),
	.B0(n448),
	.B1(n160),
	.Y(n261));
   OAI2BB2X1M U462 (.A0N(REG3_DIV[3]),
	.A1N(n161),
	.B0(n452),
	.B1(n161),
	.Y(n265));
   OAI2BB2X1M U463 (.A0N(REG2_UART[2]),
	.A1N(n162),
	.B0(n453),
	.B1(n162),
	.Y(n272));
   OAI2BB2X1M U464 (.A0N(REG2_UART[3]),
	.A1N(n162),
	.B0(n452),
	.B1(n162),
	.Y(n273));
   OAI2BB2X1M U465 (.A0N(REG2_UART[4]),
	.A1N(n162),
	.B0(n451),
	.B1(n162),
	.Y(n274));
endmodule

module RX_FSM_test_1 (
	clk, 
	rst, 
	RX_IN, 
	PAR_EN, 
	Prescale, 
	bit_cnt, 
	data_finish_flag, 
	edge_cnt, 
	P_DATA, 
	PAR_TYP, 
	Error, 
	Compared_bit, 
	counter_en, 
	bits_counter_en, 
	Error_Unit_En, 
	data_samp_en, 
	deser_en, 
	data_valid, 
	test_se, 
	p1, 
	UART_CLK_MUX__L9_N0);
   input clk;
   input rst;
   input RX_IN;
   input PAR_EN;
   input [1:0] Prescale;
   input bit_cnt;
   input data_finish_flag;
   input [4:0] edge_cnt;
   input [7:0] P_DATA;
   input PAR_TYP;
   input Error;
   output Compared_bit;
   output counter_en;
   output bits_counter_en;
   output Error_Unit_En;
   output data_samp_en;
   output deser_en;
   output data_valid;
   input test_se;
   input p1;
   input UART_CLK_MUX__L9_N0;

   // Internal wires
   wire Error_REG;
   wire N74;
   wire N82;
   wire n64;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire [2:0] CurrentState;
   wire [2:0] NextState;

   assign data_samp_en = N82 ;

   SDFFRQX2M Error_REG_reg (.SI(CurrentState[2]),
	.SE(test_se),
	.D(n64),
	.CK(clk),
	.RN(rst),
	.Q(Error_REG));
   SDFFRQX2M \CurrentState_reg[0]  (.SI(P_DATA[7]),
	.SE(p1),
	.D(NextState[0]),
	.CK(clk),
	.RN(rst),
	.Q(CurrentState[0]));
   SDFFRQX2M \CurrentState_reg[2]  (.SI(CurrentState[1]),
	.SE(p1),
	.D(NextState[2]),
	.CK(clk),
	.RN(rst),
	.Q(CurrentState[2]));
   SDFFRQX2M \CurrentState_reg[1]  (.SI(CurrentState[0]),
	.SE(p1),
	.D(NextState[1]),
	.CK(clk),
	.RN(rst),
	.Q(CurrentState[1]));
   SDFFRQX2M data_valid_reg (.SI(Error_REG),
	.SE(p1),
	.D(N74),
	.CK(UART_CLK_MUX__L9_N0),
	.RN(rst),
	.Q(data_valid));
   NOR2BX1M U3 (.AN(n1),
	.B(n2),
	.Y(n64));
   AOI31X1M U4 (.A0(n3),
	.A1(n4),
	.A2(Error),
	.B0(Error_REG),
	.Y(n2));
   NOR2X1M U5 (.A(n5),
	.B(n6),
	.Y(deser_en));
   OAI21X1M U6 (.A0(bit_cnt),
	.A1(n7),
	.B0(n8),
	.Y(counter_en));
   AOI21X1M U7 (.A0(CurrentState[1]),
	.A1(n9),
	.B0(n10),
	.Y(n7));
   OAI31X1M U8 (.A0(n11),
	.A1(PAR_EN),
	.A2(n6),
	.B0(n12),
	.Y(NextState[2]));
   CLKMX2X2M U9 (.S0(bit_cnt),
	.B(n14),
	.A(n13),
	.Y(n12));
   CLKINVX1M U10 (.A(data_finish_flag),
	.Y(n11));
   NAND3X1M U11 (.A(n14),
	.B(n6),
	.C(n15),
	.Y(NextState[1]));
   CLKMX2X2M U12 (.S0(bit_cnt),
	.B(n16),
	.A(n13),
	.Y(n15));
   OAI211X1M U18 (.A0(n13),
	.A1(n17),
	.B0(n16),
	.C0(n8),
	.Y(NextState[0]));
   OA21X1M U19 (.A0(data_finish_flag),
	.A1(n6),
	.B0(n18),
	.Y(n8));
   NAND4X1M U20 (.A(n9),
	.B(n19),
	.C(n20),
	.D(n21),
	.Y(n18));
   CLKINVX1M U21 (.A(bits_counter_en),
	.Y(n6));
   NOR3X1M U22 (.A(n9),
	.B(CurrentState[2]),
	.C(n19),
	.Y(bits_counter_en));
   CLKINVX1M U23 (.A(n10),
	.Y(n16));
   NOR2X1M U24 (.A(n1),
	.B(Error),
	.Y(n10));
   CLKNAND2X2M U25 (.A(bit_cnt),
	.B(n21),
	.Y(n17));
   CLKINVX1M U26 (.A(RX_IN),
	.Y(n21));
   OAI32X2M U27 (.A0(n22),
	.A1(n23),
	.A2(n24),
	.B0(n25),
	.B1(n31),
	.Y(N82));
   MX3X1M U28 (.S1(Prescale[0]),
	.S0(n35),
	.C(n34),
	.B(n33),
	.A(n32),
	.Y(n31));
   NAND3X1M U29 (.A(n36),
	.B(n23),
	.C(edge_cnt[2]),
	.Y(n34));
   NAND2BX1M U30 (.AN(edge_cnt[0]),
	.B(n33),
	.Y(n32));
   CLKINVX1M U31 (.A(n37),
	.Y(n25));
   CLKINVX1M U32 (.A(edge_cnt[3]),
	.Y(n24));
   CLKINVX1M U33 (.A(Prescale[1]),
	.Y(n23));
   NAND3BX1M U34 (.AN(edge_cnt[4]),
	.B(n35),
	.C(n36),
	.Y(n22));
   CLKNAND2X2M U35 (.A(edge_cnt[0]),
	.B(edge_cnt[1]),
	.Y(n36));
   NOR3BX1M U36 (.AN(bit_cnt),
	.B(n13),
	.C(Error_REG),
	.Y(N74));
   AOI2B1X1M U37 (.A0(n1),
	.A1N(n3),
	.B0(n5),
	.Y(Error_Unit_En));
   CLKINVX1M U38 (.A(n4),
	.Y(n5));
   OAI31X1M U39 (.A0(n35),
	.A1(Prescale[0]),
	.A2(n33),
	.B0(n37),
	.Y(n4));
   NOR2X1M U40 (.A(edge_cnt[4]),
	.B(edge_cnt[3]),
	.Y(n37));
   CLKINVX1M U41 (.A(edge_cnt[1]),
	.Y(n33));
   CLKINVX1M U42 (.A(edge_cnt[2]),
	.Y(n35));
   NAND3X1M U43 (.A(n19),
	.B(n20),
	.C(CurrentState[0]),
	.Y(n1));
   CLKINVX1M U44 (.A(CurrentState[1]),
	.Y(n19));
   CLKNAND2X2M U45 (.A(n14),
	.B(n13),
	.Y(n3));
   OAI21X1M U46 (.A0(n38),
	.A1(n14),
	.B0(n13),
	.Y(Compared_bit));
   NAND3X1M U47 (.A(CurrentState[1]),
	.B(n9),
	.C(CurrentState[2]),
	.Y(n13));
   NAND3X1M U48 (.A(n9),
	.B(n20),
	.C(CurrentState[1]),
	.Y(n14));
   CLKINVX1M U49 (.A(CurrentState[2]),
	.Y(n20));
   CLKINVX1M U50 (.A(CurrentState[0]),
	.Y(n9));
   XOR3XLM U51 (.A(n39),
	.B(PAR_TYP),
	.C(n40),
	.Y(n38));
   XOR3XLM U52 (.A(P_DATA[1]),
	.B(P_DATA[0]),
	.C(n41),
	.Y(n40));
   XNOR2X1M U53 (.A(P_DATA[3]),
	.B(P_DATA[2]),
	.Y(n41));
   XOR3XLM U54 (.A(P_DATA[5]),
	.B(P_DATA[4]),
	.C(n42),
	.Y(n39));
   CLKXOR2X2M U55 (.A(P_DATA[7]),
	.B(P_DATA[6]),
	.Y(n42));
endmodule

module Error_Unit (
	clk, 
	rst, 
	sampled_bit, 
	Compared_bit, 
	Enable, 
	Error);
   input clk;
   input rst;
   input sampled_bit;
   input Compared_bit;
   input Enable;
   output Error;

   // Internal wires
   wire n1;

   NOR2BX2M U3 (.AN(Enable),
	.B(n1),
	.Y(Error));
   XNOR2X2M U4 (.A(sampled_bit),
	.B(Compared_bit),
	.Y(n1));
endmodule

module Bits_Counter_test_1 (
	clk, 
	rst, 
	enable, 
	bits_counter, 
	finish, 
	test_si, 
	test_se);
   input clk;
   input rst;
   input enable;
   output [2:0] bits_counter;
   output finish;
   input test_si;
   input test_se;

   // Internal wires
   wire FE_PHN25_n3;
   wire n1;
   wire n2;
   wire n5;
   wire n7;
   wire n9;
   wire n3;

   CLKBUFX3M FE_PHC25_n3 (.A(test_si),
	.Y(FE_PHN25_n3));
   SDFFRQX2M \bits_counter_reg[2]  (.SI(bits_counter[1]),
	.SE(test_se),
	.D(n5),
	.CK(clk),
	.RN(rst),
	.Q(bits_counter[2]));
   SDFFRQX2M \bits_counter_reg[1]  (.SI(bits_counter[0]),
	.SE(test_se),
	.D(n7),
	.CK(clk),
	.RN(rst),
	.Q(bits_counter[1]));
   SDFFRQX2M \bits_counter_reg[0]  (.SI(FE_PHN25_n3),
	.SE(test_se),
	.D(n9),
	.CK(clk),
	.RN(rst),
	.Q(bits_counter[0]));
   NOR3BX2M U3 (.AN(bits_counter[2]),
	.B(n2),
	.C(n3),
	.Y(finish));
   XNOR2X2M U4 (.A(bits_counter[1]),
	.B(n2),
	.Y(n7));
   NAND2X2M U5 (.A(enable),
	.B(bits_counter[0]),
	.Y(n2));
   INVX2M U6 (.A(bits_counter[1]),
	.Y(n3));
   CLKXOR2X2M U7 (.A(enable),
	.B(bits_counter[0]),
	.Y(n9));
   CLKXOR2X2M U8 (.A(bits_counter[2]),
	.B(n1),
	.Y(n5));
   NOR2X2M U9 (.A(n2),
	.B(n3),
	.Y(n1));
endmodule

module Edge_Bit_Counter_test_1 (
	clk, 
	rst, 
	enable, 
	Prescale, 
	edge_cnt, 
	finish, 
	test_si, 
	test_se);
   input clk;
   input rst;
   input enable;
   input [4:0] Prescale;
   output [4:0] edge_cnt;
   output finish;
   input test_si;
   input test_se;

   // Internal wires
   wire N6;
   wire N7;
   wire N8;
   wire N10;
   wire N11;
   wire N12;
   wire N13;
   wire N14;
   wire N15;
   wire N16;
   wire N17;
   wire N18;
   wire N19;
   wire N20;
   wire N21;
   wire n11;
   wire \add_21/carry[4] ;
   wire \add_21/carry[3] ;
   wire \add_21/carry[2] ;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;

   SDFFRQX2M finish_reg (.SI(edge_cnt[4]),
	.SE(test_se),
	.D(N21),
	.CK(clk),
	.RN(rst),
	.Q(finish));
   SDFFRQX2M \edge_cnt_reg[4]  (.SI(edge_cnt[3]),
	.SE(test_se),
	.D(N14),
	.CK(clk),
	.RN(rst),
	.Q(edge_cnt[4]));
   SDFFRQX2M \edge_cnt_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(N10),
	.CK(clk),
	.RN(rst),
	.Q(edge_cnt[0]));
   SDFFRQX2M \edge_cnt_reg[2]  (.SI(edge_cnt[1]),
	.SE(test_se),
	.D(N12),
	.CK(clk),
	.RN(rst),
	.Q(edge_cnt[2]));
   SDFFRQX2M \edge_cnt_reg[3]  (.SI(edge_cnt[2]),
	.SE(test_se),
	.D(N13),
	.CK(clk),
	.RN(rst),
	.Q(edge_cnt[3]));
   SDFFRQX2M \edge_cnt_reg[1]  (.SI(edge_cnt[0]),
	.SE(test_se),
	.D(N11),
	.CK(clk),
	.RN(rst),
	.Q(edge_cnt[1]));
   NOR2BX2M U5 (.AN(N8),
	.B(n11),
	.Y(N13));
   NOR2BX2M U6 (.AN(N7),
	.B(n11),
	.Y(N12));
   NOR2BX2M U11 (.AN(N6),
	.B(n11),
	.Y(N11));
   NAND2BX2M U12 (.AN(finish),
	.B(enable),
	.Y(n11));
   NOR2X2M U13 (.A(n1),
	.B(n11),
	.Y(N14));
   XNOR2X2M U14 (.A(\add_21/carry[4] ),
	.B(edge_cnt[4]),
	.Y(n1));
   NOR2X2M U15 (.A(edge_cnt[0]),
	.B(n11),
	.Y(N10));
   ADDHX1M U16 (.A(edge_cnt[1]),
	.B(edge_cnt[0]),
	.S(N6),
	.CO(\add_21/carry[2] ));
   ADDHX1M U17 (.A(edge_cnt[2]),
	.B(\add_21/carry[2] ),
	.S(N7),
	.CO(\add_21/carry[3] ));
   ADDHX1M U18 (.A(edge_cnt[3]),
	.B(\add_21/carry[3] ),
	.S(N8),
	.CO(\add_21/carry[4] ));
   INVX2M U19 (.A(Prescale[0]),
	.Y(N15));
   NAND2BX1M U20 (.AN(Prescale[1]),
	.B(N15),
	.Y(n2));
   OAI2BB1X1M U21 (.A0N(Prescale[0]),
	.A1N(Prescale[1]),
	.B0(n2),
	.Y(N16));
   OR2X1M U22 (.A(n2),
	.B(Prescale[2]),
	.Y(n3));
   OAI2BB1X1M U23 (.A0N(n2),
	.A1N(Prescale[2]),
	.B0(n3),
	.Y(N17));
   XNOR2X1M U24 (.A(Prescale[3]),
	.B(n3),
	.Y(N18));
   NOR3X1M U25 (.A(Prescale[3]),
	.B(Prescale[4]),
	.C(n3),
	.Y(N20));
   OAI21X1M U26 (.A0(Prescale[3]),
	.A1(n3),
	.B0(Prescale[4]),
	.Y(n4));
   NAND2BX1M U27 (.AN(N20),
	.B(n4),
	.Y(N19));
   NOR2BX1M U28 (.AN(N15),
	.B(edge_cnt[0]),
	.Y(n12));
   OAI2B2X1M U29 (.A0(n12),
	.A1N(edge_cnt[1]),
	.B0(N16),
	.B1(n12),
	.Y(n15));
   NOR2BX1M U30 (.AN(edge_cnt[0]),
	.B(N15),
	.Y(n13));
   OAI2B2X1M U31 (.A0(n13),
	.A1N(N16),
	.B0(edge_cnt[1]),
	.B1(n13),
	.Y(n14));
   NAND3BX1M U32 (.AN(N20),
	.B(n15),
	.C(n14),
	.Y(n19));
   CLKXOR2X2M U33 (.A(N19),
	.B(edge_cnt[4]),
	.Y(n18));
   CLKXOR2X2M U34 (.A(N17),
	.B(edge_cnt[2]),
	.Y(n17));
   CLKXOR2X2M U35 (.A(N18),
	.B(edge_cnt[3]),
	.Y(n16));
   NOR4X1M U36 (.A(n19),
	.B(n18),
	.C(n17),
	.D(n16),
	.Y(N21));
endmodule

module Counter_Unit_test_1 (
	clk, 
	rst, 
	enable, 
	Data_enable, 
	Prescale, 
	Finish_edge, 
	Finish_data, 
	bits_counter, 
	edge_cnt, 
	test_si, 
	test_se, 
	p1, 
	UART_CLK_MUX__L9_N0);
   input clk;
   input rst;
   input enable;
   input Data_enable;
   input [4:0] Prescale;
   output Finish_edge;
   output Finish_data;
   output [2:0] bits_counter;
   output [4:0] edge_cnt;
   input test_si;
   input test_se;
   input p1;
   input UART_CLK_MUX__L9_N0;

   // Internal wires
   wire Bits_counter_enable;

   AND2X2M U1 (.A(Finish_edge),
	.B(Data_enable),
	.Y(Bits_counter_enable));
   Bits_Counter_test_1 u_Bits_Counter (.clk(UART_CLK_MUX__L9_N0),
	.rst(rst),
	.enable(Bits_counter_enable),
	.bits_counter(bits_counter),
	.finish(Finish_data),
	.test_si(test_si),
	.test_se(p1));
   Edge_Bit_Counter_test_1 u_Edge_Bit_Counter (.clk(clk),
	.rst(rst),
	.enable(enable),
	.Prescale(Prescale),
	.edge_cnt(edge_cnt),
	.finish(Finish_edge),
	.test_si(bits_counter[2]),
	.test_se(test_se));
endmodule

module Data_Sampling_test_1 (
	RX_in, 
	clk, 
	rst, 
	data_samp_en, 
	sampled_bit, 
	test_si, 
	test_so, 
	test_se, 
	UART_CLK_MUX__L9_N0);
   input RX_in;
   input clk;
   input rst;
   input data_samp_en;
   output sampled_bit;
   input test_si;
   output test_so;
   input test_se;
   input UART_CLK_MUX__L9_N0;

   // Internal wires
   wire n1;
   wire n2;
   wire n7;
   wire n9;
   wire n11;
   wire n3;
   wire n4;
   wire n5;
   wire [2:0] bits;

   assign test_so = bits[2] ;

   SDFFRQX2M \bits_reg[2]  (.SI(n5),
	.SE(test_se),
	.D(n7),
	.CK(UART_CLK_MUX__L9_N0),
	.RN(rst),
	.Q(bits[2]));
   SDFFRQX2M \bits_reg[1]  (.SI(n4),
	.SE(test_se),
	.D(n9),
	.CK(clk),
	.RN(rst),
	.Q(bits[1]));
   SDFFRQX2M \bits_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n11),
	.CK(clk),
	.RN(rst),
	.Q(bits[0]));
   INVX2M U2 (.A(data_samp_en),
	.Y(n3));
   OAI22XLM U3 (.A0(data_samp_en),
	.A1(n5),
	.B0(n4),
	.B1(n3),
	.Y(n9));
   AOI21X2M U4 (.A0(n1),
	.A1(n2),
	.B0(data_samp_en),
	.Y(sampled_bit));
   NAND2X2M U5 (.A(bits[1]),
	.B(bits[0]),
	.Y(n1));
   OAI21X2M U6 (.A0(bits[0]),
	.A1(bits[1]),
	.B0(bits[2]),
	.Y(n2));
   OAI2BB2XLM U7 (.A0N(RX_in),
	.A1N(data_samp_en),
	.B0(data_samp_en),
	.B1(n4),
	.Y(n11));
   OAI2BB2X1M U8 (.A0N(n3),
	.A1N(bits[2]),
	.B0(n5),
	.B1(n3),
	.Y(n7));
   INVX2M U9 (.A(bits[0]),
	.Y(n4));
   INVX2M U10 (.A(bits[1]),
	.Y(n5));
endmodule

module Deserializer_test_1 (
	sampled_bit, 
	clk, 
	rst, 
	deser_en, 
	bits_counter, 
	Data, 
	test_si, 
	test_se);
   input sampled_bit;
   input clk;
   input rst;
   input deser_en;
   input [2:0] bits_counter;
   output [7:0] Data;
   input test_si;
   input test_se;

   // Internal wires
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n9;
   wire n10;

   SDFFRQX2M \Data_reg[3]  (.SI(Data[2]),
	.SE(test_se),
	.D(n30),
	.CK(clk),
	.RN(rst),
	.Q(Data[3]));
   SDFFRQX2M \Data_reg[2]  (.SI(Data[1]),
	.SE(test_se),
	.D(n29),
	.CK(clk),
	.RN(rst),
	.Q(Data[2]));
   SDFFRQX2M \Data_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n27),
	.CK(clk),
	.RN(rst),
	.Q(Data[0]));
   SDFFRQX2M \Data_reg[6]  (.SI(Data[5]),
	.SE(test_se),
	.D(n33),
	.CK(clk),
	.RN(rst),
	.Q(Data[6]));
   SDFFRQX2M \Data_reg[5]  (.SI(Data[4]),
	.SE(test_se),
	.D(n32),
	.CK(clk),
	.RN(rst),
	.Q(Data[5]));
   SDFFRQX2M \Data_reg[1]  (.SI(Data[0]),
	.SE(test_se),
	.D(n28),
	.CK(clk),
	.RN(rst),
	.Q(Data[1]));
   SDFFRQX2M \Data_reg[4]  (.SI(Data[3]),
	.SE(test_se),
	.D(n31),
	.CK(clk),
	.RN(rst),
	.Q(Data[4]));
   SDFFRQX2M \Data_reg[7]  (.SI(Data[6]),
	.SE(test_se),
	.D(n34),
	.CK(clk),
	.RN(rst),
	.Q(Data[7]));
   NAND2BX2M U10 (.AN(n23),
	.B(sampled_bit),
	.Y(n21));
   NAND2BX2M U11 (.AN(n14),
	.B(sampled_bit),
	.Y(n12));
   NAND2X2M U12 (.A(n10),
	.B(n9),
	.Y(n11));
   OAI21X2M U13 (.A0(n12),
	.A1(n15),
	.B0(n16),
	.Y(n28));
   OAI21X2M U14 (.A0(n14),
	.A1(n15),
	.B0(Data[1]),
	.Y(n16));
   OAI21X2M U15 (.A0(n12),
	.A1(n17),
	.B0(n18),
	.Y(n29));
   OAI21X2M U16 (.A0(n14),
	.A1(n17),
	.B0(Data[2]),
	.Y(n18));
   OAI21X2M U17 (.A0(n12),
	.A1(n19),
	.B0(n20),
	.Y(n30));
   OAI21X2M U18 (.A0(n14),
	.A1(n19),
	.B0(Data[3]),
	.Y(n20));
   OAI21X2M U19 (.A0(n11),
	.A1(n12),
	.B0(n13),
	.Y(n27));
   OAI21X2M U20 (.A0(n14),
	.A1(n11),
	.B0(Data[0]),
	.Y(n13));
   OAI21X2M U21 (.A0(n11),
	.A1(n21),
	.B0(n22),
	.Y(n31));
   OAI21X2M U22 (.A0(n11),
	.A1(n23),
	.B0(Data[4]),
	.Y(n22));
   OAI21X2M U23 (.A0(n15),
	.A1(n21),
	.B0(n24),
	.Y(n32));
   OAI21X2M U24 (.A0(n15),
	.A1(n23),
	.B0(Data[5]),
	.Y(n24));
   OAI21X2M U25 (.A0(n17),
	.A1(n21),
	.B0(n25),
	.Y(n33));
   OAI21X2M U26 (.A0(n17),
	.A1(n23),
	.B0(Data[6]),
	.Y(n25));
   OAI21X2M U27 (.A0(n19),
	.A1(n21),
	.B0(n26),
	.Y(n34));
   OAI21X2M U28 (.A0(n19),
	.A1(n23),
	.B0(Data[7]),
	.Y(n26));
   NAND2X2M U29 (.A(bits_counter[2]),
	.B(deser_en),
	.Y(n23));
   NAND2BX2M U30 (.AN(bits_counter[2]),
	.B(deser_en),
	.Y(n14));
   NAND2X2M U31 (.A(bits_counter[0]),
	.B(n10),
	.Y(n15));
   NAND2X2M U32 (.A(bits_counter[1]),
	.B(n9),
	.Y(n17));
   NAND2X2M U33 (.A(bits_counter[1]),
	.B(bits_counter[0]),
	.Y(n19));
   INVX2M U34 (.A(bits_counter[0]),
	.Y(n9));
   INVX2M U35 (.A(bits_counter[1]),
	.Y(n10));
endmodule

module RX_test_1 (
	clk_Top, 
	rst_Top, 
	RX_IN_Top, 
	Prescale_Top, 
	PAR_EN_TOP, 
	PAR_TYP_Top, 
	Data_Valid_Top, 
	P_Data_Top, 
	test_si, 
	test_se, 
	p1, 
	UART_CLK_MUX__L9_N0);
   input clk_Top;
   input rst_Top;
   input RX_IN_Top;
   input [4:0] Prescale_Top;
   input PAR_EN_TOP;
   input PAR_TYP_Top;
   output Data_Valid_Top;
   output [7:0] P_Data_Top;
   input test_si;
   input test_se;
   input p1;
   input UART_CLK_MUX__L9_N0;

   // Internal wires
   wire bit_cnt_Top;
   wire data_finish_flag_Top;
   wire Error_Top;
   wire Compared_bit_Top;
   wire enable_Top;
   wire bits_counter_en_Top;
   wire Error_Unit_En_Top;
   wire data_samp_en_Top;
   wire deser_en_FSM_Top;
   wire sampled_bit_Top;
   wire n1;
   wire [4:0] edge_cnt_Top;
   wire [2:0] bits_counter_Top;

   RX_FSM_test_1 u_RX_FSM (.clk(clk_Top),
	.rst(rst_Top),
	.RX_IN(RX_IN_Top),
	.PAR_EN(PAR_EN_TOP),
	.Prescale({ Prescale_Top[4],
		Prescale_Top[3] }),
	.bit_cnt(bit_cnt_Top),
	.data_finish_flag(data_finish_flag_Top),
	.edge_cnt(edge_cnt_Top),
	.P_DATA(P_Data_Top),
	.PAR_TYP(PAR_TYP_Top),
	.Error(Error_Top),
	.Compared_bit(Compared_bit_Top),
	.counter_en(enable_Top),
	.bits_counter_en(bits_counter_en_Top),
	.Error_Unit_En(Error_Unit_En_Top),
	.data_samp_en(data_samp_en_Top),
	.deser_en(deser_en_FSM_Top),
	.data_valid(Data_Valid_Top),
	.test_se(test_se),
	.p1(p1),
	.UART_CLK_MUX__L9_N0(UART_CLK_MUX__L9_N0));
   Error_Unit u_Error_Unit (.clk(clk_Top),
	.rst(rst_Top),
	.sampled_bit(sampled_bit_Top),
	.Compared_bit(Compared_bit_Top),
	.Enable(Error_Unit_En_Top),
	.Error(Error_Top));
   Counter_Unit_test_1 u_Counter_Unit (.clk(clk_Top),
	.rst(rst_Top),
	.enable(enable_Top),
	.Data_enable(bits_counter_en_Top),
	.Prescale(Prescale_Top),
	.Finish_edge(bit_cnt_Top),
	.Finish_data(data_finish_flag_Top),
	.bits_counter(bits_counter_Top),
	.edge_cnt(edge_cnt_Top),
	.test_si(test_si),
	.test_se(test_se),
	.p1(p1),
	.UART_CLK_MUX__L9_N0(UART_CLK_MUX__L9_N0));
   Data_Sampling_test_1 u_Data_Sampling (.RX_in(RX_IN_Top),
	.clk(clk_Top),
	.rst(rst_Top),
	.data_samp_en(data_samp_en_Top),
	.sampled_bit(sampled_bit_Top),
	.test_si(bit_cnt_Top),
	.test_so(n1),
	.test_se(p1),
	.UART_CLK_MUX__L9_N0(UART_CLK_MUX__L9_N0));
   Deserializer_test_1 u_Deserializer (.sampled_bit(sampled_bit_Top),
	.clk(UART_CLK_MUX__L9_N0),
	.rst(rst_Top),
	.deser_en(deser_en_FSM_Top),
	.bits_counter(bits_counter_Top),
	.Data(P_Data_Top),
	.test_si(n1),
	.test_se(p1));
endmodule

module Counter_test_1 (
	RST, 
	clk, 
	Ser_En, 
	Counter, 
	Finish, 
	test_si, 
	test_se);
   input RST;
   input clk;
   input Ser_En;
   output [2:0] Counter;
   output Finish;
   input test_si;
   input test_se;

   // Internal wires
   wire N8;
   wire N9;
   wire N10;
   wire N12;
   wire n5;
   wire n6;
   wire n7;
   wire n4;

   assign Finish = N12 ;

   SDFFRQX2M \Counter_reg[2]  (.SI(Counter[1]),
	.SE(test_se),
	.D(N10),
	.CK(clk),
	.RN(RST),
	.Q(Counter[2]));
   SDFFRQX2M \Counter_reg[1]  (.SI(Counter[0]),
	.SE(test_se),
	.D(N9),
	.CK(clk),
	.RN(RST),
	.Q(Counter[1]));
   SDFFRQX2M \Counter_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(N8),
	.CK(clk),
	.RN(RST),
	.Q(Counter[0]));
   INVX2M U6 (.A(Ser_En),
	.Y(n4));
   NOR2X2M U7 (.A(Counter[0]),
	.B(n4),
	.Y(N8));
   NOR2X2M U8 (.A(n5),
	.B(n4),
	.Y(N9));
   XNOR2X2M U9 (.A(Counter[0]),
	.B(Counter[1]),
	.Y(n5));
   NOR2X2M U10 (.A(n7),
	.B(n4),
	.Y(N10));
   CLKXOR2X2M U11 (.A(n6),
	.B(Counter[2]),
	.Y(n7));
   NAND2X2M U12 (.A(Counter[0]),
	.B(Counter[1]),
	.Y(n6));
   NOR2BX2M U13 (.AN(Counter[2]),
	.B(n6),
	.Y(N12));
endmodule

module Serializer_test_1 (
	P_Data, 
	clk, 
	rst, 
	Ser_En, 
	Data_Valid, 
	Counter, 
	Ser_Data, 
	test_so, 
	test_se);
   input [7:0] P_Data;
   input clk;
   input rst;
   input Ser_En;
   input Data_Valid;
   input [2:0] Counter;
   output Ser_Data;
   output test_so;
   input test_se;

   // Internal wires
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire [7:1] Data;

   assign test_so = Data[7] ;

   SDFFRQX2M \Data_reg[6]  (.SI(Data[5]),
	.SE(test_se),
	.D(n20),
	.CK(clk),
	.RN(rst),
	.Q(Data[6]));
   SDFFRQX2M \Data_reg[5]  (.SI(Data[4]),
	.SE(test_se),
	.D(n21),
	.CK(clk),
	.RN(rst),
	.Q(Data[5]));
   SDFFRQX2M \Data_reg[4]  (.SI(Data[3]),
	.SE(test_se),
	.D(n22),
	.CK(clk),
	.RN(rst),
	.Q(Data[4]));
   SDFFRQX2M \Data_reg[3]  (.SI(Data[2]),
	.SE(test_se),
	.D(n23),
	.CK(clk),
	.RN(rst),
	.Q(Data[3]));
   SDFFRQX2M \Data_reg[2]  (.SI(Data[1]),
	.SE(test_se),
	.D(n24),
	.CK(clk),
	.RN(rst),
	.Q(Data[2]));
   SDFFRQX2M \Data_reg[1]  (.SI(Ser_Data),
	.SE(test_se),
	.D(n25),
	.CK(clk),
	.RN(rst),
	.Q(Data[1]));
   SDFFRQX2M \Data_reg[7]  (.SI(Data[6]),
	.SE(test_se),
	.D(n19),
	.CK(clk),
	.RN(rst),
	.Q(Data[7]));
   SDFFRQX2M \Data_reg[0]  (.SI(Counter[2]),
	.SE(test_se),
	.D(n18),
	.CK(clk),
	.RN(rst),
	.Q(Ser_Data));
   NOR2BX2M U11 (.AN(Ser_En),
	.B(Data_Valid),
	.Y(n11));
   NOR2X2M U12 (.A(Data_Valid),
	.B(n11),
	.Y(n9));
   OAI2BB1X2M U13 (.A0N(Ser_Data),
	.A1N(n9),
	.B0(n10),
	.Y(n18));
   AOI22X1M U14 (.A0(Data[1]),
	.A1(n11),
	.B0(P_Data[0]),
	.B1(Data_Valid),
	.Y(n10));
   OAI2BB1X2M U15 (.A0N(Data[1]),
	.A1N(n9),
	.B0(n17),
	.Y(n25));
   AOI22X1M U16 (.A0(Data[2]),
	.A1(n11),
	.B0(P_Data[1]),
	.B1(Data_Valid),
	.Y(n17));
   OAI2BB1X2M U17 (.A0N(n9),
	.A1N(Data[2]),
	.B0(n16),
	.Y(n24));
   AOI22X1M U18 (.A0(Data[3]),
	.A1(n11),
	.B0(P_Data[2]),
	.B1(Data_Valid),
	.Y(n16));
   OAI2BB1X2M U19 (.A0N(n9),
	.A1N(Data[3]),
	.B0(n15),
	.Y(n23));
   AOI22X1M U20 (.A0(Data[4]),
	.A1(n11),
	.B0(P_Data[3]),
	.B1(Data_Valid),
	.Y(n15));
   OAI2BB1X2M U21 (.A0N(n9),
	.A1N(Data[4]),
	.B0(n14),
	.Y(n22));
   AOI22X1M U22 (.A0(Data[5]),
	.A1(n11),
	.B0(P_Data[4]),
	.B1(Data_Valid),
	.Y(n14));
   OAI2BB1X2M U23 (.A0N(n9),
	.A1N(Data[5]),
	.B0(n13),
	.Y(n21));
   AOI22X1M U24 (.A0(Data[6]),
	.A1(n11),
	.B0(P_Data[5]),
	.B1(Data_Valid),
	.Y(n13));
   OAI2BB1X2M U25 (.A0N(n9),
	.A1N(Data[6]),
	.B0(n12),
	.Y(n20));
   AOI22X1M U26 (.A0(Data[7]),
	.A1(n11),
	.B0(P_Data[6]),
	.B1(Data_Valid),
	.Y(n12));
   AO22X1M U27 (.A0(n9),
	.A1(Data[7]),
	.B0(P_Data[7]),
	.B1(Data_Valid),
	.Y(n19));
endmodule

module Serializer_Top_test_1 (
	Ser_En, 
	RST, 
	clk, 
	Data_Valid, 
	P_Data_Top, 
	Ser_Data_Top, 
	Ser_Done, 
	test_si, 
	test_so, 
	test_se);
   input Ser_En;
   input RST;
   input clk;
   input Data_Valid;
   input [7:0] P_Data_Top;
   output Ser_Data_Top;
   output Ser_Done;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire [2:0] Counter_Top;

   Counter_test_1 u_Counter (.RST(RST),
	.clk(clk),
	.Ser_En(Ser_En),
	.Counter(Counter_Top),
	.Finish(Ser_Done),
	.test_si(test_si),
	.test_se(test_se));
   Serializer_test_1 u_Serializer (.P_Data(P_Data_Top),
	.clk(clk),
	.rst(RST),
	.Ser_En(Ser_En),
	.Data_Valid(Data_Valid),
	.Counter(Counter_Top),
	.Ser_Data(Ser_Data_Top),
	.test_so(test_so),
	.test_se(test_se));
endmodule

module FSM_test_1 (
	clk, 
	RST, 
	Data_Valid, 
	Par_En, 
	Ser_done, 
	Ser_En, 
	Busy, 
	Mux_Sel, 
	test_si, 
	test_se);
   input clk;
   input RST;
   input Data_Valid;
   input Par_En;
   input Ser_done;
   output Ser_En;
   output Busy;
   output [1:0] Mux_Sel;
   input test_si;
   input test_se;

   // Internal wires
   wire \Current_State[0] ;
   wire n5;
   wire n6;
   wire n7;
   wire [1:0] Next_State;

   SDFFRQX2M \Current_State_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(Next_State[0]),
	.CK(clk),
	.RN(RST),
	.Q(\Current_State[0] ));
   SDFFRQX2M \Current_State_reg[1]  (.SI(Mux_Sel[0]),
	.SE(test_se),
	.D(Next_State[1]),
	.CK(clk),
	.RN(RST),
	.Q(Mux_Sel[1]));
   INVX2M U5 (.A(n5),
	.Y(Ser_En));
   NAND2X2M U6 (.A(n7),
	.B(n5),
	.Y(Busy));
   CLKXOR2X2M U7 (.A(Mux_Sel[1]),
	.B(Mux_Sel[0]),
	.Y(n7));
   NAND2X2M U8 (.A(n7),
	.B(\Current_State[0] ),
	.Y(n5));
   INVX2M U9 (.A(\Current_State[0] ),
	.Y(Mux_Sel[0]));
   OAI2BB2X1M U10 (.A0N(Data_Valid),
	.A1N(Mux_Sel[0]),
	.B0(Mux_Sel[0]),
	.B1(n6),
	.Y(Next_State[0]));
   AOI2B1X1M U11 (.A0(n6),
	.A1N(Par_En),
	.B0(Mux_Sel[0]),
	.Y(Next_State[1]));
   AND2X2M U12 (.A(Ser_done),
	.B(Mux_Sel[1]),
	.Y(n6));
endmodule

module Parity_Unit_test_1 (
	clk, 
	Data_Valid, 
	P_Data, 
	Par_Type, 
	Par_Bit, 
	test_si, 
	test_se);
   input clk;
   input Data_Valid;
   input [7:0] P_Data;
   input Par_Type;
   output Par_Bit;
   input test_si;
   input test_se;

   // Internal wires
   wire N5;
   wire n2;
   wire n3;
   wire n4;
   wire n5;

   SDFFQX1M Par_Bit_reg (.SI(test_si),
	.SE(test_se),
	.D(N5),
	.CK(clk),
	.Q(Par_Bit));
   XNOR2X2M U5 (.A(P_Data[7]),
	.B(P_Data[6]),
	.Y(n5));
   XOR3XLM U6 (.A(Par_Type),
	.B(n2),
	.C(n3),
	.Y(N5));
   XOR3XLM U7 (.A(P_Data[1]),
	.B(P_Data[0]),
	.C(n4),
	.Y(n3));
   XOR3XLM U8 (.A(P_Data[5]),
	.B(P_Data[4]),
	.C(n5),
	.Y(n2));
   XNOR2X2M U9 (.A(P_Data[3]),
	.B(P_Data[2]),
	.Y(n4));
endmodule

module Mux_4 (
	clk, 
	Mux_Sel, 
	Ser_Data, 
	Par_Bit, 
	TX_Out);
   input clk;
   input [1:0] Mux_Sel;
   input Ser_Data;
   input Par_Bit;
   output TX_Out;

   // Internal wires
   wire n2;
   wire n1;
   wire n3;
   wire n4;
   wire n5;

   AND3X2M U3 (.A(Mux_Sel[1]),
	.B(n5),
	.C(Ser_Data),
	.Y(n1));
   CLKINVX12M U4 (.A(n3),
	.Y(TX_Out));
   NOR2XLM U5 (.A(n2),
	.B(n5),
	.Y(n4));
   NOR2X2M U6 (.A(n4),
	.B(n1),
	.Y(n3));
   INVX2M U7 (.A(Mux_Sel[0]),
	.Y(n5));
   NOR2BX2M U8 (.AN(Mux_Sel[1]),
	.B(Par_Bit),
	.Y(n2));
endmodule

module UART_TX_Top_test_1 (
	clk, 
	RST, 
	P_Data_UART, 
	Data_Valid_UART, 
	Par_En_UART, 
	Par_Type_UART, 
	TX_Out_UART, 
	Busy_UART, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input RST;
   input [7:0] P_Data_UART;
   input Data_Valid_UART;
   input Par_En_UART;
   input Par_Type_UART;
   output TX_Out_UART;
   output Busy_UART;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire Ser_En;
   wire Ser_Data_Top;
   wire Ser_Done;
   wire Par_Bit;
   wire [1:0] Mux_Sel;

   Serializer_Top_test_1 u_Serializer_Top (.Ser_En(Ser_En),
	.RST(RST),
	.clk(clk),
	.Data_Valid(Data_Valid_UART),
	.P_Data_Top(P_Data_UART),
	.Ser_Data_Top(Ser_Data_Top),
	.Ser_Done(Ser_Done),
	.test_si(Par_Bit),
	.test_so(test_so),
	.test_se(test_se));
   FSM_test_1 u_FSM (.clk(clk),
	.RST(RST),
	.Data_Valid(Data_Valid_UART),
	.Par_En(Par_En_UART),
	.Ser_done(Ser_Done),
	.Ser_En(Ser_En),
	.Busy(Busy_UART),
	.Mux_Sel(Mux_Sel),
	.test_si(test_si),
	.test_se(test_se));
   Parity_Unit_test_1 u_Parity_Unit (.clk(clk),
	.Data_Valid(Data_Valid_UART),
	.P_Data(P_Data_UART),
	.Par_Type(Par_Type_UART),
	.Par_Bit(Par_Bit),
	.test_si(Mux_Sel[1]),
	.test_se(test_se));
   Mux_4 u_Mux_4 (.clk(clk),
	.Mux_Sel(Mux_Sel),
	.Ser_Data(Ser_Data_Top),
	.Par_Bit(Par_Bit),
	.TX_Out(TX_Out_UART));
endmodule

module UART_test_1 (
	RST, 
	TX_CLK, 
	RX_CLK, 
	RX_IN_S, 
	RX_OUT_P, 
	RX_OUT_V, 
	TX_IN_P, 
	TX_IN_V, 
	TX_OUT_S, 
	TX_OUT_V, 
	Prescale, 
	parity_enable, 
	parity_type, 
	test_si, 
	test_so, 
	test_se, 
	p1, 
	p2, 
	UART_CLK_MUX__L9_N0);
   input RST;
   input TX_CLK;
   input RX_CLK;
   input RX_IN_S;
   output [7:0] RX_OUT_P;
   output RX_OUT_V;
   input [7:0] TX_IN_P;
   input TX_IN_V;
   output TX_OUT_S;
   output TX_OUT_V;
   input [4:0] Prescale;
   input parity_enable;
   input parity_type;
   input test_si;
   output test_so;
   input test_se;
   input p1;
   input p2;
   input UART_CLK_MUX__L9_N0;

   RX_test_1 u_RX1 (.clk_Top(RX_CLK),
	.rst_Top(RST),
	.RX_IN_Top(RX_IN_S),
	.Prescale_Top(Prescale),
	.PAR_EN_TOP(parity_enable),
	.PAR_TYP_Top(parity_type),
	.Data_Valid_Top(RX_OUT_V),
	.P_Data_Top(RX_OUT_P),
	.test_si(test_si),
	.test_se(test_se),
	.p1(p1),
	.UART_CLK_MUX__L9_N0(UART_CLK_MUX__L9_N0));
   UART_TX_Top_test_1 u_UART_TX_Top1 (.clk(TX_CLK),
	.RST(RST),
	.P_Data_UART(TX_IN_P),
	.Data_Valid_UART(TX_IN_V),
	.Par_En_UART(parity_enable),
	.Par_Type_UART(parity_type),
	.TX_Out_UART(TX_OUT_S),
	.Busy_UART(TX_OUT_V),
	.test_si(RX_OUT_V),
	.test_so(test_so),
	.test_se(p2));
endmodule

module Multi_Flop_Synchronizer_test_1 (
	async, 
	clk, 
	rst, 
	sync, 
	test_si, 
	test_se, 
	p1);
   input async;
   input clk;
   input rst;
   output sync;
   input test_si;
   input test_se;
   input p1;

   // Internal wires
   wire \Q[0] ;

   SDFFRQX1M sync_reg (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(rst),
	.Q(sync));
   SDFFRQX1M \Q_reg[0]  (.SI(test_si),
	.SE(p1),
	.D(async),
	.CK(clk),
	.RN(rst),
	.Q(\Q[0] ));
endmodule

module Multi_Flop_Synchronizer_NUM_STAGES2_test_3 (
	async, 
	clk, 
	rst, 
	sync, 
	test_si, 
	test_se);
   input async;
   input clk;
   input rst;
   output sync;
   input test_si;
   input test_se;

   // Internal wires
   wire \Q[0] ;

   SDFFRQX2M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(async),
	.CK(clk),
	.RN(rst),
	.Q(\Q[0] ));
   SDFFRQX1M sync_reg (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(rst),
	.Q(sync));
endmodule

module Multi_Flop_Synchronizer_Multi_bits_NUM_STAGES2_BUS_WIDTH1_test_1 (
	ASYNC, 
	CLK, 
	RST, 
	SYNC, 
	test_si, 
	test_se);
   input [0:0] ASYNC;
   input CLK;
   input RST;
   output [0:0] SYNC;
   input test_si;
   input test_se;

   Multi_Flop_Synchronizer_NUM_STAGES2_test_3 \genblk1[0].u0  (.async(ASYNC[0]),
	.clk(CLK),
	.rst(RST),
	.sync(SYNC[0]),
	.test_si(test_si),
	.test_se(test_se));
endmodule

module Pulse_Gen_test_1 (
	Signal_in, 
	clk, 
	rst, 
	Pulse_out, 
	test_so, 
	test_se);
   input Signal_in;
   input clk;
   input rst;
   output Pulse_out;
   output test_so;
   input test_se;

   // Internal wires
   wire Q;

   assign test_so = Q ;

   SDFFRQX2M Q_reg (.SI(Signal_in),
	.SE(test_se),
	.D(Signal_in),
	.CK(clk),
	.RN(rst),
	.Q(Q));
   NOR2BX2M U4 (.AN(Signal_in),
	.B(Q),
	.Y(Pulse_out));
endmodule

module Data_Sync_test_1 (
	Unsync_Bus, 
	Enable, 
	clk, 
	rst, 
	Sync_Bus, 
	Enable_Pulse, 
	test_si, 
	test_so, 
	test_se);
   input [7:0] Unsync_Bus;
   input Enable;
   input clk;
   input rst;
   output [7:0] Sync_Bus;
   output Enable_Pulse;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire Pulse_out;
   wire Enable_Sync;
   wire n1;
   wire n19;
   wire n21;
   wire n23;
   wire n25;
   wire n27;
   wire n29;
   wire n31;
   wire n33;

   SDFFRQX2M \Sync_Bus_reg[1]  (.SI(Sync_Bus[0]),
	.SE(test_se),
	.D(n31),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[1]));
   SDFFRQX2M \Sync_Bus_reg[0]  (.SI(Enable_Pulse),
	.SE(test_se),
	.D(n33),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[0]));
   SDFFRQX2M \Sync_Bus_reg[3]  (.SI(Sync_Bus[2]),
	.SE(test_se),
	.D(n27),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[3]));
   SDFFRQX2M \Sync_Bus_reg[2]  (.SI(Sync_Bus[1]),
	.SE(test_se),
	.D(n29),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[2]));
   SDFFRQX2M Enable_Pulse_reg (.SI(test_si),
	.SE(test_se),
	.D(Pulse_out),
	.CK(clk),
	.RN(rst),
	.Q(Enable_Pulse));
   SDFFRQX2M \Sync_Bus_reg[5]  (.SI(Sync_Bus[4]),
	.SE(test_se),
	.D(n23),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[5]));
   SDFFRQX2M \Sync_Bus_reg[4]  (.SI(Sync_Bus[3]),
	.SE(test_se),
	.D(n25),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[4]));
   SDFFRQX2M \Sync_Bus_reg[7]  (.SI(Sync_Bus[6]),
	.SE(test_se),
	.D(n19),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[7]));
   SDFFRQX2M \Sync_Bus_reg[6]  (.SI(Sync_Bus[5]),
	.SE(test_se),
	.D(n21),
	.CK(clk),
	.RN(rst),
	.Q(Sync_Bus[6]));
   INVX2M U3 (.A(Pulse_out),
	.Y(n1));
   AO22X1M U4 (.A0(Unsync_Bus[0]),
	.A1(Pulse_out),
	.B0(Sync_Bus[0]),
	.B1(n1),
	.Y(n33));
   AO22X1M U5 (.A0(Unsync_Bus[1]),
	.A1(Pulse_out),
	.B0(Sync_Bus[1]),
	.B1(n1),
	.Y(n31));
   AO22X1M U6 (.A0(Unsync_Bus[2]),
	.A1(Pulse_out),
	.B0(Sync_Bus[2]),
	.B1(n1),
	.Y(n29));
   AO22X1M U7 (.A0(Unsync_Bus[3]),
	.A1(Pulse_out),
	.B0(Sync_Bus[3]),
	.B1(n1),
	.Y(n27));
   AO22X1M U8 (.A0(Unsync_Bus[4]),
	.A1(Pulse_out),
	.B0(Sync_Bus[4]),
	.B1(n1),
	.Y(n25));
   AO22X1M U9 (.A0(Unsync_Bus[5]),
	.A1(Pulse_out),
	.B0(Sync_Bus[5]),
	.B1(n1),
	.Y(n23));
   AO22X1M U10 (.A0(Unsync_Bus[6]),
	.A1(Pulse_out),
	.B0(Sync_Bus[6]),
	.B1(n1),
	.Y(n21));
   AO22X1M U11 (.A0(Unsync_Bus[7]),
	.A1(Pulse_out),
	.B0(Sync_Bus[7]),
	.B1(n1),
	.Y(n19));
   Multi_Flop_Synchronizer_Multi_bits_NUM_STAGES2_BUS_WIDTH1_test_1 u_Multi_Flop_Synchronizer_Multi_bits (.ASYNC(Enable),
	.CLK(clk),
	.RST(rst),
	.SYNC(Enable_Sync),
	.test_si(Sync_Bus[7]),
	.test_se(test_se));
   Pulse_Gen_test_1 u_Pulse_Gen (.Signal_in(Enable_Sync),
	.clk(clk),
	.rst(rst),
	.Pulse_out(Pulse_out),
	.test_so(test_so),
	.test_se(test_se));
endmodule

module Clock_Divider_test_1 (
	i_ref_clk, 
	i_rst_n, 
	i_clk_en, 
	i_div_ratio, 
	o_div_clk, 
	test_si, 
	test_so, 
	test_se, 
	p1);
   input i_ref_clk;
   input i_rst_n;
   input i_clk_en;
   input [3:0] i_div_ratio;
   output o_div_clk;
   input test_si;
   output test_so;
   input test_se;
   input p1;

   // Internal wires
   wire UART_CLK_MUX__Fence_N0__L3_N0;
   wire UART_CLK_MUX__Fence_N0__L2_N0;
   wire UART_CLK_MUX__Fence_N0__L1_N0;
   wire div_clk__SKEWGRP1__MMExc_0_NET;
   wire UART_CLK_MUX__Fence_N0;
   wire HTIE_LTIEHI_NET;
   wire div_clk;
   wire odd_edge_tog;
   wire n17;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n14;
   wire n15;
   wire n16;
   wire [3:0] couter;

   assign test_so = n6 ;

   CLKBUFX24M UART_CLK_MUX__Fence_N0__L3_I0 (.A(UART_CLK_MUX__Fence_N0__L2_N0),
	.Y(UART_CLK_MUX__Fence_N0__L3_N0));
   CLKBUFX24M UART_CLK_MUX__Fence_N0__L2_I0 (.A(UART_CLK_MUX__Fence_N0__L1_N0),
	.Y(UART_CLK_MUX__Fence_N0__L2_N0));
   CLKBUFX24M UART_CLK_MUX__Fence_N0__L1_I0 (.A(UART_CLK_MUX__Fence_N0),
	.Y(UART_CLK_MUX__Fence_N0__L1_N0));
   CLKBUFX20M div_clk__SKEWGRP1__MMExc_0 (.A(div_clk),
	.Y(div_clk__SKEWGRP1__MMExc_0_NET));
   CLKBUFX40M UART_CLK_MUX__Fence_I0 (.A(i_ref_clk),
	.Y(UART_CLK_MUX__Fence_N0));
   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRHQX8M div_clk_reg (.SI(n16),
	.SE(test_se),
	.D(n42),
	.CK(UART_CLK_MUX__Fence_N0),
	.RN(i_rst_n),
	.Q(div_clk));
   SDFFRQX2M \couter_reg[0]  (.SI(test_si),
	.SE(p1),
	.D(n46),
	.CK(UART_CLK_MUX__Fence_N0),
	.RN(i_rst_n),
	.Q(couter[0]));
   SDFFRQX2M \couter_reg[1]  (.SI(n4),
	.SE(test_se),
	.D(n44),
	.CK(UART_CLK_MUX__Fence_N0),
	.RN(i_rst_n),
	.Q(couter[1]));
   SDFFRQX2M \couter_reg[2]  (.SI(couter[1]),
	.SE(test_se),
	.D(n3),
	.CK(UART_CLK_MUX__Fence_N0),
	.RN(i_rst_n),
	.Q(couter[2]));
   SDFFRX1M \couter_reg[3]  (.SI(n14),
	.SE(test_se),
	.D(n43),
	.CK(UART_CLK_MUX__Fence_N0),
	.RN(i_rst_n),
	.Q(n16),
	.QN(n17));
   OAI31X1M U9 (.A0(i_div_ratio[1]),
	.A1(i_div_ratio[3]),
	.A2(i_div_ratio[2]),
	.B0(HTIE_LTIEHI_NET),
	.Y(n23));
   NOR3X2M U12 (.A(n23),
	.B(n4),
	.C(n29),
	.Y(n26));
   AOI21X2M U13 (.A0(n4),
	.A1(n5),
	.B0(n23),
	.Y(n30));
   INVX2M U14 (.A(n23),
	.Y(n15));
   OAI2BB2X1M U15 (.A0N(n7),
	.A1N(n26),
	.B0(n30),
	.B1(n7),
	.Y(n44));
   INVX2M U16 (.A(n29),
	.Y(n5));
   OAI21X2M U17 (.A0(i_div_ratio[0]),
	.A1(n33),
	.B0(n32),
	.Y(n29));
   OAI32XLM U18 (.A0(n29),
	.A1(couter[0]),
	.A2(n23),
	.B0(n15),
	.B1(n4),
	.Y(n46));
   OAI21X2M U19 (.A0(couter[1]),
	.A1(n29),
	.B0(n30),
	.Y(n27));
   CLKXOR2X2M U20 (.A(div_clk__SKEWGRP1__MMExc_0_NET),
	.B(n22),
	.Y(n42));
   NOR2XLM U21 (.A(n5),
	.B(n23),
	.Y(n22));
   NAND4X2M U22 (.A(n36),
	.B(n39),
	.C(n40),
	.D(n17),
	.Y(n33));
   CLKXOR2X2M U23 (.A(n41),
	.B(couter[2]),
	.Y(n40));
   XOR3XLM U24 (.A(i_div_ratio[2]),
	.B(i_div_ratio[1]),
	.C(couter[1]),
	.Y(n39));
   OAI21X2M U25 (.A0(i_div_ratio[1]),
	.A1(i_div_ratio[2]),
	.B0(i_div_ratio[3]),
	.Y(n41));
   OAI21X2M U26 (.A0(n24),
	.A1(n17),
	.B0(n25),
	.Y(n43));
   NAND4X2M U27 (.A(n26),
	.B(couter[2]),
	.C(couter[1]),
	.D(n17),
	.Y(n25));
   NOR2X2M U28 (.A(n14),
	.B(n27),
	.Y(n24));
   NAND2X2M U29 (.A(i_div_ratio[0]),
	.B(n34),
	.Y(n32));
   OAI32X1M U30 (.A0(n35),
	.A1(n36),
	.A2(n37),
	.B0(n33),
	.B1(n6),
	.Y(n34));
   CLKXOR2X2M U31 (.A(i_div_ratio[3]),
	.B(couter[2]),
	.Y(n37));
   NAND3X2M U32 (.A(n17),
	.B(n6),
	.C(n38),
	.Y(n35));
   CLKXOR2X2M U33 (.A(i_div_ratio[1]),
	.B(couter[0]),
	.Y(n36));
   INVX2M U34 (.A(couter[1]),
	.Y(n7));
   INVX2M U35 (.A(couter[0]),
	.Y(n4));
   CLKXOR2X2M U36 (.A(i_div_ratio[2]),
	.B(n7),
	.Y(n38));
   INVX2M U37 (.A(n28),
	.Y(n3));
   AOI32X1M U38 (.A0(n26),
	.A1(n14),
	.A2(couter[1]),
	.B0(n27),
	.B1(couter[2]),
	.Y(n28));
   CLKXOR2X2M U40 (.A(odd_edge_tog),
	.B(n31),
	.Y(n45));
   NOR2XLM U41 (.A(n23),
	.B(n32),
	.Y(n31));
   INVX2M U42 (.A(couter[2]),
	.Y(n14));
   MX2X3M U43 (.S0(n15),
	.B(div_clk),
	.A(UART_CLK_MUX__Fence_N0__L3_N0),
	.Y(o_div_clk));
   SDFFSX1M odd_edge_tog_reg (.SI(div_clk__SKEWGRP1__MMExc_0_NET),
	.SE(test_se),
	.D(n45),
	.CK(UART_CLK_MUX__Fence_N0),
	.SN(i_rst_n),
	.Q(odd_edge_tog),
	.QN(n6));
endmodule

module Multi_Flop_Synchronizer_NUM_STAGES2_test_1 (
	async, 
	clk, 
	rst, 
	sync, 
	test_si, 
	test_se);
   input async;
   input clk;
   input rst;
   output sync;
   input test_si;
   input test_se;

   // Internal wires
   wire HTIE_LTIEHI_NET;
   wire \Q[0] ;

   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX2M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(HTIE_LTIEHI_NET),
	.CK(clk),
	.RN(rst),
	.Q(\Q[0] ));
   SDFFRQX1M sync_reg (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(rst),
	.Q(sync));
endmodule

module RST_Sync_test_0 (
	RST, 
	clk, 
	Sync_RST, 
	test_si, 
	test_se);
   input RST;
   input clk;
   output Sync_RST;
   input test_si;
   input test_se;

   Multi_Flop_Synchronizer_NUM_STAGES2_test_1 u_Multi_Flop_Synchronizer (.clk(clk),
	.rst(RST),
	.sync(Sync_RST),
	.test_si(test_si),
	.test_se(test_se));
endmodule

module Multi_Flop_Synchronizer_NUM_STAGES2_test_2 (
	async, 
	clk, 
	rst, 
	sync, 
	test_si, 
	test_se);
   input async;
   input clk;
   input rst;
   output sync;
   input test_si;
   input test_se;

   // Internal wires
   wire HTIE_LTIEHI_NET;
   wire \Q[0] ;

   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX2M sync_reg (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(rst),
	.Q(sync));
   SDFFRQX2M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(HTIE_LTIEHI_NET),
	.CK(clk),
	.RN(rst),
	.Q(\Q[0] ));
endmodule

module RST_Sync_test_1 (
	RST, 
	clk, 
	Sync_RST, 
	test_si, 
	test_se);
   input RST;
   input clk;
   output Sync_RST;
   input test_si;
   input test_se;

   Multi_Flop_Synchronizer_NUM_STAGES2_test_2 u_Multi_Flop_Synchronizer (.clk(clk),
	.rst(RST),
	.sync(Sync_RST),
	.test_si(test_si),
	.test_se(test_se));
endmodule

